{"version":3,"sources":["js/jquery.terminal.js"],"names":["ctx","sprintf","cache","hasOwnProperty","arguments","parse","format","call","parse_tree","argv","cursor","tree_length","length","node_type","arg","output","i","k","match","pad","pad_character","pad_length","get_type","push","test","toString","String","fromCharCode","parseInt","toExponential","parseFloat","toFixed","substring","toUpperCase","charAt","str_repeat","join","fmt","_fmt","arg_names","exec","field_list","replacement_field","field_match","vsprintf","_argv","slice","splice","apply","variable","Object","prototype","toLowerCase","input","multiplier","global","window","factory","undefined","root","define","amd","module","exports","jQuery","wcwidth","require","$","debug","str","console","log","DelayQueue","callbacks","Callbacks","resolved","this","resolve","fire","add","fn","omap","o","result","each","v","text_length","map","text","get","reduce","a","b","Clone","clone_object","object","tmp","isArray","clone_array","key","array","is_function","Array","Error","item","bind","clone","localStorage","hasLS","testKey","storage","setItem","removeItem","error","hasCookies","document","cookie","split","e","isLS","wls","n","c","wc","dt","Date","setTime","getTime","toGMTString","rls","rc","nn","ca","indexOf","dls","dc","extend","Storage","set","remove","everyTime","interval","label","times","belay","timer","oneTime","stopTime","guid","regex","powers","ms","cs","ds","s","das","hs","ks","timeParse","value","trim","num","mult","element","counter","isFunction","isNaN","constructor","Number","$timers","$timerID","handler","inProgress","setInterval","timers","ret","lab","clearInterval","_fn","navigator","userAgent","one","els","undef","nativeSplit","compliantExecNpcg","self","separator","limit","flags","ignoreCase","multiline","extended","sticky","lastLastIndex","separator2","lastIndex","lastLength","RegExp","source","index","replace","caret","pos","target","isContentEditable","contentEditable","getSelection","focus","range1","getRangeAt","range2","cloneRange","selectNodeContents","setEnd","endContainer","endOffset","selectionStart","selection","createRange","body","createTextRange","moveToElementText","setEndPoint","range","duplicate","bookmark","getBookmark","moveToBookmark","moveStart","collapse","firstChild","setSelectionRange","select","is","resizer","callback","trigger","unbind","$this","iframe","resize_handler","data","has","removeData","ResizeObserver","observer","unobserve","find","contentWindow","off","first","observe","on","addClass","appendTo","isFullyInViewport","container","box","getBoundingClientRect","viewport","top","bottom","height","a11y_hide","attr","role","aria-hidden","excepctions","alert_exception","message","exception_message","setTimeout","scrollbar_event","node","left","offset","outerWidth","clientX","fileName","Cycle","rotate","skip","init","defined","filter","append","front","restart","Boolean","forEach","Stack","size","pop","concat","History","name","memory","enabled","storage_key","JSON","stringify","new_data","reset","last","end","position","current","next","old","previous","clear","purge","enable","disable","toggle","cmd_index","cmd","defaults","mask","caseSensitiveSearch","historySize","prompt","history","onPositionChange","noop","onCommandChange","clickTimeout","holdTimeout","holdRepeatTimeout","repeatTimeoutKeys","tabindex","tabs","options","settings","maybe_data","id","clip","autocapitalize","spellcheck","is_mobile","val","width","num_chars","char_width","last_rendered_prompt","prompt_last_line","prompt_len","prompt_node","reverse_search","rev_search_str","reverse_search_position","backup_prompt","command","last_command","kill_text","formatted_position","animation","restart_animation","paste_count","get_char_pos","closest","parent","prevAll","prevUntil","nextUntil","key_mapping","SPACEBAR","UP","DOWN","LEFT","RIGHT","DEL","MULTIPLY","DIVIDE","SUBTRACT","ADD","get_key","combo","ctrlKey","metaKey","shiftKey","altKey","keymap","default_keymap","ALT+D","delete_word","HOLD+DELETE","HOLD+SHIFT+DELETE","ENTER","historyFilter","prev_command","no_keydown","commands","draw_prompt","SHIFT+ENTER","insert","BACKSPACE","backspace_key","SHIFT+BACKSPACE","TAB","CTRL+D","DELETE","ARROWUP","prev_history","CTRL+P","ARROWDOWN","next_history","CTRL+N","ARROWLEFT","HOLD+ARROWLEFT","CTRL+B","CTRL+ARROWLEFT","len","CTRL+R","reverse_history_search","draw_reverse_prompt","redraw","CTRL+G","ARROWRIGHT","right","HOLD+ARROWRIGHT","CTRL+F","CTRL+ARROWRIGHT","re","F12","return_true","END","CTRL+E","HOME","home","CTRL+A","SHIFT+INSERT","paste_event","CTRL+SHIFT+T","CTRL+W","delete_word_backward","HOLD+BACKSPACE","HOLD+SHIFT+BACKSPACE","CTRL+H","CTRL+X","CTRL+C","CTRL+T","CTRL+Y","CTRL+V","META+V","CTRL+K","text_to_clipboard","CTRL+U","CTRL+TAB","META+`","META+R","META+L","clipboard","m","isenabled","paste","first_up_history","mobile_focus","fix_cursor","animation_supported","style","getComputedStyle","animationName","getPropertyValue","_class","className","fix_textarea","position_only","is_android","removeClass","new_cursor","insertBefore","animating","blink","toggleClass","clear_reverse_state","history_data","save_string","j","terminal","escape_regex","get_char_width","$prompt","html","get_num_chars","Math","floor","get_splitted_command_line","string","split_equal","skip_empty","line","strip","escape_brackets","first_len","strlen","splitted","formatting","skip_formatted_position","escape_formatting","unixFormattingEscapeBrackets","formatted","apply_formatters","max","normalize","stack","before","encoded","encode","wrap","is_formatting","start","prev","after","cursor_line","draw_cursor_line","ch_unit_bug","before_str","c_before","noselect","cursor_len","setProperty","div","lines_after","lines","last_ins","insertAfter","lines_before","css","original_string","from_last","last_len","new_pos","line_index","current_len","msg","strings","redrawError","in_line","is_css_variables_supported","find_position","cmp","search_pos","opts","guess","codepoint_len","binary_search","chars","split_characters","crlf","encoded_last_line","last_line","fire_change_command","clean","option","delete","stay","removed","silent","new_keymap","original","bare_command","destroy","doc","keypress_event","keydown_event","input_event","user_prompt","relative","refresh","display_position","command_len","new_formatted_pos","visible","show","resize","new_mask","prevent_keypress","dead_key","single_key","no_keypress","no_key","backspace","process","hold","hold_pause","skip_insert","is_backspace","which","is_single","clear_reverse_search_key","fake","exception","keydown","clear_hold","documentElement","keypress","is_key_native","normalized","inArray","keyCode","event","type","chr","Event","keycode","charCodeAt","abs","was_down","count","$target","down","button","originalEvent","get_selected_text","KeyboardEvent","combine_chr_re","astral_symbols_re","emoji_re","mobile_re","tablet_re","format_split_re","format_parts_re","format_re","format_exist_re","format_full_re","color_hex_re","url_re","url_nf_re","email_re","command_re","extended_command_re","format_begin_re","format_start_re","format_end_re","format_exec_re","float_re","re_re","string_re","unclosed_strings_re","domPrefixes","elm","createElement","is_ch_unit_supported","agent","CSS","supports","proto","getOwnPropertyDescriptor","check","substr","vendor","opera","base","ch","space","bare_text","safe","get_next_character","match_emoji","match_combo","normalize_position","acc","char_width_prop","extra_css","bare","wide_characters","specs","arr","spec","sum","compare_fn","mid","$div","select_all","execCommand","get_textarea_selection","textarea","selectionEnd","clear_textarea_selection","common_string","matchCase","string_case","candidate","candidateLower","currentLower","trigger_terminal_change","terminals","term","onTerminalChange","setBaseAndExtent","setStart","childNodes","removeAllRanges","addRange","process_command","shift","args","quotes","rest","args_quotes","version","date","color_names","valid_color","color","unclosed_strings","special","have_formatting","format_split","tracking_replace","rex","replacement","new_string","rep_string","new_position","last_index","c0","iterate_formatting","is_space","entity_re","match_entity","is_open_formatting","is_escape_bracket","is_text","not_formatting","opening","in_text","prev_space","braket","char","start_index","end_index","start_formatting","end_formatting","prev_index","_","semicolons","keep_words","prev_format","first_index","line_length","last_char","last_bracket","last_iteraction","can_break","stripped","text_len","new_index","closed_formatting","matched","amp","sp","nested_formatting","test_lengths","formatter","__no_warn__","warn","formatters","apply_function_formatter","__meta__","found_position","partials","this_len","length_before","loop","position_partial","partial","Exception","safe_text","slashes","linksNoReferrer","linksNoFollow","anyLinks","background","data_text","style_str","text_decoration","extra","rel","unshift","unescape_brackets","columns","cols","no_formatting","lengths","column_limit","whole","bracket","active","last_id","parse_argument","strict","parse_string","quote","parse_arguments","split_arguments","parse_command","split_command","parse_options","boolean","token","single","extended_command","invokeMethods","change_hash","obj","eval","done","iterator","Symbol","replacer","search","new_formatter","Terminal_Exception","hidden","warnings","ids","jrpc","url","method","params","success","deferred","Deferred","isPlainObject","validJSONRPC","response","isNumeric","request","jsonrpc","ajax","beforeSend","jxhr","status","jqXHR","content_type","getResponseHeader","json","reject","contentType","dataType","async","promise","get_char_size","temp","rect","char_size","get_num_rows","all","same","same_case","version_set","copyright","version_string","reg","name_ver","signatures","exit","maskChar","checkArity","raw","exceptionHandler","pauseEvents","softPause","cancelableAjax","processArguments","processRPCResponse","completionEscape","convertLinks","scrollObject","historyState","importHistory","echoCommand","scrollOnEcho","login","outputLimit","onAjaxError","pasteImage","scrollBottomOffset","wordAutocomplete","caseSensitiveAutocomplete","describe","onRPCError","doubleTab","completion","onInit","onClear","onBlur","onFocus","onExit","onPush","onPop","onAfterRedraw","onEchoCommand","onFlush","comletionParameters","wrongPasswordTryAgain","wrongPassword","ajaxAbortError","wrongArity","commandNotFound","oneRPCWithIgnore","oneInterpreterFunction","loginFunctionMissing","noTokenError","serverResponse","wrongGreetings","notWhileLogin","loginIsNotAFunction","canExitError","invalidCompletion","invalidSelector","invalidTerminalId","password","recursiveCall","notAString","invalidStrings","defunctTerminal","requests","save_state","hash_commands","fire_hash_change","first_instance","init_interpreter","StorageHelper","get_processed_command","display_object","echo","print_line","url_spec","pause","file","code","resume","display_json_rpc_error","at","make_basic_json_rpc","auth","interpreter","display_exception","ajax_error","make_object_interpreter","arity","fallback","user_command","keys","onCommandNotFound","xhr","responseText","make_json_rpc_object","jrpc_success","jrpc_request","jrpc_response","procs","field","interpreter_object","proc","args_len","help","names","found","make_interpreter","user_intrp","finalize","rpc_count","fn_interpreter","recur","interpreters","new_obj","ignoreSystemDescribe","make_json_rpc_login","user","passwd","output_buffer","NEW_LINE","buffer_line","format_options","words","keepWords","process_line","line_settings","is_fn","parseObject","parts","prev_cmd","update","scroll","command_line","detached_output","empty","detach","lines_to_show","rows","flush","fire_event","limit_lines","$lines","for_remove","parents","$self","show_greetings","greetings","signature","echo_command","get_command","then","have_scrollbar","innerWidth","clientWidth","fill","restore_state","command_idx","import_view","export_view","maybe_update_hash","location","hash","first_command","resume_callbacks","init_state","execHash","after_exec","saved_change_hash","invoke","when","paused","ghost","level","logout","in_login","get_token","set_token","global_logout","onBeforeLogout","clear_loging_storage","onAfterLogout","global_login_fn","initialize","prefix_name","maybe_append_name","interpreter_name","prepare_top_interpreter","login_name","fun","init_queue","onStart","move_cursor_visible","scrollTop","hashchange","decodeURIComponent","was_paused","onPause","user_key_down","get_position","set_command","CTRL+L","orignal","caseSensitive","complete","word","escape","before_cursor","scroll_to_bottom","PAGEDOWN","PAGEUP","key_down","tab_count","r","readyState","abort","key_press","ready","queue","selector","terminal_id","num_rows","logins","command_queue","when_ready","cmd_ready","old_width","old_height","delayed_commands","defunct","frozen","autologin","old_enabled","visibility_observer","mutation_observer","user_export","get_prompt","view","set_prompt","ignore_hash","state","d","infinite","login_callback","set_mask","pass","cmd_strings","double_quotes","single_quote","prev_string","sensitive","slash","matched_strings","pre","post","to_insert","set_position","reverse","common","set_interpreter","overwrite_interpreter","numChars","numRows","history_state","run","setImmediate","clear_history_state","x","animate","freeze","lenghts","is_bottom","get_output","new_num_chars","new_num_rows","wrapper","replaceWith","e1","e2","remove_line","locals","lineNumber","trace","amount","round","prop","local","local_name","intrp","read","cancel","defer","infiniteLogin","push_settings","object_or_name","invoke_key","shortcut","ctrl","alt","meta","reversed_keycodes","prefix","font_resizer","blur_terminal","focus_terminal","disconnect","scrollHeight","scroll_height","scroll_top","outerHeight","keycodes","3","6","8","9","12","13","16","17","18","19","20","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","48","49","50","51","52","53","54","55","56","57","91","93","144","145","181","182","183","186","187","188","189","190","191","192","219","220","221","222","224","225","246","247","248","249","250","251","letter","base_interpreter","is_type","clipboardData","items","blob","getAsFile","URL","webkitURL","createObjectURL","getAsString","getData","itrp","onResize","mousewheel","elementFromPoint","clientY","$win","addEventListener","click","ignore_elements","mousedown","mouseup","timeout","dblclick","pageX","pageY","props","href","preventDefault","calculate_char_size","create_resizers","observe_visibility","was_enabled","visibility_checker","IntersectionObserver","in_dom","MutationObsrv","MutationObserver","WebKitMutationObserver","childList","exec_spec","delta","stopPropagation","onmousewheel","wheelDelta","deltaY","detail"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAuDA,SAAUA,GACN,IAAIC,EAAU,WACV,IAAKA,EAAQC,MAAMC,eAAeC,UAAU,IAAK,CAC7CH,EAAQC,MAAME,UAAU,IAAMH,EAAQI,MAAMD,UAAU,IAE1D,OAAOH,EAAQK,OAAOC,KAAK,KAAMN,EAAQC,MAAME,UAAU,IAAKA,YAElEH,EAAQK,OAAS,SAASE,EAAYC,GAClC,IAAIC,EAAS,EAAGC,EAAcH,EAAWI,OAAQC,EAAY,GAAIC,EAAKC,EAAS,GAAIC,EAAGC,EAAGC,EAAOC,EAAKC,EAAeC,EACpH,IAAKL,EAAI,EAAGA,EAAIL,EAAaK,IAAK,CAC9BH,EAAYS,EAASd,EAAWQ,IAChC,GAAIH,IAAc,SAAU,CACxBE,EAAOQ,KAAKf,EAAWQ,SAEtB,GAAIH,IAAc,QAAS,CAC5BK,EAAQV,EAAWQ,GACnB,GAAIE,EAAM,GAAI,CACVJ,EAAML,EAAKC,GACX,IAAKO,EAAI,EAAGA,EAAIC,EAAM,GAAGN,OAAQK,IAAK,CAClC,IAAKH,EAAIX,eAAee,EAAM,GAAGD,IAAK,CAClC,MAAMhB,EAAQ,yCAA0CiB,EAAM,GAAGD,IAErEH,EAAMA,EAAII,EAAM,GAAGD,UAGtB,GAAIC,EAAM,GAAI,CACfJ,EAAML,EAAKS,EAAM,QAEhB,CACDJ,EAAML,EAAKC,KAGf,GAAI,OAAOc,KAAKN,EAAM,KAAQI,EAASR,KAAS,SAAW,CACvD,MAAMb,EAAQ,0CAA2CqB,EAASR,IAEtE,OAAQI,EAAM,IACV,IAAK,IAAKJ,EAAMA,EAAIW,SAAS,GAAI,MACjC,IAAK,IAAKX,EAAMY,OAAOC,aAAab,GAAM,MAC1C,IAAK,IAAKA,EAAMc,SAASd,EAAK,IAAK,MACnC,IAAK,IAAKA,EAAMI,EAAM,GAAKJ,EAAIe,cAAcX,EAAM,IAAMJ,EAAIe,gBAAiB,MAC9E,IAAK,IAAKf,EAAMI,EAAM,GAAKY,WAAWhB,GAAKiB,QAAQb,EAAM,IAAMY,WAAWhB,GAAM,MAChF,IAAK,IAAKA,EAAMA,EAAIW,SAAS,GAAI,MACjC,IAAK,IAAKX,GAAQA,EAAMY,OAAOZ,KAASI,EAAM,GAAKJ,EAAIkB,UAAU,EAAGd,EAAM,IAAMJ,EAAM,MACtF,IAAK,IAAKA,EAAMA,IAAQ,EAAG,MAC3B,IAAK,IAAKA,EAAMA,EAAIW,SAAS,IAAK,MAClC,IAAK,IAAKX,EAAMA,EAAIW,SAAS,IAAIQ,cAAe,MAEpDnB,EAAO,QAAQU,KAAKN,EAAM,KAAOA,EAAM,IAAMJ,GAAO,EAAI,KAAOA,EAAMA,EACrEM,EAAgBF,EAAM,GAAKA,EAAM,KAAO,IAAM,IAAMA,EAAM,GAAGgB,OAAO,GAAK,IACzEb,EAAaH,EAAM,GAAKQ,OAAOZ,GAAKF,OACpCO,EAAMD,EAAM,GAAKiB,EAAWf,EAAeC,GAAc,GACzDN,EAAOQ,KAAKL,EAAM,GAAKJ,EAAMK,EAAMA,EAAML,IAGjD,OAAOC,EAAOqB,KAAK,KAGvBnC,EAAQC,MAAQ,GAEhBD,EAAQI,MAAQ,SAASgC,GACrB,IAAIC,EAAOD,EAAKnB,EAAQ,GAAIV,EAAa,GAAI+B,EAAY,EACzD,MAAOD,EAAM,CACT,IAAKpB,EAAQ,YAAYsB,KAAKF,MAAW,KAAM,CAC3C9B,EAAWe,KAAKL,EAAM,SAErB,IAAKA,EAAQ,WAAWsB,KAAKF,MAAW,KAAM,CAC/C9B,EAAWe,KAAK,UAEf,IAAKL,EAAQ,uFAAuFsB,KAAKF,MAAW,KAAM,CAC3H,GAAIpB,EAAM,GAAI,CACVqB,GAAa,EACb,IAAIE,EAAa,GAAIC,EAAoBxB,EAAM,GAAIyB,EAAc,GACjE,IAAKA,EAAc,sBAAsBH,KAAKE,MAAwB,KAAM,CACxED,EAAWlB,KAAKoB,EAAY,IAC5B,OAAQD,EAAoBA,EAAkBV,UAAUW,EAAY,GAAG/B,WAAa,GAAI,CACpF,IAAK+B,EAAc,wBAAwBH,KAAKE,MAAwB,KAAM,CAC1ED,EAAWlB,KAAKoB,EAAY,SAE3B,IAAKA,EAAc,aAAaH,KAAKE,MAAwB,KAAM,CACpED,EAAWlB,KAAKoB,EAAY,QAE3B,CACD,KAAK,uBAIZ,CACD,KAAK,iBAETzB,EAAM,GAAKuB,MAEV,CACDF,GAAa,EAEjB,GAAIA,IAAc,EAAG,CACjB,KAAK,4EAET/B,EAAWe,KAAKL,OAEf,CACD,KAAK,iBAEToB,EAAOA,EAAKN,UAAUd,EAAM,GAAGN,QAEnC,OAAOJ,GAGX,IAAIoC,EAAW,SAASP,EAAK5B,EAAMoC,GAC/BA,EAAQpC,EAAKqC,MAAM,GACnBD,EAAME,OAAO,EAAG,EAAGV,GACnB,OAAOpC,EAAQ+C,MAAM,KAAMH,IAM/B,SAASvB,EAAS2B,GACd,OAAOC,OAAOC,UAAU1B,SAASlB,KAAK0C,GAAUH,MAAM,GAAI,GAAGM,cAGjE,SAASjB,EAAWkB,EAAOC,GACvB,IAAK,IAAIvC,EAAS,GAAIuC,EAAa,EAAGvC,IAASuC,GAAcD,EAAO,EACpE,OAAOtC,EAAOqB,KAAK,IAMvBpC,EAAIC,QAAUA,EACdD,EAAI4C,SAAWA,GAjInB,QAkIUW,SAAW,YAAcA,OAASC,SAG5C,SAAUC,EAASC,GACf,IAAIC,SAAcH,SAAW,YAAcA,OAASD,OACpD,UAAWK,SAAW,YAAcA,OAAOC,IAAK,CAG5CD,OAAO,CAAC,SAAU,WAAYH,QAC3B,UAAWK,SAAW,UAAYA,OAAOC,QAAS,CAErDD,OAAOC,QAAU,SAASJ,EAAMK,EAAQC,GACpC,GAAID,IAAWN,EAAW,CAKtB,GAAIF,SAAWE,EAAW,CACtBM,EAASE,QAAQ,cACd,CACHF,EAASE,QAAQ,SAARA,CAAkBP,IAGnC,GAAIM,IAAYP,EAAW,CACvBO,EAAUC,QAAQ,WAEtBT,EAAQO,EAAQC,GAChB,OAAOD,OAER,CAGHP,EAAQE,EAAKK,OAAQL,EAAKM,WA7BlC,CA+BG,SAASE,EAAGF,QAASP,WACpB,aAKA,SAASU,MAAMC,GACX,GAAI,MAAO,CACPC,QAAQC,IAAIF,IAQpB,SAASG,aACL,IAAIC,EAAYN,EAAEO,YAClB,IAAIC,EAAW,MACfC,KAAKC,QAAU,WACXJ,EAAUK,OACVH,EAAW,MAEfC,KAAKG,IAAM,SAASC,GAChB,GAAIL,EAAU,CACVK,QACG,CACHP,EAAUM,IAAIC,KAO1Bb,EAAEc,KAAO,SAASC,EAAGF,GACjB,IAAIG,EAAS,GACbhB,EAAEiB,KAAKF,EAAG,SAASjE,EAAGoE,GAClBF,EAAOlE,GAAK+D,EAAGzE,KAAK2E,EAAGjE,EAAGoE,KAE9B,OAAOF,GAEXhB,EAAEa,GAAGM,YAAc,WACf,OAAOV,KAAKW,IAAI,WACZ,OAAOpB,EAAES,MAAMY,OAAO5E,SACvB6E,MAAMC,OAAO,SAASC,EAAGC,GACxB,OAAOD,EAAIC,GACZ,IAKP,IAAIC,MAAQ,CACRC,aAAc,SAASC,GACnB,IAAIC,EAAM,GACV,UAAWD,IAAW,SAAU,CAC5B,GAAI5B,EAAE8B,QAAQF,GAAS,CACnB,OAAOnB,KAAKsB,YAAYH,QACrB,GAAIA,IAAW,KAAM,CACxB,OAAOA,MACJ,CACH,IAAK,IAAII,KAAOJ,EAAQ,CACpB,GAAI5B,EAAE8B,QAAQF,EAAOI,IAAO,CACxBH,EAAIG,GAAOvB,KAAKsB,YAAYH,EAAOI,SAChC,UAAWJ,EAAOI,KAAS,SAAU,CACxCH,EAAIG,GAAOvB,KAAKkB,aAAaC,EAAOI,QACjC,CACHH,EAAIG,GAAOJ,EAAOI,MAKlC,OAAOH,GAEXE,YAAa,SAASE,GAClB,IAAKC,YAAYC,MAAMnD,UAAUoC,KAAM,CACnC,MAAM,IAAIgB,MAAM,4CACA,gBAEpB,OAAOH,EAAMtD,MAAM,GAAGyC,IAAI,SAASiB,GAC/B,UAAWA,IAAS,SAAU,CAC1B,OAAO5B,KAAKkB,aAAaU,OACtB,CACH,OAAOA,IAEbC,KAAK7B,SAGf,IAAI8B,MAAQ,SAASX,GACjB,OAAOF,MAAMC,aAAaC,IAO9B,IAAIY,cAEJ,WACI,IAAIC,EAAQ,WACR,IACI,IAAIC,EAAU,OAAQC,EAAUtD,OAAOmD,aACvCG,EAAQC,QAAQF,EAAS,KACzBC,EAAQE,WAAWH,GACnB,OAAO,KACT,MAAOI,GACL,OAAO,QAGf,IAAIC,EAAa,WACb,IACIC,SAASC,OAAOC,MAAM,KACtB,OAAO,KACT,MAAOC,GACL,OAAO,QAIf,IAAIC,EAAOX,IAEX,SAASY,EAAIC,EAAGpC,GACZ,IAAIqC,EACJ,UAAWD,IAAM,iBAAmBpC,IAAM,SAAU,CAChDsB,aAAac,GAAKpC,EAClB,OAAO,UACJ,UAAWoC,IAAM,iBAAmBpC,IAAM,YAAa,CAC1D,IAAKqC,KAAKD,EAAG,CACT,GAAIA,EAAEtH,eAAeuH,GAAI,CACrBf,aAAae,GAAKD,EAAEC,IAG5B,OAAO,KAEX,OAAO,MAEX,SAASC,EAAGF,EAAGpC,GACX,IAAIuC,EAAIN,EAAGI,EACXE,EAAK,IAAIC,KACTD,EAAGE,QAAQF,EAAGG,UAAY,SAC1BT,EAAI,aAAeM,EAAGI,cACtB,UAAWP,IAAM,iBAAmBpC,IAAM,SAAU,CAChD8B,SAASC,OAASK,EAAI,IAAMpC,EAAIiC,EAAI,WACpC,OAAO,UACJ,UAAWG,IAAM,iBAAmBpC,IAAM,YAAa,CAC1D,IAAKqC,KAAKD,EAAG,CACT,GAAIA,EAAEtH,eAAeuH,GAAI,CACrBP,SAASC,OAASM,EAAI,IAAMD,EAAEC,GAAKJ,EAAI,YAG/C,OAAO,KAEX,OAAO,MAEX,SAASW,EAAIR,GACT,OAAOd,aAAac,GAExB,SAASS,EAAGT,GACR,IAAIU,EAAIC,EAAIpH,EAAG0G,EACfS,EAAKV,EAAI,IACTW,EAAKjB,SAASC,OAAOC,MAAM,KAC3B,IAAKrG,EAAI,EAAGA,EAAIoH,EAAGxH,OAAQI,IAAK,CAC5B0G,EAAIU,EAAGpH,GACP,MAAO0G,EAAExF,OAAO,KAAO,IAAK,CACxBwF,EAAIA,EAAE1F,UAAU,EAAG0F,EAAE9G,QAEzB,GAAI8G,EAAEW,QAAQF,KAAQ,EAAG,CACrB,OAAOT,EAAE1F,UAAUmG,EAAGvH,OAAQ8G,EAAE9G,SAGxC,OAAO,KAEX,SAAS0H,EAAIb,GACT,cAAcd,aAAac,GAE/B,SAASc,EAAGd,GACR,OAAOE,EAAGF,EAAG,IAAK,GAStB,IAAKP,MAAiBK,EAAM,CACxBZ,aAAe,GACfxC,EAAEqE,OAAO,CACLC,QAAS,CACLC,IAAKlB,EACL/B,IAAKwC,EACLU,OAAQL,SAGb,CACH,GAAIf,EAAM,CACNZ,aAAenD,OAAOmD,aAE1BxC,EAAEqE,OAAO,CACLC,QAAS,CACLC,IAAKnB,EAAOC,EAAMG,EAClBlC,IAAK8B,EAAOU,EAAMC,EAClBS,OAAQpB,EAAOe,EAAMC,OAvGrC,GA+GA,IAAIvE,OAASG,GAEb,SAAUA,GACNH,OAAOgB,GAAGwD,OAAO,CACbI,UAAW,SAASC,EAAUC,EAAO9D,EAAI+D,EAAOC,GAC5C,OAAOpE,KAAKQ,KAAK,WACbpB,OAAOiF,MAAMlE,IAAIH,KAAMiE,EAAUC,EAAO9D,EAAI+D,EAAOC,MAG3DE,QAAS,SAASL,EAAUC,EAAO9D,GAC/B,OAAOJ,KAAKQ,KAAK,WACbpB,OAAOiF,MAAMlE,IAAIH,KAAMiE,EAAUC,EAAO9D,EAAI,MAGpDmE,SAAU,SAASL,EAAO9D,GACtB,OAAOJ,KAAKQ,KAAK,WACbpB,OAAOiF,MAAMN,OAAO/D,KAAMkE,EAAO9D,QAK7ChB,OAAOwE,OAAO,CACVS,MAAO,CACHG,KAAM,EACN7F,OAAQ,GACR8F,MAAO,sBACPC,OAAQ,CAEJC,GAAM,EACNC,GAAM,GACNC,GAAM,IACNC,EAAK,IACLC,IAAO,IACPC,GAAM,IACNC,GAAM,KAEVC,UAAW,SAASC,GAChB,GAAIA,IAAUrG,WAAaqG,IAAU,KAAM,CACvC,OAAO,KAEX,IAAI5E,EAASP,KAAKyE,MAAM7G,KAAKwB,OAAOgG,KAAKD,EAAMtI,aAC/C,GAAI0D,EAAO,GAAI,CACX,IAAI8E,EAAMrI,SAASuD,EAAO,GAAI,IAC9B,IAAI+E,EAAOtF,KAAK0E,OAAOnE,EAAO,KAAO,EACrC,OAAO8E,EAAMC,MACV,CACH,OAAOH,IAGfhF,IAAK,SAASoF,EAAStB,EAAUC,EAAO9D,EAAI+D,EAAOC,GAC/C,IAAIoB,EAAU,EAEd,GAAIpG,OAAOqG,WAAWvB,GAAQ,CAC1B,IAAKC,EAAO,CACRA,EAAQ/D,EAEZA,EAAK8D,EACLA,EAAQD,EAGZA,EAAW7E,OAAOiF,MAAMa,UAAUjB,GAElC,UAAWA,IAAa,UACpByB,MAAMzB,IACNA,GAAY,EAAG,CACf,OAEJ,GAAIE,GAASA,EAAMwB,cAAgBC,OAAQ,CACvCxB,IAAUD,EACVA,EAAQ,EAGZA,EAAQA,GAAS,EACjBC,EAAQA,GAAS,MAEjB,IAAKmB,EAAQM,QAAS,CAClBN,EAAQM,QAAU,GAEtB,IAAKN,EAAQM,QAAQ3B,GAAQ,CACzBqB,EAAQM,QAAQ3B,GAAS,GAE7B9D,EAAG0F,SAAW1F,EAAG0F,UAAY9F,KAAKwE,OAElC,IAAIuB,EAAU,WACV,GAAI3B,GAAS2B,EAAQC,WAAY,CAC7B,OAEJD,EAAQC,WAAa,KACrB,KAAOR,EAAUrB,GAASA,IAAU,GAChC/D,EAAGzE,KAAK4J,EAASC,KAAa,MAAO,CACrCpG,OAAOiF,MAAMN,OAAOwB,EAASrB,EAAO9D,GAExC2F,EAAQC,WAAa,OAGzBD,EAAQD,SAAW1F,EAAG0F,SAEtB,IAAKP,EAAQM,QAAQ3B,GAAO9D,EAAG0F,UAAW,CACtCP,EAAQM,QAAQ3B,GAAO9D,EAAG0F,UAAYlH,OAAOqH,YAAYF,EAAS9B,GAGtE,IAAKjE,KAAKrB,OAAOuF,GAAQ,CACrBlE,KAAKrB,OAAOuF,GAAS,GAEzBlE,KAAKrB,OAAOuF,GAAOvH,KAAK4I,IAG5BxB,OAAQ,SAASwB,EAASrB,EAAO9D,GAC7B,IAAI8F,EAASX,EAAQM,QAASM,EAE9B,GAAID,EAAQ,CAER,IAAKhC,EAAO,CACR,IAAK,IAAIkC,KAAOF,EAAQ,CACpB,GAAIA,EAAO3K,eAAe6K,GAAM,CAC5BpG,KAAK+D,OAAOwB,EAASa,EAAKhG,UAG/B,GAAI8F,EAAOhC,GAAQ,CACtB,GAAI9D,EAAI,CACJ,GAAIA,EAAG0F,SAAU,CACblH,OAAOyH,cAAcH,EAAOhC,GAAO9D,EAAG0F,kBAC/BI,EAAOhC,GAAO9D,EAAG0F,eAEzB,CACH,IAAK,IAAIQ,KAAOJ,EAAOhC,GAAQ,CAC3B,GAAIgC,EAAOhC,GAAO3I,eAAe+K,GAAM,CACnC1H,OAAOyH,cAAcH,EAAOhC,GAAOoC,WAC5BJ,EAAOhC,GAAOoC,KAKjC,IAAKH,KAAOD,EAAOhC,GAAQ,CACvB,GAAIgC,EAAOhC,GAAO3I,eAAe4K,GAAM,CACnC,OAGR,IAAKA,EAAK,CACNA,EAAM,YACCD,EAAOhC,IAItB,IAAKiC,KAAOD,EAAQ,CAChB,GAAIA,EAAO3K,eAAe4K,GAAM,CAC5B,OAGR,IAAKA,EAAK,CACNZ,EAAQM,QAAU,WAMtC,GAAI,kBAAkBjI,KAAK2I,UAAUC,UAAUhI,eAAgB,CAC3De,EAAEX,QAAQ6H,IAAI,SAAU,WACpB,IAAI9H,EAASS,OAAOiF,MAAM1F,OAC1B,IAAK,IAAIuF,KAASvF,EAAQ,CACtB,GAAIA,EAAOpD,eAAe2I,GAAQ,CAC9B,IAAIwC,EAAM/H,EAAOuF,GAAQ9H,EAAIsK,EAAI1K,OACjC,QAASI,EAAG,CACRgD,OAAOiF,MAAMN,OAAO2C,EAAItK,GAAI8H,UAjKpD,CAuKG9E,SAKH,SAAUuH,GAIN,IAAK7J,OAAOyB,UAAUkE,MAAM5F,WAAWP,MAAM,YAAa,CACtD,OAGJ,IAAIsK,EAAc9J,OAAOyB,UAAUkE,MACnCoE,EAAoB,OAAOjJ,KAAK,IAAI,KAAO+I,EAC3CG,EAEAA,EAAO,SAASrH,EAAKsH,EAAWC,GAE5B,GAAI1I,OAAOC,UAAU1B,SAASlB,KAAKoL,KAAe,kBAAmB,CACjE,OAAOH,EAAYjL,KAAK8D,EAAKsH,EAAWC,GAE5C,IAAI7K,EAAS,GACb8K,GAASF,EAAUG,WAAa,IAAM,KACjCH,EAAUI,UAAa,IAAM,KAC7BJ,EAAUK,SAAa,IAAM,KAC7BL,EAAUM,OAAa,IAAM,IAC9BC,EAAgB,EAEpBC,EAAYjL,EAAOkL,EAAWC,EAC9BV,EAAY,IAAIW,OAAOX,EAAUY,OAAQV,EAAQ,KACjDxH,GAAO,GACP,IAAKoH,EAAmB,CAEpBU,EAAa,IAAIG,OAAO,IAAMX,EAAUY,OAAS,WAAYV,GAUjED,EAAQA,IAAUL,GAAS,IAAM,EAAIK,IAAU,EAC/C,MAAO1K,EAAQyK,EAAUnJ,KAAK6B,GAAM,CAE5B+H,EAAYlL,EAAMsL,MAAQtL,EAAM,GAAGN,OACnC,GAAIwL,EAAYF,EAAe,CAC3BnL,EAAOQ,KAAK8C,EAAIvB,MAAMoJ,EAAehL,EAAMsL,QAG3C,IAAKf,GAAqBvK,EAAMN,OAAS,EAAG,CACxCM,EAAM,GAAGuL,QAAQN,EAAY,WACzB,IAAK,IAAInL,EAAI,EAAGA,EAAIZ,UAAUQ,OAAS,EAAGI,IAAK,CAC3C,GAAIZ,UAAUY,KAAOuK,EAAO,CACxBrK,EAAMF,GAAKuK,MAK3B,GAAIrK,EAAMN,OAAS,GAAKM,EAAMsL,MAAQnI,EAAIzD,OAAQ,CAC9C0F,MAAMnD,UAAU5B,KAAKyB,MAAMjC,EAAQG,EAAM4B,MAAM,IAEnDuJ,EAAanL,EAAM,GAAGN,OACtBsL,EAAgBE,EAChB,GAAIrL,EAAOH,QAAUgL,EAAO,CACxB,OAGR,GAAID,EAAUS,YAAclL,EAAMsL,MAAO,CACrCb,EAAUS,aAGtB,GAAIF,IAAkB7H,EAAIzD,OAAQ,CAC9B,GAAIyL,IAAeV,EAAUnK,KAAK,IAAK,CACnCT,EAAOQ,KAAK,SAEb,CACHR,EAAOQ,KAAK8C,EAAIvB,MAAMoJ,IAE1B,OAAOnL,EAAOH,OAASgL,EAAQ7K,EAAO+B,MAAM,EAAG8I,GAAS7K,GAI5DW,OAAOyB,UAAUkE,MAAQ,SAASsE,EAAWC,GACzC,OAAOF,EAAK9G,KAAM+G,EAAWC,IAGjC,OAAOF,GApFX,GA2FAvH,EAAEa,GAAG0H,MAAQ,SAASC,GAClB,IAAIC,EAAShI,KAAK,GAClB,IAAIiI,EAAoBD,EAAOE,kBAAoB,OAEnD,GAAI1M,UAAUQ,SAAW,EAAG,CAExB,GAAI4C,OAAOuJ,aAAc,CAErB,GAAIF,EAAmB,CACnBD,EAAOI,QACP,IAAIC,EAASzJ,OAAOuJ,eAAeG,WAAW,GAC9CC,EAASF,EAAOG,aAChBD,EAAOE,mBAAmBT,GAC1BO,EAAOG,OAAOL,EAAOM,aAAcN,EAAOO,WAC1C,OAAOL,EAAO1L,WAAWb,OAG7B,OAAOgM,EAAOa,eAGlB,GAAItG,SAASuG,UAAW,CACpBd,EAAOI,QAEP,GAAIH,EAAmB,CACnB,IAAII,EAAS9F,SAASuG,UAAUC,cAChCR,EAAShG,SAASyG,KAAKC,kBACvBV,EAAOW,kBAAkBlB,GACzBO,EAAOY,YAAY,WAAYd,GAC/B,OAAOE,EAAO3H,KAAK5E,OAGvB,IAAI+L,EAAM,EACVqB,EAAQpB,EAAOiB,kBACfV,EAAShG,SAASuG,UAAUC,cAAcM,YAC1CC,EAAWf,EAAOgB,cAClBH,EAAMI,eAAeF,GACrB,MAAOF,EAAMK,UAAU,aAAc,KAAO,EAAG1B,IAC/C,OAAOA,EAGX,OAAO,EAGX,GAAIA,KAAS,EACTA,EAAM/H,KAAKiI,EAAmB,OAAS,SAASjM,OAEpD,GAAI4C,OAAOuJ,aAAc,CAErB,GAAIF,EAAmB,CACnBD,EAAOI,QACPxJ,OAAOuJ,eAAeuB,SAAS1B,EAAO2B,WAAY5B,QAIlDC,EAAO4B,kBAAkB7B,EAAKA,QAGjC,GAAIxF,SAASyG,KAAKC,gBAAiB,CACpC,IAAIG,EAAQ7G,SAASyG,KAAKC,kBAC1BG,EAAMF,kBAAkBlB,GACxBoB,EAAMK,UAAU,YAAa1B,GAC7BqB,EAAMM,SAAS,MACfN,EAAMS,SAEV,IAAK5B,IAAsBjI,KAAK8J,GAAG,UAAW,CAC1C9B,EAAOI,QAEX,OAAOL,GAOXxI,EAAEa,GAAG2J,QAAU,SAASC,GACpB,IAAIC,EAAUzO,UAAUQ,SAAW,EACnC,IAAIkO,EAAS1O,UAAU,KAAO,SAC9B,IAAKyO,IAAYC,IAAWzI,YAAYuI,GAAW,CAC/C,MAAM,IAAIrI,MAAM,qDACA,6BAEpB,GAAIuI,EAAQ,CACRF,EAAWvI,YAAYjG,UAAU,IAAMA,UAAU,GAAK,KAE1D,OAAOwE,KAAKQ,KAAK,WACb,IAAI2J,EAAQ5K,EAAES,MACd,IAAIoK,EACJ,IAAIvK,EACJ,SAASwK,IACLxK,EAAUK,OAEd,GAAI+J,GAAWC,EAAQ,CACnBrK,EAAYsK,EAAMG,KAAK,aACvB,GAAIL,EAAS,CACTpK,GAAaA,EAAUK,WACpB,CACH,GAAI8J,GAAYnK,EAAW,CACvBA,EAAUkE,OAAOiG,GACjB,IAAKnK,EAAU0K,MAAO,CAClB1K,EAAY,UAEb,CACHA,EAAY,KAEhB,IAAKA,EAAW,CACZsK,EAAMK,WAAW,aACjB,GAAI5L,OAAO6L,eAAgB,CACvB,IAAIC,EAAWP,EAAMG,KAAK,YAC1B,GAAII,EAAU,CACVA,EAASC,UAAU3K,MACnBmK,EAAMK,WAAW,iBAElB,CACHJ,EAASD,EAAMS,KAAK,YACpB,GAAIR,EAAOpO,OAAQ,CAEfuD,EAAE6K,EAAO,GAAGS,eAAeC,IAAI,UAAU/G,SACzCqG,EAAOrG,cACJ,GAAIoG,EAAML,GAAG,QAAS,CACzBvK,EAAEX,QAAQkM,IAAI,2BAK3B,GAAIX,EAAMG,KAAK,aAAc,CAChC/K,EAAES,MAAMsK,KAAK,aAAanK,IAAI6J,OAC3B,CACHnK,EAAYN,EAAEO,YACdD,EAAUM,IAAI6J,GACdG,EAAMG,KAAK,YAAazK,GACxB,IAAIkK,EACJ,IAAIgB,EAAQ,KACZ,GAAInM,OAAO6L,eAAgB,CACvBV,EAAU,IAAIU,eAAe,WACzB,IAAKM,EAAO,CACRV,IAEJU,EAAQ,QAEZhB,EAAQiB,QAAQhL,MAChBmK,EAAMG,KAAK,WAAYP,QACpB,GAAII,EAAML,GAAG,QAAS,CACzBvK,EAAEX,QAAQqM,GAAG,iBAAkBZ,OAC5B,CACHD,EAAS7K,EAAE,aAAa2L,SAAS,WAAWC,SAASnL,MAAM,GAE3DT,EAAE6K,EAAOS,eAAeI,GAAG,SAAUZ,QASrD9K,EAAEa,GAAGgL,kBAAoB,SAASC,GAC9B,IAAIC,EAAMtL,KAAK,GAAGuL,wBAClB,IAAIC,EAAWH,EAAU,GAAGE,wBAC5B,IAAIE,EAAMH,EAAIG,IAAMD,EAASC,IAC7B,IAAIC,EAASJ,EAAII,OAASF,EAASC,IACnC,IAAIE,EAASN,EAAUM,SACvB,OAAOD,EAAS,GAAKD,GAAOE,GAKhC,SAASC,UAAUrG,GACfA,EAAQsG,KAAK,CACTC,KAAM,eACNC,cAAe,SAMvB,IAAIC,YAAc,GAClB,SAASC,gBAAgB/H,EAAOxB,GAC5B,IAAIwJ,GAAWhI,EAAQA,EAAQ,KAAO,IAAMiI,kBAAkBzJ,GAC9D,GAAIsJ,YAAYvI,QAAQyI,MAAc,EAAG,CACrCF,YAAYrP,KAAKuP,GACjBE,WAAW,WACP,MAAM1J,GACP,IAOX,SAAS2J,gBAAgB3J,EAAG4J,GACxB,IAAIC,EAAOD,EAAKE,SAASD,KACzB,OAAOD,EAAKG,cAAgB/J,EAAEgK,QAAUH,EAK5C,SAASJ,kBAAkBzJ,GACvB,UAAWA,IAAM,SAAU,CACvB,OAAOA,OACJ,UAAWA,EAAEiK,WAAa,SAAU,CACvC,OAAOjK,EAAEiK,SAAW,KAAOjK,EAAEwJ,YAC1B,CACH,OAAOxJ,EAAEwJ,SAMjB,SAASU,QACL,IAAItC,EAAO,GAAGpM,MAAMvC,KAAKH,WACzB,IAAIuM,EAAM,EACVxI,EAAEqE,OAAO5D,KAAM,CACXa,IAAK,WACD,OAAOyJ,GAEX1C,MAAO,WACH,OAAOG,GAEX8E,OAAQ,SAASC,EAAMC,GACnB,GAAIA,IAASjO,UAAW,CACpBiO,EAAOhF,OACJ,GAAIgF,IAAShF,EAAK,CACrB,OAEJ,IAAK+E,EAAM,CACP,IAAIE,EAAU1C,EAAK2C,OAAO,SAASrL,GAC/B,cAAcA,IAAS,cAE3B,IAAKoL,EAAQhR,OAAQ,CACjB,QAGR,IAAKsO,EAAKtO,OAAQ,CACd,OAEJ,GAAIsO,EAAKtO,SAAW,EAAG,CACnB,OAAOsO,EAAK,OACT,CACH,GAAIvC,IAAQuC,EAAKtO,OAAS,EAAG,CACzB+L,EAAM,MACH,GACDA,EAEN,UAAWuC,EAAKvC,KAAS,YAAa,CAClC,OAAOuC,EAAKvC,OACT,CACH,OAAO/H,KAAK6M,OAAO,KAAME,MAIrC/Q,OAAQ,WACJ,OAAOsO,EAAKtO,QAEhB+H,OAAQ,SAAS6D,UACN0C,EAAK1C,IAEhB9D,IAAK,SAASlC,GACV,IAAK,IAAIxF,EAAIkO,EAAKtO,OAAQI,KAAM,CAC5B,GAAIkO,EAAKlO,KAAOwF,EAAM,CAClBmG,EAAM3L,EACN,QAGR4D,KAAKkN,OAAOtL,GACZmG,EAAMuC,EAAKtO,OAAS,GAExBmR,MAAO,WACH,GAAI7C,EAAKtO,OAAQ,CACb,IAAI4L,EAAQG,EACZ,IAAIqF,EAAU,MACd,OAAQ9C,EAAK1C,GAAQ,CACjBA,IACA,GAAIA,EAAQ0C,EAAKtO,OAAQ,CACrB,GAAIoR,EAAS,CACT,MAEJxF,EAAQ,EACRwF,EAAU,MAGlB,OAAO9C,EAAK1C,KAGpBjH,IAAK,SAASP,GACV,OAAOkK,EAAK3J,IAAI,SAASiB,EAAMxF,GAC3B,UAAWwF,IAAS,YAAa,CAC7B,OAAOxB,EAAGwB,EAAMxF,GAEpB,OAAO,OACR6Q,OAAOI,UAEdC,QAAS,SAASlN,GACd,OAAOkK,EAAKgD,QAAQ,SAAS1L,EAAMxF,GAC/B,UAAWwF,IAAS,YAAa,CAC7BxB,EAAGwB,EAAMxF,OAIrB8Q,OAAQ,SAAStL,GACb0I,EAAK3N,KAAKiF,MAOtB,SAAS2L,MAAMR,GACX,IAAIzC,EAAOyC,aAAgBrL,MAAQqL,EAAOA,EAAO,CAACA,GAAQ,GAC1DxN,EAAEqE,OAAO5D,KAAM,CACXsK,KAAM,WACF,OAAOA,GAEX3J,IAAK,SAASP,GACV,OAAOb,EAAEoB,IAAI2J,EAAMlK,IAEvBoN,KAAM,WACF,OAAOlD,EAAKtO,QAEhByR,IAAK,WACD,GAAInD,EAAKtO,SAAW,EAAG,CACnB,OAAO,SACJ,CACH,IAAImJ,EAAQmF,EAAKA,EAAKtO,OAAS,GAC/BsO,EAAOA,EAAKpM,MAAM,EAAGoM,EAAKtO,OAAS,GACnC,OAAOmJ,IAGfxI,KAAM,SAASwI,GACXmF,EAAOA,EAAKoD,OAAO,CAACvI,IACpB,OAAOA,GAEXsG,IAAK,WACD,OAAOnB,EAAKtO,OAAS,EAAIsO,EAAKA,EAAKtO,OAAS,GAAK,MAErD8F,MAAO,WACH,OAAO,IAAIyL,MAAMjD,EAAKpM,MAAM,OAOxC,SAASyP,QAAQC,EAAMJ,EAAMK,GACzB,IAAIC,EAAU,KACd,IAAIC,EAAc,GAClB,UAAWH,IAAS,UAAYA,IAAS,GAAI,CACzCG,EAAcH,EAAO,IAEzBG,GAAe,WACf,IAAIzD,EACJ,GAAIuD,EAAQ,CACRvD,EAAO,OACJ,CACHA,EAAO/K,EAAEsE,QAAQhD,IAAIkN,GACrBzD,EAAOA,EAAO0D,KAAKvS,MAAM6O,GAAQ,GAErC,IAAIvC,EAAMuC,EAAKtO,OAAS,EACxBuD,EAAEqE,OAAO5D,KAAM,CACXkN,OAAQ,SAAStL,GACb,GAAIkM,EAAS,CACT,GAAIxD,EAAKA,EAAKtO,OAAS,KAAO4F,EAAM,CAChC0I,EAAK3N,KAAKiF,GACV,GAAI4L,GAAQlD,EAAKtO,OAASwR,EAAM,CAC5BlD,EAAOA,EAAKpM,OAAOsP,GAEvBzF,EAAMuC,EAAKtO,OAAS,EACpB,IAAK6R,EAAQ,CACTtO,EAAEsE,QAAQC,IAAIiK,EAAaC,KAAKC,UAAU3D,QAK1DxG,IAAK,SAASoK,GACV,GAAIA,aAAoBxM,MAAO,CAC3B4I,EAAO4D,EACP,IAAKL,EAAQ,CACTtO,EAAEsE,QAAQC,IAAIiK,EAAaC,KAAKC,UAAU3D,OAItDA,KAAM,WACF,OAAOA,GAEX6D,MAAO,WACHpG,EAAMuC,EAAKtO,OAAS,GAExBoS,KAAM,WACF,OAAO9D,EAAKA,EAAKtO,OAAS,IAE9BqS,IAAK,WACD,OAAOtG,IAAQuC,EAAKtO,OAAS,GAEjCsS,SAAU,WACN,OAAOvG,GAEXwG,QAAS,WACL,OAAOjE,EAAKvC,IAEhByG,KAAM,WACF,IAAIC,EAAM1G,EACV,GAAIA,EAAMuC,EAAKtO,OAAS,EAAG,GACrB+L,EAEN,GAAI0G,IAAQ1G,EAAK,CACb,OAAOuC,EAAKvC,KAGpB2G,SAAU,WACN,IAAID,EAAM1G,EACV,GAAIA,EAAM,EAAG,GACPA,EAEN,GAAI0G,IAAQ1G,EAAK,CACb,OAAOuC,EAAKvC,KAGpB4G,MAAO,WACHrE,EAAO,GACPtK,KAAK4O,SAETd,QAAS,WACL,OAAOA,GAEXe,OAAQ,WACJf,EAAU,MAEdc,MAAO,WACH,IAAKf,EAAQ,CACTtO,EAAEsE,QAAQE,OAAOgK,KAGzBe,QAAS,WACLhB,EAAU,OAEdiB,OAAQ,SAAS5J,GACb,UAAWA,IAAU,YAAa,CAC9B2I,GAAWA,MACR,CACHA,EAAU3I,MAQ1B,IAAI6J,UAAY,EAChBzP,EAAE0P,IAAM,CACJC,SAAU,CACNC,KAAM,MACNC,oBAAqB,KACrBC,YAAa,GACbC,OAAQ,KACRxB,QAAS,KACTyB,QAAS,KACTC,iBAAkBjQ,EAAEkQ,KACpBC,gBAAiBnQ,EAAEkQ,KACnBE,aAAc,IACdC,YAAa,IACbC,kBAAmB,IACnBC,kBAAmB,CAAC,kBACpBC,SAAU,EACVC,KAAM,IAGdzQ,EAAEa,GAAG6O,IAAM,SAASgB,GAChB,IAAIC,EAAW3Q,EAAEqE,OAAO,GAAIrE,EAAE0P,IAAIC,SAAUe,GAC5C,IAAInJ,EAAO9G,KACX,IAAImQ,EAAarJ,EAAKwD,KAAK,OAC3B,GAAI6F,EAAY,CACZ,OAAOA,EAEX,IAAIC,EAAKpB,YACTlI,EAAKoE,SAAS,OACdpE,EAAKoG,OAAO,gCACZpG,EAAKoG,OAAO,4BACA,gBACA,+DACA,gBACA,UAEZtB,UAAU9E,EAAK8D,KAAK,iBAIpB,IAAIyF,EAAO9Q,EAAE,cAAcsM,KAAK,CAC5ByE,eAAgB,MAChBC,WAAY,QACZR,SAAUG,EAASH,WACpB7E,SAAS,aAAaC,SAASrE,GAClC,IAAK0J,UAAW,CACZH,EAAKI,IAAI,KAEb,GAAIP,EAASQ,MAAO,CAChB5J,EAAK4J,MAAMR,EAASQ,OAExB,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAAclK,EAAK8D,KAAK,WAC5B,IAAIqG,EAAiB,MACrB,IAAIC,EAAiB,GACrB,IAAIC,EAA0B,KAC9B,IAAIC,EACJ,IAAIC,EAAU,GACd,IAAIC,EAEJ,IAAIC,EAAY,GAChB,IAAIjD,EAAW,EACf,IAAIgB,EACJ,IAAIxB,EACJ,IAAI0D,EAAqB,EACzB,IAAI5D,EAAM2B,EACV,IAAIzT,EAASgL,EAAK8D,KAAK,WACvB,IAAI6G,EACJ,IAAIC,EACJ,IAAIC,EAAc,EAClB,SAASC,EAAalP,GAClB,IAAI4J,EAAO/M,EAAEmD,EAAEsF,QACf,GAAIsE,EAAKxC,GAAG,QAAS,CACjBwC,EAAOA,EAAKuF,QAAQ,eACpB,OAAOvF,EAAK1E,QACR0E,EAAKwF,OAAO,QAAQC,UAAUnH,KAAK,eAAe5O,OAClDsQ,EAAKuF,QAAQ,yBACRG,UAAU,WAAWpH,KAAK,eAAe5O,YAC/C,GAAIsQ,EAAKxC,GAAG,4BAA6B,CAC5C,IAAIsE,GAAQ9B,EAAK2F,UAAU,YAAYjW,OACvC,OAAOsQ,EAAK1B,KAAK,mBAAmB5O,OAChCsQ,EAAK0F,UAAU,WAAWpH,KAAK,mBAAmB5O,QACjDoS,EAAO,EAAI,IAIxB,IAAI8D,EAAc,CACdC,SAAY,IACZC,GAAM,UACNC,KAAQ,YACRC,KAAQ,YACRC,MAAS,aACTC,IAAO,SACPC,SAAY,IACZC,OAAU,IACVC,SAAY,IACZC,IAAO,KAEX,SAASC,EAAQnQ,GACb,GAAIA,EAAEnB,IAAK,CACP,IAAIA,EAAMmB,EAAEnB,IAAIlE,cAChB,GAAI6U,EAAY3Q,GAAM,CAClBA,EAAM2Q,EAAY3Q,GAEtB,GAAIA,IAAQ,UAAW,CACnB,MAAO,WACJ,CACH,IAAIuR,EAAQ,GACZ,GAAIpQ,EAAEqQ,QAAS,CACXD,EAAMnW,KAAK,QAEf,GAAI+F,EAAEsQ,SAAWzR,IAAQ,OAAQ,CAC7BuR,EAAMnW,KAAK,QAEf,GAAI+F,EAAEuQ,UAAY1R,IAAQ,QAAS,CAC/BuR,EAAMnW,KAAK,SAEf,GAAI+F,EAAEwQ,QAAU3R,IAAQ,MAAO,CAC3BuR,EAAMnW,KAAK,OAEf,GAAImW,EAAM9W,QAAUuF,IAAQ,IAAK,CAC7BA,EAAM,WAEV,GAAImB,EAAEnB,IAAK,CACPuR,EAAMnW,KAAK4E,GAEf,OAAOuR,EAAMtV,KAAK,OAI9B,IAAI2V,EACJ,IAAIC,EAAiB,CACjBC,QAASC,EAAY,MACrBC,cAAeD,EAAY,OAC3BE,oBAAqBF,EAAY,OACjCG,MAAS,WACL,GAAIlE,GAAW8B,IAAYnB,EAASf,OAC9B1N,YAAYyO,EAASwD,gBACrBxD,EAASwD,cAAcrC,IACvBnB,EAASwD,yBAAyBhM,QAClC2J,EAAQ/U,MAAM4T,EAASwD,iBACvBxD,EAASwD,eAAgB,CAC3BnE,EAAQrC,OAAOmE,GAEnB,IAAIjQ,EAAMiQ,EACV9B,EAAQpB,QAGRwF,GAAe,GACfC,GAAa,KAEb9M,EAAKhD,IAAI,IACT,GAAIoM,EAAS2D,SAAU,CACnB3D,EAAS2D,SAASlY,KAAKmL,EAAM1F,GAEjC,GAAIK,YAAY6N,GAAS,CACrBwE,KAEJzD,EAAKI,IAAI,IACT,OAAO,OAEXsD,cAAe,WACXjN,EAAKkN,OAAO,MACZ,OAAO,MAEXC,UAAaC,EACbC,kBAAmBD,EACnBE,IAAO,WACHtN,EAAKkN,OAAO,OAEhBK,SAAU,WACNvN,EAAK,UAAU,GACf,OAAO,OAEXwN,OAAU,WACNxN,EAAK,UAAU,GACf,OAAO,MAEXyN,QAAWC,EACXC,SAAUD,EACVE,UAAaC,EACbC,SAAUD,EACVE,UAAatI,EACbuI,iBAAkBvI,EAClBwI,SAAUxI,EACVyI,iBAAkB,WAEd,IAAIC,EAAM3G,EAAW,EACrB,IAAIvG,EAAM,EACV,GAAIsJ,EAAQ4D,KAAS,IAAK,GACpBA,EAEN,IAAK,IAAI7Y,EAAI6Y,EAAK7Y,EAAI,IAAKA,EAAG,CAC1B,GAAIiV,EAAQjV,KAAO,KAAOiV,EAAQjV,EAAI,KAAO,IAAK,CAC9C2L,EAAM3L,EAAI,EACV,WACG,GAAIiV,EAAQjV,KAAO,MACfiV,EAAQjV,EAAI,KAAO,KAAM,CAChC2L,EAAM3L,EACN,OAGR0K,EAAKwH,SAASvG,IAElBmN,SAAU,WACN,GAAIjE,EAAgB,CAChBkE,EAAuB,UACpB,CACH/D,EAAgB9B,EAChB8F,IACA9D,EAAeD,EACfvK,EAAKhD,IAAI,IACTuR,KACApE,EAAiB,KAErB,OAAO,OAEXqE,SAAU,WACN,GAAIrE,EAAgB,CAChB3B,EAAS8B,EACT0C,KACAhN,EAAKhD,IAAIwN,GACT+D,KACApE,EAAiB,MACjBC,EAAiB,GACjB,OAAO,QAGfqE,WAAcC,EACdC,kBAAmBD,EACnBE,SAAUF,EACVG,kBAAmB,WAEf,GAAItE,EAAQ/C,KAAc,IAAK,GACzBA,EAEN,IAAIsH,EAAK,0BACT,IAAItZ,EAAQ+U,EAAQnT,MAAMoQ,GAAUhS,MAAMsZ,GAC1C,IAAKtZ,GAASA,EAAM,GAAGA,MAAM,SAAU,CACnCwK,EAAKwH,SAAS1N,KAAKyQ,GAASrV,aACzB,GAAIM,EAAM,GAAG,KAAO,IAAK,CAC5BgS,GAAYhS,EAAMsL,MAAQ,MACvB,CACH0G,GAAYhS,EAAMsL,MAAQtL,EAAM,GAAGN,OAAS,EAC5C,GAAIM,EAAM,GAAGA,EAAM,GAAGN,OAAS,KAAO,IAAK,GACrCsS,GAGV+G,MAEJQ,IAAOC,EACPC,IAAO1H,EACP2H,SAAU3H,EACV4H,KAAQC,EACRC,SAAUD,EACVE,eAAgBC,EAChBC,eAAgBR,EAChBS,SAAUC,EAAqB,MAC/BC,iBAAkBD,EAAqB,OACvCE,uBAAwBF,EAAqB,OAC7CG,SAAU,WACN,GAAItF,IAAY,IAAM/C,EAAW,EAAG,CAChCxH,EAAK,WAAW,GAEpB,OAAO,OAEX8P,SAAUd,EACVe,SAAUf,EACVgB,SAAUhB,EACViB,SAAU,WACN,GAAIxF,IAAc,GAAI,CAClBzK,EAAKkN,OAAOzC,KAGpByF,SAAUX,EACVY,SAAUZ,EACVa,SAAU,WACN,IAAIjC,EAAMrU,KAAKyQ,GAASrV,OACxB,GAAIiZ,EAAM3G,EAAU,CAChBiD,EAAYzK,EAAK,UAAUmO,EAAM3G,GACjC6I,kBAAkBrQ,EAAMyK,GAE5B,OAAO,OAEX6F,SAAU,WACN,GAAI/F,IAAY,IAAM/C,IAAa,EAAG,CAClCiD,EAAYzK,EAAK,WAAWwH,GAC5B6I,kBAAkBrQ,EAAMyK,GAE5B,OAAO,OAEX8F,WAAY,WACR,OAAO,OAEXC,SAAUxB,EACVyB,SAAUzB,EACV0B,SAAU1B,GAGd,SAASxC,EAAYmE,GACjB,OAAO,SAASnE,IACZ,IAAIsC,EAAK,wBACT,IAAIxY,EAAYiU,EAAQnT,MAAMoQ,GAC9B,IAAIoJ,EAAIta,EAAUd,MAAMsZ,GACxB,GAAI8B,EAAG,CACHnG,EAAYmG,EAAE,GACd,GAAID,EAAW,CACXN,kBAAkBrQ,EAAMyK,IAGhCzK,EAAKhD,IACDuN,EAAQnT,MAAM,EAAGoQ,GACb+C,EAAQnT,MAAMoQ,GAAUzG,QAAQ+N,EAAI,IACxC,MAGJ,OAAO,OAIf,SAASY,EAAqBiB,GAC1B,OAAO,SAASjB,IAEZ,GAAInF,IAAY,IAAM/C,IAAa,EAAG,CAClC,IAAIoJ,EAAIrG,EAAQnT,MAAM,EAAGoQ,GAAUhS,MAAM,cACzC,GAAIob,EAAE,GAAG1b,OAAQ,CACbuV,EAAYzK,EAAK,WAAW4Q,EAAE,GAAG1b,QACjC,GAAIyb,EAAW,CACXN,kBAAkBrQ,EAAMyK,KAIpC,OAAO,OAIf,SAASuE,IACL,OAAO,KAGX,SAASO,IACLhG,EAAKI,IAAI,IACTkB,EAAc,EACd,GAAI7K,EAAK6Q,cAAgBtH,EAAKvG,GAAG,UAAW,CACxCuG,EAAKpG,QAAQ,QAAS,CAAC,OAE3BoG,EAAK5J,IAAI,QAASmR,IAClB,OAAO,KAGX,SAASpD,IACL,GAAIqD,GAAkB,CAClBvG,EAAeD,EACfvK,EAAKhD,IAAIyL,EAAQhB,eACd,CACHzH,EAAKhD,IAAIyL,EAAQb,YAErBmJ,GAAmB,MACnB,OAAO,MAGX,SAASlD,IACL7N,EAAKhD,IAAIyL,EAAQlB,MAAQiD,EAAe/B,EAAQf,QAChD,OAAO,MAGX,SAAS0F,IACL,GAAIjD,EAAgB,CAChBC,EAAiBA,EAAehT,MAAM,GAAI,GAC1CkX,SACG,GAAI/D,IAAY,IAAM/C,EAAW,EAAG,CACvCxH,EAAK,WAAW,GAKpBA,EAAKxC,QAAQ,EAAG,WACZsP,GAAa,OAIrB,SAASrH,IACL,GAAI+B,EAAW,EAAG,CACdxH,EAAKwH,UAAU,EAAG,MAClB+G,MAIR,SAASG,IACL,GAAIlH,EAAW1N,KAAKyQ,GAASrV,OAAQ,CACjC8K,EAAKwH,SAAS,EAAG,MAErB,OAAO,MAGX,SAAS4H,IACLpP,EAAKwH,SAAS,GAGlB,SAASD,IACLvH,EAAKwH,SAAS1N,KAAKyQ,GAASrV,QAGhC,SAAS8b,IAEL,IAAI1P,EAAQiI,EAAKvG,GAAG,UACpB,GAAIgE,EAAS,CACT,IAAK1F,EAAO,EAGZtB,EAAKxC,QAAQ,GAAI,WACb,IAAK+L,EAAKvG,GAAG,WAAagE,EAAS,CAC/BuC,EAAKpG,QAAQ,QAAS,CAAC,eAG5B,GAAI7B,IAAUoI,YAAc1C,GAAU,CACzCuC,EAAKpG,QAAQ,OAAQ,CAAC,QAO9B,SAAS8N,IACL,GAAIC,oBAAqB,CACrB,IAAIC,EAAQrZ,OAAOsZ,iBAAiBpc,EAAO,IAC3C,IAAIqc,EAAgBF,EAAMG,iBAAiB,eAC3CD,EAAgBA,EAActQ,QAAQ,aAAc,IACpD,IAAIwQ,EAASvR,EAAK+E,KAAK,SACvB,GAAIwM,EAAO/b,MAAM,cAAe,CAC5B+b,EAASA,EAAOxQ,QAAQ,oBAAqB,IAEjD,GAAIsQ,IAAkBA,EAAc7b,MAAM,SAAU,CAChD,IAAIgc,EAAYH,EAActQ,QAAQ,YAAa,IAAM,aACzD,IAAKwQ,EAAO/b,MAAMgc,GAAY,CAC1BD,GAAU,IAAMC,GAGxB,GAAID,IAAWvR,EAAK+E,KAAK,SAAU,CAC/B/E,EAAK+E,KAAK,QAASwM,KAS/B,SAASE,EAAaC,GAClB,IAAK1R,EAAK6Q,YAAa,CACnB,OAGJ7Q,EAAKxC,QAAQ,GAAI,WAGb,IAAKkM,WAAaH,EAAKI,QAAUY,IAAYmH,EAAe,CACxDnI,EAAKI,IAAI,IAAMY,GAEnB,GAAIvD,EAAS,CACThH,EAAKxC,QAAQ,GAAI,WACb,IAEI,IAAKkM,WAAaH,EAAKvI,UAAYwG,EAAW,EAAG,CAC7C+B,EAAKvI,MAAMwG,EAAW,IAE5B,MAAO5L,UAWzB,GAAIsV,sBAAwBS,WAAY,CACpChH,EAAY,SAAS1C,GACjB,GAAIA,EAAQ,CACRjT,EAAOoP,SAAS,aACb,CACHpP,EAAO4c,YAAY,WAG3BhH,EAAoB,WAChB,IAAIiH,EAAa7c,EAAOgG,QACxB6W,EAAWC,aAAa9c,GACxBA,EAAOiI,SACPjI,EAAS6c,OAEV,CACH,IAAIE,EAAY,MAChBpH,EAAY,SAAS1C,GACjB,GAAIA,IAAW8J,EAAW,CACtBA,EAAY,KACZ/c,EAAOoP,SAAS,kBAChBpE,EAAK9C,UAAU,IAAK,QAAS8U,QAC1B,GAAID,IAAc9J,EAAQ,CAC7B8J,EAAY,MACZ/R,EAAKvC,SAAS,QAASuU,GACvBhd,EAAO4c,YAAY,oBAG3BhH,EAAoB,WAChBD,EAAU,OACVA,EAAU,OAMlB,SAASqH,IACLhd,EAAOid,YAAY,YAKvB,SAAS3D,IACL9F,EAAS,sBAAwB4B,EAAiB,MAClD4C,KAKJ,SAASkF,IACL1J,EAAS8B,EACTH,EAAiB,MACjBE,EAA0B,KAC1BD,EAAiB,GAOrB,SAASiE,EAAuB3G,GAC5B,IAAIyK,EAAe1J,EAAQjF,OAC3B,IAAI7F,EAAOyU,EACX,IAAIjE,EAAMgE,EAAajd,OACvB,GAAIwS,GAAQ2C,EAA0B,EAAG,CACrC8D,GAAO9D,EAEX,GAAID,EAAelV,OAAS,EAAG,CAC3B,IAAK,IAAImd,EAAIjI,EAAelV,OAAQmd,EAAI,EAAGA,IAAK,CAC5CD,EAAc3Z,EAAE6Z,SAASC,aAAanI,EAAe9T,UAAU,EAAG+b,IAClE,GAAIjJ,EAASd,oBAAqB,CAC9B3K,EAAQ,IAAIiD,OAAOwR,OAChB,CACHzU,EAAQ,IAAIiD,OAAOwR,EAAa,KAEpC,IAAK,IAAI9c,EAAI6Y,EAAK7Y,KAAM,CACpB,GAAIqI,EAAM7H,KAAKqc,EAAa7c,IAAK,CAC7B+U,EAA0B8H,EAAajd,OAASI,EAChD0K,EAAKwH,SAAS2K,EAAa7c,GAAGqH,QAAQyV,IACtCpS,EAAKhD,IAAImV,EAAa7c,GAAI,MAC1BiZ,KACA,GAAInE,EAAelV,SAAWmd,EAAG,CAC7BjI,EAAiBA,EAAe9T,UAAU,EAAG+b,GAC7C/D,IAEJ,UAKhBlE,EAAiB,GAKrB,SAASoI,KACL,IAAIC,EAAUzS,EAAK8D,KAAK,WACxB,IAAI4O,EAAOD,EAAQC,OACnBD,EAAQC,KAAK,uBACb,IAAI9I,EAAQ6I,EAAQ3O,KAAK,QAAQ,GAAGW,wBAAwBmF,MAC5D6I,EAAQC,KAAKA,GACb,OAAO9I,EAKX,SAAS+I,GAAc7I,GACnB,IAAIF,EAAQ5J,EAAK4J,QACjB,OAAOgJ,KAAKC,MAAMjJ,EAAQE,GAM9B,SAASgJ,GAA0BC,GAC/B,SAASpX,EAAMoX,GACX,OAAOta,EAAE6Z,SAASU,YAAYD,EAAQlJ,GAE1C,SAASoJ,EAAWvY,GAEhB,OAAOA,EAAMyL,OAAO,SAAS+M,GACzB,OAAQza,EAAE6Z,SAASa,MAAMD,GAAM1d,MAAM,SAG7C,IAAI0d,EAAOhJ,EAAYpG,KAAK,SAC5B,IAAI0E,EACJ,GAAI0K,EAAKhe,OAAQ,CACbsT,EAAS0K,EAAK/H,UAAU,SAASrR,WAC9B,CACH0O,EAAS0B,EAAYpQ,OAEzB0O,EAAS/P,EAAE6Z,SAASc,gBAAgB5K,GACpC,IAAIsG,EAAK,IAAIlO,OAAO,IAAMnI,EAAE6Z,SAASC,aAAa/J,IAClD,IAAI9N,EACJ,GAAIqY,EAAOvd,MAAM,MAAO,CACpB,IAAI8E,EAAMyY,EAAOpX,MAAM,MACvB,IAAI0X,EAAYxJ,EAAYI,EAAa,EACzC,IAAK,IAAI3U,EAAI,EAAGA,EAAIgF,EAAIpF,OAAS,IAAKI,EAAG,CACrCgF,EAAIhF,IAAM,IAGd,GAAIge,OAAOhZ,EAAI,IAAM+Y,EAAW,CAC5B3Y,EAAQiB,EAAM6M,EAASlO,EAAI,IAC3BI,EAAM,GAAKA,EAAM,GAAGqG,QAAQ+N,EAAI,IAChCpU,EAAQuY,EAAWvY,OAChB,CACHA,EAAQ,CAACJ,EAAI,IAGjB,IAAKhF,EAAI,EAAGA,EAAIgF,EAAIpF,SAAUI,EAAG,CAC7B,GAAIge,OAAOhZ,EAAIhF,IAAMuU,EAAW,CAC5B,IAAI0J,EAAW5X,EAAMrB,EAAIhF,IACzB,GAAIA,EAAIgF,EAAIpF,OAAS,EAAG,CACpBqe,EAAWN,EAAWM,GAE1B7Y,EAAQA,EAAMkM,OAAO2M,OAClB,CACH7Y,EAAM7E,KAAKyE,EAAIhF,UAGpB,CACHoF,EAAQiB,EAAM6M,EAASuK,EAAQlJ,GAC/BnP,EAAM,GAAKA,EAAM,GAAGqG,QAAQ+N,EAAI,IAGpC,GAAIpU,EAAMxF,OAAS,GAAKwF,EAAMA,EAAMxF,OAAS,GAAGA,SAAW2U,EAAW,CAClEnP,EAAM7E,KAAK,IAEf,OAAO6E,EAKX,SAAS8Y,GAAWT,EAAQU,GAExB,IACIV,EAASta,EAAE6Z,SAASoB,kBAAkBX,GACtC,IAAI5J,EAAU1Q,EAAEqE,OAAO,GAAIsM,EAAU,CACjCuK,6BAA8B,KAC9BnM,SAAUA,IAEd,IAAIoM,EAAYnb,EAAE6Z,SAASuB,iBAAiBd,EAAQ5J,GACpD,IAAI9T,EAASue,EAAU,GACvB,IAAIE,EAAMrb,EAAE6Z,SAASpd,OAAOG,GAC5B,IAAKoe,EAAyB,CAC1B/I,EAAqBkJ,EAAU,GAG/B,GAAIlJ,EAAqBoJ,EAAK,CAC1BpJ,EAAqBoJ,GAG7Bze,EAASoD,EAAE6Z,SAASyB,UAAU1e,GAC9B,OAAOA,EACT,MAAOuG,GACLuJ,gBAAgB,eAAgBvJ,EAAEoY,OAClC,OAAOjB,GAMf,SAASne,GAAOme,EAAQkB,GACpB,IAAIC,EAAUzb,EAAE6Z,SAAS6B,OAAOC,GAAKrB,GAAS,CAC1C7J,KAAME,EAASF,KACf+K,OAAQA,IAEZlB,EAASta,EAAE6Z,SAAS1d,OAAOsf,EAAS,CAChCpK,WAAYV,EAASU,aAEzB,IAAIgF,EAAK,8CACT,OAAOiE,EAAOhS,QAAQ+N,EAAI,uBAO9B,SAASsF,GAAKrB,GACV,SAASS,EAAWT,GAChB,GAAIta,EAAE6Z,SAAS+B,cAActB,GAAS,CAClC,GAAIA,EAAOvd,MAAM,QAAS,CACtBud,EAASA,EAAOhS,QAAQ,OAAQ,cAEjC,CACH,GAAIgS,EAAOvd,MAAM,OAAQ,CACrBud,GAAU,KAEdA,EAAS,QAAUA,EAAS,IAEhC,OAAOA,EAEX,IAAI5E,EAAMjZ,GAAO6d,GACjB,GAAI5E,IAAQ,EAAG,CACX,OAAOqF,EAAWT,GAEtB,IAAItZ,EAAS,GAGb,IAAK,IAAInE,EAAI,EAAGA,EAAI6Y,IAAO7Y,EAAG,CAC1B,IAAIwE,EAAOrB,EAAE6Z,SAAShc,UAAUyc,EAAQzd,EAAGA,EAAI,GAC/CmE,EAAO5D,KAAK2d,EAAW1Z,IAE3B,OAAOL,EAAO/C,KAAK,IAKvB,SAASxB,GAAOyD,GACZ,OAAOF,EAAE6Z,SAASpd,OAAOyD,GAG7B,SAASrC,GAAUqC,EAAK2b,EAAO/M,GAC3B,OAAO9O,EAAE6Z,SAAShc,UAAUqC,EAAK2b,EAAO/M,GAM5C,IAAIgH,GAAS,WACT,IAAI0F,EAASjf,EAAOuf,OACpB,IAAIC,EAAQxf,EAAO0S,OACnB,IAAI+M,EAAczf,EAAOgW,SAIzB,SAAS0J,EAAiB3B,EAAQ5J,GAC9B,IAAIC,EAAW3Q,EAAEqE,OAAO,CACpB0L,OAAQ,GACRlB,KAAM,OACP6B,GACH,IAAI3B,EAAW4B,EAAS5B,SACxB,IAAI2G,EAAMjZ,GAAO6d,GACjB,IAAIvK,EAASY,EAASZ,OACtB,GAAImM,YAAa,CACb3f,EAAO4U,MAAME,GAEjB,IAAI9N,EACJ,GAAIwL,IAAa2G,EAAK,CAClB8F,EAAOvB,KAAK9d,GAAOme,IACnB/d,EAAO0d,KAAK,oCACZ8B,EAAM9B,KAAK,SACR,GAAIlL,IAAa,EAAG,CACvByM,EAAOvB,KAAK,IACZ1W,EAAI1F,GAAUyc,EAAQ,EAAG,GACzB/d,EAAO0d,KAAK9d,GAAOoH,IACnBwY,EAAM9B,KAAK9d,GAAO0B,GAAUyc,EAAQ,GAAIvK,EAASxM,QAC9C,CACH,IAAI4Y,EAAanc,EAAE6Z,SAAShc,UAAUyc,EAAQ,EAAGvL,GACjDyM,EAAOvB,KAAK9d,GAAOggB,EAAYpM,IAC/BxM,EAAI1F,GAAUyc,EAAQvL,EAAUA,EAAW,GAC3C,IAAIqN,GAAYrM,EAASoM,GAAY7T,QAAQ,QAAS,IACtD/L,EAAO0d,KAAK9d,GAAOoH,EAAG6Y,IACtB,GAAIrN,IAAa2G,EAAM,EAAG,CACtBqG,EAAM9B,KAAK,QACR,CACH,GAAI1W,EAAExG,MAAM,MAAO,CACfqf,EAAW,OACR,CACHA,GAAY7Y,EAEhBwY,EAAM9B,KAAK9d,GAAO0B,GAAUyc,EAAQvL,EAAW,GAAIqN,KAI3D,IAAIC,EAAW1L,EAAS5B,YAAc4B,EAAS9B,KAAO6G,EAAMA,EAAM,GAClEnZ,EAAOid,YAAY,WAAY6C,GAE/B7D,IACA,IAAI8D,EAAatc,EAAE6Z,SAASpd,OAAOF,EAAO8E,QAC1C,GAAIib,EAAa,EAAG,CAChB,IAAIvP,EAAOxQ,EAAO8O,KAAK,eAAe,GACtC0B,EAAK2L,MAAM6D,YAAY,WAAYD,GAKvCnK,IAEJ,SAASqK,EAAIlC,EAAQkB,GACjB,MAAO,+CACHrf,GAAOme,EAAQkB,GAAU,IACzB,SAKR,SAASiB,EAAYC,GACjB,IAAIC,EAAWX,EACfhc,EAAEiB,KAAKyb,EAAO,SAAS7f,EAAG4d,GACtBkC,EAAW3c,EAAEwc,EAAI/B,IAAOmC,YAAYD,KAM5C,SAASE,EAAaH,GAClB1c,EAAEiB,KAAKyb,EAAO,SAAS7f,EAAG4d,GACtBuB,EAAYR,OAAOgB,EAAI/B,EAAM5d,IAAM,EAAI0U,EAAmB,OAMlE,OAAO,WACH,IAAI+I,EACJ,cAAe3J,EAASf,MACpB,IAAK,UACD0K,EAAS3J,EAASf,KAAOkC,EAAQxJ,QAAQ,KAAM,KAAOwJ,EACtD,MACJ,IAAK,SACDwI,EAASxI,EAAQxJ,QAAQ,KAAMqI,EAASf,MACxC,MAER,IAAIuL,EAAYJ,GAAWT,GAC3B,IAAI9R,EACJ,GAAI/L,GAAO0e,KAAe9Z,KAAKiZ,GAAQ7d,OAAQ,CAC3C+L,EAAMuG,MACH,CACHvG,EAAMyJ,EAEV,IAAIpV,EACJ0K,EAAK8D,KAAK,4CAA4C7G,SACtD+C,EAAKuV,IAAI,aAAc,UACvBtB,EAAOvB,KAAK,IAEZ,GAAIY,OAAOxZ,KAAK8Z,IAAc/J,EAAYI,EAAa,GACnD2J,EAAUpe,MAAM,MAAO,CACvB,IAAI0T,EAAO0K,EAAUpe,MAAM,OAC3B,IAAIggB,EAAkB5B,EAEtB,GAAI1K,EAAM,CACN0K,EAAYA,EAAU7S,QAAQ,MAAO,YAEzC,IAAIrG,EAAQoY,GAA0Bc,GACtC,GAAI1K,EAAM,CACNxO,EAAQjC,EAAEoB,IAAIa,EAAO,SAASwY,GAC1B,OAAOA,EAAKnS,QAAQ,oBAAqB,QAGjD,IAAIsS,EAAYne,GAAOwF,EAAM,IAE7B,GAAI2Y,IAAc,GAAK3Y,EAAMxF,SAAW,EAAG,OAEpC,GAAI+L,EAAMoS,EAAW,CACxBqB,EAAiBha,EAAM,GAAI,CACvB8M,SAAUvG,EACVuH,OAAQwB,IAEZkL,EAAYxa,EAAMtD,MAAM,SACrB,GAAI6J,IAAQoS,EAAW,CAE1BoB,EAAYR,OAAOgB,EAAIva,EAAM,GAAIsP,IACjC0K,EAAiBha,EAAM,IAAM,GAAI,CAAC8M,SAAU,IAC5C,GAAI9M,EAAMxF,OAAS,EAAG,CAClBggB,EAAYxa,EAAMtD,MAAM,SAEzB,CACH,IAAIkQ,EAAO5M,EAAMtD,OAAO,GAAG,GAC3B,IAAI+W,EAAMjZ,GAAOsgB,GACjB,IAAIC,EAAYtH,EAAMlN,EACtB,IAAIyU,EAAWxgB,GAAOoS,GACtB,IAAIqO,EAAU,EACd,GAAIF,KAAe,EAAG,CAClBA,EAAY,EAEhB,GAAIA,GAAaC,EAAU,CACvBJ,EAAa5a,EAAMtD,MAAM,GAAI,IAC7B,GAAIse,IAAaD,EAAW,CACxBE,EAAU,MACP,CACHA,EAAUD,EAAWD,EAEzBf,EAAiBpN,EAAM,CACnBE,SAAUmO,EACVrO,KAAM,WAEP,CAEH,IAAIsO,EACJ,IAAInO,EACJkO,EAAU1U,EACV,IAAK3L,EAAI,EAAGA,EAAIoF,EAAMxF,SAAUI,EAAG,CAC/B,IAAIugB,EAAcpd,EAAE6Z,SAASpd,OAAOwF,EAAMpF,IAC1C,GAAIqgB,EAAUE,EAAa,CACvBF,GAAWE,MACR,CACH,OAGRpO,EAAU/M,EAAMpF,GAChBsgB,EAAatgB,EAEb,GAAIqgB,IAAYzgB,GAAOuS,GAAU,CAC7BkO,EAAU,EACVlO,EAAU/M,IAAQkb,GAClB,GAAInO,IAAYzP,UAAW,CAEvB,IAAI8d,EAAMrd,EAAE6Z,SAASlK,SAAS2N,QAAQC,YACtC,MAAM,IAAInb,MAAMib,IAGxBpB,EAAiBjN,EAAS,CACtBD,SAAUmO,IAEdL,EAAa5a,EAAMtD,MAAM,EAAGwe,IAC5BV,EAAYxa,EAAMtD,MAAMwe,EAAa,KAG7C5V,EAAK8D,KAAK,mCAAmCsC,OAAO,sBACjD,GAAIwN,IAAc,GAAI,CACzBK,EAAOvB,KAAK,IACZ1d,EAAO0d,KAAK,oCACZ8B,EAAM9B,KAAK,QACR,CACHgC,EAAiBd,EAAW,CAACpM,SAAUvG,IAE3C,IAAIgV,EAAUxB,EAAYvJ,UAAU,WAAWhW,OAC/C,GAAIghB,2BAA4B,CAC5BlW,EAAK,GAAGmR,MAAM6D,YAAY,gBAAiBiB,OACxC,CACH1M,EAAKgM,IAAI,MAAOU,EAAU,GAAK,MAEnCjW,EAAKuV,IAAI,aAAc,KA5MlB,GAmNb,IAAIY,GAAgB,WAChB,SAASC,EAAIC,EAAYpV,GACrB,IAAIqV,EAAO7d,EAAEqE,OAAO,GAAIsM,EAAU,CAC9B5B,SAAUvG,IAEd,IAAIsV,EAAQ9d,EAAE6Z,SAASuB,iBAAiBtJ,EAAS+L,GAAM,GACvD,GAAIC,IAAUF,EAAY,CACtB,OAAO,OACJ,GAAIE,EAAQF,EAAY,CAC3B,OAAO,MACJ,CACH,OAAQ,GAGhB,OAAO,SAAStD,EAAQrI,GACpB,GAAIA,IAAuB,EAAG,CAC1B,OAAO,EAEXqI,EAASjZ,KAAKiZ,GACd,IAAIyD,EAAgBzD,EAAO7d,OAC3B,IAAI+L,EAAMwV,cAAc,EAAGD,EAAe9L,EAAoB0L,GAC9D,IAAIM,EAAQje,EAAE6Z,SAASqE,iBAAiB5D,GACxC,GAAIyD,EAAgBE,EAAMxhB,OAAQ,CAC9B,IAAIiZ,EAAM,EACV,IAAK,IAAI7Y,EAAI,EAAGA,EAAIohB,EAAMxhB,SAAUI,EAAG,CACnC6Y,GAAOuI,EAAMphB,GAAGJ,OAChB,GAAIiZ,GAAOlN,EAAK,CACZ,OAAOkN,IAInB,OAAOlN,GA/BK,GAqCpB,IAAI+L,GAAc,WACd,SAAShQ,EAAIwL,GACTA,EAAS/P,EAAE6Z,SAASuB,iBAAiBrL,EAAQ,IAC7CA,EAAS/P,EAAE6Z,SAASyB,UAAUvL,GAC9BA,EAASoO,KAAKpO,GACduB,EAAuBvB,EACvB,IAAI2M,EAAQ1c,EAAE6Z,SAASU,YAAYxK,EAAQqB,GAC3C,IAAIV,EAAU,CACVW,WAAYV,EAASU,YAEzBE,EAAmBmL,EAAMA,EAAMjgB,OAAS,GACxC,IAAI2hB,EAAoBpe,EAAE6Z,SAAS6B,OAAOgB,EAAMA,EAAMjgB,OAAS,GAAI,CAC/DgU,KAAME,EAASF,OAEnB,IAAI4N,EAAYre,EAAE6Z,SAAS1d,OAAOiiB,EAAmB1N,GACrD,IAAIyK,EAAYuB,EAAM/d,MAAM,GAAI,GAAGyC,IAAI,SAASqZ,GAC5CA,EAAOza,EAAE6Z,SAAS6B,OAAOjB,EAAM,CAC3BhK,KAAME,EAASF,OAEnB,MAAO,sBACHzQ,EAAE6Z,SAAS1d,OAAOse,EAAM/J,GACxB,YACLvC,OAAO,CAACkQ,IAAYpgB,KAAK,MAE5B,GAAIwT,EAAYwI,SAAWkB,EAAW,CAClC1J,EAAYwI,KAAKkB,GACjB3J,EAAaqJ,OAAOxZ,KAAK+c,KAGjC,OAAO,WACH,cAAerO,GACX,IAAK,SACDxL,EAAIwL,GACJ,MACJ,IAAK,WACDA,EAAO3T,KAAKmL,EAAMhD,GAClB,QApCE,GA2ClB,SAAS8T,KACL,GAAIjG,IAAgB,EAAG,CACnB,OAEJ,GAAI7K,EAAK6Q,YAAa,CAElB7Q,EAAKxC,QAAQ,IAAK,WACdwC,EAAKkN,OAAO3D,EAAKI,OACjBJ,EAAKI,IAAIY,GACTkH,OAKZ,SAASsF,KACL,GAAIpc,YAAYyO,EAASR,iBAAkB,CACvCQ,EAASR,gBAAgB/T,KAAKmL,EAAMuK,IAI5C,SAASyM,GAAMjE,GACX,OAAOA,EAAOhS,QAAQ,0BAA2B,WAKrDtI,EAAEqE,OAAOkD,EAAM,CACXiX,OAAQ,SAASnQ,EAAMzI,GACnB,UAAWA,IAAU,YAAa,CAC9B,OAAO+K,EAAStC,OACb,CACHsC,EAAStC,GAAQzI,EAErB,OAAO2B,GAEX8G,KAAM,SAASiM,GACX,GAAIA,IAAW/a,UAAW,CACtB8O,EAAOiM,EACP,IAAI/L,EAAUyB,GAAWA,EAAQzB,YAAcyB,EAC/CA,EAAU,IAAI5B,QACVC,EACAsC,EAASb,YACTa,EAASX,UAAY,UAGzB,IAAKzB,EAAS,CACVyB,EAAQT,UAEZ,OAAOhI,MACJ,CACH,OAAO8G,IAGfgB,MAAO,WACHW,EAAQZ,QACR,OAAO7H,GAEXyI,QAAS,WACL,OAAOA,GAEXyO,OAAU,SAASnb,EAAGob,GAClB,IAAIC,EAASrE,EACb,GAAIhX,IAAM,EAAG,CACT,MAAO,QACJ,GAAIA,EAAI,EAAG,CACd,GAAIyL,EAAW,EAAG,CAGd4P,EAAU7M,EAAQnT,MAAM,EAAGoQ,GAAUpQ,MAAM2E,GAC3CgX,EAASjZ,KAAKyQ,GACdwI,EAASA,EAAO3b,MAAM,EAAGoQ,EAAWzL,GAChCgX,EAAO3b,MAAMoQ,EAAUuL,EAAO7d,QAClC,IAAKiiB,EAAM,CACPnX,EAAKwH,SAASA,EAAWzL,UAG9B,GAAIwO,IAAY,GAAI,CACvBwI,EAASjZ,KAAKyQ,GACd,GAAI/C,EAAWuL,EAAO7d,OAAQ,CAC1BkiB,EAAUrE,EAAO3b,MAAMoQ,GAAUpQ,MAAM,EAAG2E,GAC1CgX,EAASA,EAAO3b,MAAM,EAAGoQ,GACrBuL,EAAO3b,MAAMoQ,EAAWzL,EAAGgX,EAAO7d,SAG9C,GAAIkiB,EAAS,CACT7M,EAAUyM,GAAMjE,GAEpBxE,KACAkD,IACAsF,KACA,OAAOK,GAEXpa,IAAK,SAAS+V,EAAQoE,EAAME,GACxB,GAAItE,IAAW/a,UAAW,CACtBuS,EAAUyM,GAAMjE,GAChB,IAAKoE,EAAM,CACPnX,EAAKwH,SAAS1N,KAAKyQ,GAASrV,QAEhCqZ,KACAkD,IACA,IAAK4F,EAAQ,CACTN,MAGR,OAAO/W,GAEXqM,OAAQ,SAASiL,EAAYjZ,GACzB,SAAS+V,EAAK3Z,EAAKnB,GACf,IAAIie,EAAWjL,EAAe7R,GAC9B,GAAIE,YAAY4c,GAAW,CACvBA,EAAWA,EAASxc,KAAKiF,GAE7B,OAAO,SAASpE,GAEZ,OAAOtC,EAAGzE,KAAKmL,EAAMpE,EAAG2b,IAGhC,UAAWD,IAAe,YAAa,CACnC,OAAOjL,OACJ,UAAWiL,IAAe,SAAU,CACvC,UAAWjZ,IAAU,YAAa,CAC9B,GAAIgO,EAAOiL,GAAa,CACpB,OAAOjL,EAAOiL,QACX,GAAIhL,EAAegL,GAAa,CACnC,OAAOhL,EAAegL,QAEvB,CACHjL,EAAOiL,GAAclD,EAAKkD,EAAYjZ,QAEvC,CACHgO,EAAS5T,EAAEqE,OACP,GACAuP,EAASA,EAASC,EAClB7T,EAAEc,KAAK+d,GAAc,GAAIlD,IAE7B,OAAOpU,IAGfkN,OAAQ,SAAS6F,EAAQoE,GACrB,IAAIK,EAAe1d,KAAKyQ,GACxB,IAAI4D,EAAMrU,KAAKiZ,GAAQ7d,OACvB,GAAIsS,IAAagQ,EAAatiB,OAAQ,CAClC6d,EAASyE,EAAezE,OACrB,GAAIvL,IAAa,EAAG,CACvBuL,EAASA,EAASyE,MACf,CACHzE,EAASyE,EAAapgB,MAAM,EAAGoQ,GAC3BuL,EAASyE,EAAapgB,MAAMoQ,GAEpC+C,EAAUyM,GAAMjE,GAChB,IAAKoE,EAAM,CACPnX,EAAKwH,SAAS2G,EAAK,KAAM,UACtB,CACHsD,IAEJlD,KACAkD,IACAsF,KACA,OAAO/W,GAEXjG,IAAK,WACD,OAAOwQ,GAEXwC,SAAU,SAASA,GACf,GAAIA,EAAU,CACV3D,EAAS2D,SAAWA,EACpB,OAAO/M,MACJ,CACH,OAAO+M,IAGf0K,QAAS,WACLC,GAAItU,OAAO,eAAgBuU,IAC3BD,GAAItU,OAAO,cAAewU,IAC1BF,GAAItU,OAAO,YAAayU,IACxB7X,EAAKvC,SAAS,QAASuU,GACvBhS,EAAK8D,KAAK,WAAW4D,OAAOzK,SAASsK,MAAMgN,OAAOtX,SAC9CsK,MAAMtK,SACV+C,EAAK8D,KAAK,uBAAuB7G,SACjC+C,EAAK4R,YAAY,OAAOlO,WAAW,OAAOM,IAAI,QAC9C,OAAOhE,GAEXwI,OAAQ,SAASsP,GACb,GAAIA,IAAgB,KAAM,CACtB,OAAO/N,OACJ,GAAI+N,IAAgB9f,UAAW,CAClC,OAAOwQ,MACJ,CACH,UAAWsP,IAAgB,iBAChBA,IAAgB,WAAY,CACnCtP,EAASsP,MACN,CACH,MAAM,IAAIjd,MAAM,uCAEpBmS,KAGAuB,KACA,OAAOvO,IAGfyK,UAAW,WACP,OAAOA,GAEXjD,SAAU,SAASzL,EAAGgc,EAAUV,GAC5B,UAAWtb,IAAM,SAAU,CACvB,IAAIkF,EAAMuG,EACV,IAAI2G,EAAMrU,KAAKyQ,GAASrV,OACxB,GAAI6iB,EAAU,CACVvQ,GAAYzL,OACT,GAAIA,EAAI,EAAG,CACdyL,EAAW,OACR,GAAIzL,EAAIoS,EAAK,CAChB3G,EAAW2G,MACR,CACH3G,EAAWzL,EAEf,GAAIkF,IAAQuG,IAAa6P,EAAQ,CAC7B9I,KACA,GAAI5T,YAAYyO,EAASV,kBAAmB,CACxCU,EAASV,iBAAiBlB,EAAUkD,GAExC+G,EAAa,MAEjB,OAAOzR,MACJ,CACH,OAAOwH,IAGfwQ,QAAS,WACLhL,KACAuB,KACA,OAAOvO,GAIXiY,iBAAkB,SAASlc,EAAGgc,GAC1B,GAAIhc,IAAM/D,UAAW,CACjB,OAAO0S,MACJ,CACH,IAAIqI,EAASS,GAAWjJ,EAAS,MACjC,IAAI4D,EAAMjZ,GAAO6d,GACjB,IAAImF,EAAcpe,KAAKyQ,GAASrV,OAChC,IAAIijB,EACJ,GAAIJ,EAAU,CACVI,EAAoBzN,EAAqB3O,OACtC,GAAIA,EAAIoS,EAAK,CAChBgK,EAAoBhK,MACjB,CACHgK,EAAoBpc,EAExB,GAAIjC,KAAKiZ,GAAQ7d,SAAWA,GAAOqV,GAAU,CACzCG,EAAqByN,EACrB,OAAOnY,EAAKwH,SAAS2Q,GAEzB,GAAIhK,IAAQgK,EAAmB,CAC3BzN,EAAqByN,EACrB,OAAOnY,EAAKwH,SAAS0Q,GAEzB,IAAIjX,EAAMkV,GAAc5L,EAAS4N,GACjC,GAAIlX,KAAS,EAAG,CACZyJ,EAAqByN,EACrBnY,EAAKwH,SAASvG,GAElB,OAAOjB,IAGfoY,QAAS,WACL,IAAIA,EAAUpY,EAAKoY,QACnB,OAAO,WACHA,EAAQ9gB,MAAM0I,EAAM,IACpBuO,KACAvB,KACA,OAAOhN,GANN,GASTqY,KAAM,WACF,IAAIA,EAAOrY,EAAKqY,KAChB,OAAO,WACHA,EAAK/gB,MAAM0I,EAAM,IACjBuO,KACAvB,KACA,OAAOhN,GANT,GASNsY,OAAQ,SAAS/Z,GACbuL,EAAa0I,KACb,GAAIjU,EAAK,CACLsL,EAAYtL,MACT,CACHsL,EAAY8I,GAAc7I,GAE9ByE,KACAvB,KACA,OAAOhN,GAEX+H,OAAQ,WACJ,IAAKf,EAAS,CACVA,EAAU,KACVhH,EAAKoE,SAAS,WACd,IACI,GAAImF,EAAKvG,GAAG,gBAAiB,CACzBuG,EAAKjI,QAETiI,EAAKvI,MAAMwG,GACb,MAAO5L,IAGT+O,EAAU,MACV,GAAIhQ,YAAY6N,GAAS,CACrBwE,KAEJiE,IACAQ,IAEJT,IACA,OAAOhR,GAEX6Q,UAAW,WACP,OAAO7J,GAEXgB,QAAS,SAAS1G,GACd0F,EAAU,MACVhH,EAAK4R,YAAY,WACjBjH,EAAU,OACV,IAAKrJ,EAAO,CACR0P,IAEJ,OAAOhR,GAEXqI,KAAM,SAASkQ,GACX,UAAWA,IAAa,YAAa,CACjC,OAAOnP,EAASf,SACb,CACHe,EAASf,KAAOkQ,EAChBhK,KACA,OAAOvO,MAQnBA,EAAK8G,KAAKsC,EAAStC,MAAQsC,EAASZ,QAAU,IAC9C,UAAWY,EAASZ,SAAW,SAAU,CACrCA,EAASY,EAASZ,WACf,CACHA,EAAS,KAEbwE,KACA,GAAI5D,EAASpC,UAAY,KAAM,CAC3BhH,EAAK+H,SAET,IAAKqB,EAASX,QAAS,CACnBA,EAAQT,UAEZ,IAAI+I,GAAmB,KAGvB,IAAIyH,GAAmB,MACvB,IAAIC,GAAW,MACf,IAAIC,GAAa,MACjB,IAAIC,GAAc,MAClB,IAAIC,GAAS,MACb,IAAI9L,GAAa,KACjB,IAAI+L,GAAY,MAChB,IAAIC,GAAU,MACd,IAAIC,GAAO,MACX,IAAIC,GAAa,MACjB,IAAIC,GAGJ,IAAIpM,GAAe,GAInB,SAASqM,GAAatd,GAClB,OAAOA,EAAEnB,IAAIlE,gBAAkB,aAAeqF,EAAEud,QAAU,EAG9D,SAASC,GAAUxd,GACf,OAAOA,EAAEnB,KAAOmB,EAAEnB,IAAIvF,SAAW,IAAM0G,EAAEqQ,QAG7C,SAASoN,GAAyBzd,GAE9B,OAAOA,EAAEud,QAAU,IAAMvd,EAAEud,QAAU,IACjCvd,EAAEud,QAAU,IAAMvd,EAAEud,QAAU,IAC9Bvd,EAAEud,QAAU,IAAMvd,EAAEud,QAAU,IAC9Bvd,EAAEud,QAAU,IAAMvd,EAAEud,QAAU,GAGtC,SAASvB,GAAchc,GACnBlD,MAAM,YAAckD,EAAEnB,IAAM,KAAOmB,EAAE0d,KAAO,IAAM1d,EAAEud,OACpDL,IAAWld,EAAEnB,KAAO,IAAI/C,gBAAkB,WAAakE,EAAEud,QAAU,EACnE,IAAI1f,EACJgf,GAAWE,IAAeD,KAAeQ,GAAatd,GAEtD,IACI,IAAKA,EAAE0d,KAAM,CACTZ,GAAaU,GAAUxd,GAEvBgd,GAAS5iB,OAAO4F,EAAEnB,KAAK/C,gBAAkB,eACzCmhB,GAAYK,GAAatd,IAE/B,MAAO2d,IAGT,GAAI3d,EAAEnB,MAAQ,eAAgB,CAC1BqS,GAAa,KAGb,OAEJ,IAAKlR,EAAE0d,KAAM,CACTX,GAAc,KACd7L,GAAa,MAIjBvD,EAAKvF,IAAI,QAAS8M,IAClB,IAAIrW,EAAMsR,EAAQnQ,GAClB,GAAIjB,YAAYyO,EAASoQ,SAAU,CAC/B/f,EAAS2P,EAASoQ,QAAQ3kB,KAAKmL,EAAMpE,GACrC,GAAInC,IAAWzB,UAAW,CAEtB,IAAKyB,EAAQ,CACTwf,GAAc,KAElB,OAAOxf,GAGf,GAAIuN,EAAS,CACThH,EAAKxC,QAAQ4L,EAASN,YAAa,OAAQ,WACvCiQ,GAAO,OAEX,GAAIA,GAAM,CACNte,EAAM,QAAUA,EAChB,GAAIue,GAAY,CACZ,OAEJ,GAAI5P,EAASL,kBAAoB,GAC7BtO,EAAIkC,QAAQyM,EAASJ,sBAAwB,EAAG,CAChDgQ,GAAa,KACbhZ,EAAKxC,QAAQ4L,EAASL,kBAAmB,QAAS,WAC9CiQ,GAAa,SAIzBpO,IAEAqO,GAAc,CAAC,SAAU,UAAUtc,QAAQlC,MAAU,EACrD,GAAImB,EAAEud,QAAU,MAAQvd,EAAEud,QAAU,IAAMvd,EAAEqQ,SAAU,CAClD8E,GAAmB,KAEvB,GAAI5G,GAAkBkP,GAAyBzd,GAAI,CAC/CsW,IACAlF,KACA,GAAIpR,EAAEud,QAAU,GAAI,CAChBnZ,EAAKhD,IAAI,IAEbuR,KACA,GAAI3S,EAAEud,QAAU,GAAI,CAChBvB,GAAc/iB,KAAKqE,KAAM0C,SAE1B,GAAIjB,YAAY0R,EAAO5R,IAAO,CACjChB,EAAS4S,EAAO5R,GAAKmB,GACrB,GAAInC,IAAW,KAAM,CACjB,OAEJ,GAAIA,IAAWzB,UAAW,CACtB,OAAOyB,QAER,GAAImC,EAAEwQ,OAAQ,CACjB,WACG,CACHoM,GAAmB,MACnB,SAOZ,SAASiB,KACLzZ,EAAKvC,SAAS,QACdub,GAAaD,GAAO,MAExB,IAAIrB,GAAMjf,EAAEgD,SAASie,iBAAmB5hB,QACxCkI,EAAKqM,OAAOjD,EAASiD,QAAU,IAC/B,SAASsL,GAAe/b,GACpBlD,MAAM,aAAekD,EAAEnB,IAAM,KAAOmB,EAAE0d,MACtCG,KACA,IAAIhgB,EACJ,IAAKmC,EAAE0d,KAAM,CACTX,GAAc,MAElB,IAAK/c,EAAEqQ,SAAWrQ,EAAEsQ,WAAatQ,EAAEwQ,OAAQ,CACvC,OAEJ,GAAIoM,GAAkB,CAClB,OAEJ,GAAI7d,YAAYyO,EAASuQ,UAAW,CAChClgB,EAAS2P,EAASuQ,SAAS9kB,KAAKmL,EAAMpE,GACtC,GAAInC,IAAWzB,UAAW,CACtB,IAAKyB,EAAQ,CACTwf,GAAc,KAElB,OAAOxf,GAGf,GAAIuN,EAAS,CACT,GAAIpL,EAAE0d,KAAM,CAGR,OAIJ,IAAI7e,EACJ,GAAImf,eAAiBhe,EAAE0d,KAAM,CACzB7e,EAAMmB,EAAEnB,IAER,IAAIof,EAAapf,EAAIlE,cACrB,GAAI6U,EAAYyO,GAAa,CACzBpf,EAAM2Q,EAAYyO,IAG1B,IAAKpf,GAAOme,GAAQ,CAChBne,EAAMzE,OAAOC,aAAa2F,EAAEud,OAEhC,GAAI1gB,EAAEqhB,QAAQle,EAAEud,MAAO,CAAC,GAAI,EAAG,KAAO,EAAG,CACrC,GAAIvd,EAAEme,UAAY,IAAK,CACnB,OAEJ,OAAO,WAEJ,GAAItf,KAASmB,EAAEqQ,SAAYrQ,EAAEqQ,SAAWrQ,EAAEqQ,aACnCrQ,EAAEwQ,QAAUxQ,EAAEud,QAAU,MAAQvd,EAAEwQ,UACpCqM,GAAU,CAElB,GAAItO,EAAgB,CAChBC,GAAkB3P,EAClB4T,IACAC,SACG,GAAI7T,EAAIvF,SAAW,EAAG,CACzB8K,EAAKkN,OAAOzS,MAK5B,SAASuf,GAAMC,EAAMC,EAAKf,GACtB,IAAIa,EAAQvhB,EAAE0hB,MAAMF,GACpBD,EAAMb,MAAQA,EACda,EAAMvf,IAAMyf,EACZF,EAAMV,KAAO,KACb5B,GAAIvU,QAAQ6W,GAEhB,SAASnC,KACLnf,MAAM,SAAWoU,GAAa,OAASgM,GAAU,MAAQH,GACnD,OAASF,GAAW,SAAWQ,GAAc,QAAUP,GACvD,OAASE,GAAS,SAAWC,GAAY,KAE/C,IAAIlP,EAAMJ,EAAKI,MACf,IAAKD,UAAW,CACZC,EAAMA,EAAI5I,QAAQ,KAAM,IAK5B,IAAK+L,IAAcgM,KAAaH,IAAeF,MAAcQ,KAC9BP,IAAcE,MAAYC,KACrDlP,IAAQY,EAAS,CACjB,IAAItJ,EAAMuG,EAEV,GAAIsF,GAAY,CACZ,IAAI3E,EAAM0E,GACVgM,GAAY1Q,EAAI7R,UAAU,EAAG6R,EAAIjT,OAAS,GAAGA,SAAWyU,EAAIzU,OAEhE,GAAIiV,EAAgB,CAChBC,EAAiBT,EACjB0E,IACAC,QACG,CACH,IAAI4L,EAAMvQ,EAAIrT,UAAUkR,GACxB,GAAI0S,EAAIhlB,SAAW,GAAK2jB,GAAW,CAE/B,GAAI/L,GAAY,CACZ,IAAIsN,EACJ,GAAIvB,GAAW,CACXuB,EAAU,MACP,CACHA,EAAUF,EAAI3jB,cAAc8jB,WAAW,GAE3CL,GAAM,UAAWnB,GAAY,YAAcqB,EAAKE,GAEpD,GAAIzB,KAAgBE,GAAW,CAC3BmB,GAAM,WAAYE,EAAKA,EAAIG,WAAW,KAG9C,GAAIxB,GAAW,CACXhM,GAAetC,EACf,OAGJ,GAAI0O,GAAa,CACbA,GAAc,MACd,OAEJjZ,EAAKhD,IAAI2M,GAEb,GAAIkP,GAAW,CACX7Y,EAAKwH,SAASvG,EAAM,OACjB,CAGHjB,EAAKwH,SAASvG,EAAM2R,KAAK0H,IAAI3Q,EAAIzU,OAAS2X,GAAa3X,UAG/D2X,GAAetC,EACf0O,GAAc,MACdnM,GAAa,KAEjB4K,GAAI3c,KAAK,eAAgB4c,IAAgB5c,KAAK,cAAe6c,IACxD7c,KAAK,YAAa0e,IAAY1e,KAAK,YAAa8c,KACrD,WACI,IAAI0C,EAAW,MACf,IAAIC,EAAQ,EACZxa,EAAKmE,GAAG,gBAAiB,WACrBoW,EAAW,OACZpW,GAAG,cAAe,SAASvI,GAC1B,SAASuH,IACL,IAAIsX,EAAUhiB,EAAEmD,EAAEsF,QAClB,IAAKuZ,EAAQzX,GAAG,YAAc0X,EAAM,CAChC,GAAI1T,EAAS,CACT,GAAIyT,EAAQzX,GAAG,QAAS,CACpBhD,EAAKwH,SAAS1N,KAAKyQ,GAASrV,YACzB,CACH8K,EAAKiY,iBAAiBnN,EAAalP,MAI/C4e,EAAQ,EAGZ,IAAIG,EACJ,GAAI/e,EAAEgf,gBAAkB5iB,UAAW,CAC/B2iB,EAAS/e,EAAE+e,WACR,CACHA,EAAS/e,EAAEgf,cAAcD,OAE7B,GAAIA,IAAW,GAAKE,sBAAwB,GAAI,CAC5C,IAAI/T,EAAO,SAAWwC,EACtB,KAAMkR,IAAU,EAAG,CACf,IAAIE,EAAOH,EACX,GAAIvT,EAAS,CACT,GAAIoC,EAASP,eAAiB,EAAG,CAC7B1F,QACG,CACHnD,EAAKxC,QAAQ4L,EAASP,aAAc/B,EAAM3D,QAE3C,CACHqX,EAAQ,OAET,CACHxa,EAAKvC,SAASqJ,GACd0T,EAAQ,GAGhBD,EAAW,SA5CnB,GA+CAva,EAAKwD,KAAK,MAAOxD,GACjB,KAAM,kBAAmBlI,QAAU,QAASA,OAAOgjB,cAAcrjB,WAAY,CACzE6N,WAAW,WACP,MAAM,IAAIzK,MAAM,uDACA,wDACjB,GAEP,OAAOmF,GAMX,IAAI+a,eAAiB,2GAErB,IAAIC,kBAAoB,kCAExB,IAAIC,SAAW,2oOAEf,IAAIC,UAAY,sVAChB,IAAIC,UAAY,0kDAChB,IAAIC,gBAAkB,2FACtB,IAAIC,gBAAkB,wGACtB,IAAIC,UAAY,uGAChB,IAAIC,gBAAkB,sGACtB,IAAIC,eAAiB,wGACrB,IAAIC,aAAe,gCACnB,IAAIC,OAAS,+DACb,IAAIC,UAAY,6EAChB,IAAIC,SAAW,2JACf,IAAIC,WAAa,8IACjB,IAAIC,oBAAsB,mDAC1B,IAAIC,gBAAkB,mCACtB,IAAIC,gBAAkB,oCACtB,IAAIC,cAAgB,mCACpB,IAAIC,eAAiB,6BACrB,IAAIC,SAAW,2CACf,IAAIC,MAAQ,uDACZ,IAAIC,UAAY,oEAChB,IAAIC,oBAAsB,8EAO1B,IAAIpL,oBAAsB,WACtB,IAAIvG,EAAY,MACZ4R,EAAc,wBAAwB5gB,MAAM,KAC5C6gB,EAAM/gB,SAASghB,cAAc,OACjC,GAAID,EAAIrL,MAAME,cAAe,CACzB1G,EAAY,KAEhB,GAAIA,IAAc,MAAO,CACrB,IAAK,IAAIrV,EAAI,EAAGA,EAAIinB,EAAYrnB,OAAQI,IAAK,CACzC,IAAIwR,EAAOyV,EAAYjnB,GAAK,gBAC5B,GAAIknB,EAAIrL,MAAMrK,KAAU9O,UAAW,CAC/B2S,EAAY,KACZ,QAIZ6R,EAAM,KACN,OAAO7R,EAjBe,GAoB1B,IAAI+R,qBAAuB,WACvB,IAAIC,EAAQ7kB,OAAO2H,UAAUC,UAC7B,GAAIid,EAAMnnB,MAAM,kBAAoBmnB,EAAMnnB,MAAM,YAAa,CACzD,OAAO,MAEX,IAAIyf,EAAMxZ,SAASghB,cAAc,OACjCxH,EAAI9D,MAAMvH,MAAQ,MAClB,OAAOqL,EAAI9D,MAAMvH,QAAU,MAPJ,GAU3B,IAAIsM,2BAA6Bpe,OAAO8kB,KAAO9kB,OAAO8kB,IAAIC,UAClD/kB,OAAO8kB,IAAIC,SAAS,aAAc,GAE1C,IAAIlL,WAAalS,UAAUC,UAAUhI,cAAciF,QAAQ,cAAgB,EAE3E,IAAIid,cAAgB,SAAUA,IAC1B,KAAM,kBAAmB9hB,QAAU,QAASA,OAAOgjB,cAAcrjB,WAAY,CACzE,OAAO,MAEX,IAAIqlB,EAAQhlB,OAAOgjB,cAAcrjB,UACjC,IAAIsC,EAAMvC,OAAOulB,yBAAyBD,EAAO,OAAO/iB,IACxD,OAAOA,EAAIhE,WAAWP,MAAM,mBANZ,GASpB,IAAIkU,UAAY,SAAUzP,GACtB,IAAI+iB,EAAQ,MACZ,GAAI9B,UAAUplB,KAAKmE,IAAMkhB,UAAUrlB,KAAKmE,EAAEgjB,OAAO,EAAG,IAAK,CACrDD,EAAQ,KAEZ,OAAOA,EALK,CAMbvd,UAAUC,WAAaD,UAAUyd,QAAUplB,OAAOqlB,OAIrD,IAAIxI,YAAc,MAClBlc,EAAE,WACE,SAASmR,EAAMhO,GACX,OAAOA,EAAE,GAAG6I,wBAAwBmF,MAExC,IAAIwT,EAAO,yDACX,IAAIC,EAAK5kB,EAAE2kB,EAAO,6CAA6C/Y,SAAS,QACxE,IAAIiZ,EAAQ7kB,EAAE2kB,EAAO,mBAAmB/Y,SAAS,QACjDsQ,YAAc/K,EAAMyT,KAAQzT,EAAM0T,GAClCD,EAAGpgB,SACHqgB,EAAMrgB,WAIV,IAAIqW,OAAS,WACT,UAAW/a,UAAY,YAAa,CAChC,OAAO,SAASwa,GACZ,OAAOta,EAAE6Z,SAASpd,OAAO6d,QAE1B,CACH,OAAOxa,SANF,GAUb,SAASglB,UAAUxK,GACf,IAAKA,EAAOvd,MAAM,KAAM,CACpB,OAAOud,EAEX,OAAOta,EAAE,SAAW+kB,KAAKzK,GAAU,WAAWjZ,OAGlD,SAASA,KAAKiZ,GACV,OAAOwK,UAAU9kB,EAAE6Z,SAASa,MAAMJ,IAGtC,SAASyK,KAAKzK,GACV,IAAKA,EAAOvd,MAAM,SAAU,CACxB,OAAOud,EAEX,OAAOA,EAAOhS,QAAQ,eAAgB,SACjCA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAG7C,SAAS6V,KAAK7D,GACV,OAAOA,EAAOhS,QAAQ,MAAO,IAMjC,SAAS0c,mBAAmB1K,GACxB,IAAI2K,EAAc3K,EAAOvd,MAAMylB,UAC/B,GAAIyC,EAAa,CACb,OAAOA,EAAY,QAChB,GAAI3K,EAAOzc,UAAU,EAAG,GAAGyK,QAAQia,kBAAmB,OAAS,EAAG,CACrE,GAAIjI,EAAOzc,UAAU,GAAGd,MAAMulB,gBAAiB,CAC3C,OAAOhI,EAAOzc,UAAU,EAAG,GAE/B,OAAOyc,EAAOzc,UAAU,EAAG,OACxB,CACH,IAAIqnB,EAAc5K,EAAOvd,MAAMulB,gBAC/B,GAAI4C,EAAa,CACb,OAAOA,EAAY,GAEvB,OAAO5K,EAAO,IAMtB,SAAS6K,mBAAmB7K,EAAQvL,GAChC,GAAIA,IAAa,EAAG,CAChB,OAAOA,EAEXuL,EAASta,EAAE6Z,SAASa,MAAMJ,GAC1B,IAAItZ,EAAShB,EAAE6Z,SAASqE,iBAAiB5D,GAAQ/Y,OAAO,SAAS6jB,EAAK3D,GAClE,UAAW2D,IAAQ,SAAU,CACzB,OAAOA,EAEX,IAAI3oB,EAAS2oB,EAAI3oB,OAASglB,EAAIhlB,OAC9B,GAAIA,GAAUsS,EAAU,CACpB,OAAOqW,EAAIrW,SAAW,EAE1B,MAAO,CACHA,SAAUqW,EAAIrW,SAAW,EACzBtS,OAAQA,IAEb,CAACsS,SAAU,EAAGtS,OAAQ,IACzB,UAAWuE,IAAW,SAAU,CAC5B,OAAOA,MACJ,CACH,OAAOA,EAAO+N,UAItB,SAASsW,gBAAgB3P,EAAKhF,GAC1B,GAAIuT,qBAAsB,CACtB,MAAO,UAAYvO,EAAM,UACtB,IAAK+H,2BAA4B,CACpC,GAAI/M,EAAQW,WAAY,CACpB,MAAO,UAAaX,EAAQW,WAAaqE,EAAO,UAEjD,CACH,MAAO,aAAeA,EAE1B,MAAO,GAGX,SAAS4P,UAAUjkB,EAAMqP,GACrB,UAAW5Q,UAAY,YAAa,CAChC,IAAIylB,EAAOT,UAAUzjB,GACrB,IAAIqU,EAAMmF,OAAO0K,GACjB,GAAI7P,IAAQ1V,EAAE6Z,SAASpd,OAAO8oB,GAAO,CACjC,OAAOF,gBAAgB3P,EAAKhF,IAGpC,MAAO,GAGX,SAAS8U,gBAAgBnkB,EAAMqP,GAC3B,UAAW5Q,UAAY,YAAa,CAChC,IAAIylB,EAAOT,UAAUzjB,GACrB,IAAI4c,EAAQje,EAAE6Z,SAASqE,iBAAiBqH,GACxC,GAAItH,EAAMxhB,SAAW,EAAG,CACpB,OAAO4E,EAEX,IAAIokB,EAAQxH,EAAM7c,IAAI,SAASqgB,GAC3B,MAAO,CAAC/L,IAAKmF,OAAO4G,GAAMA,IAAKA,KAChClgB,OAAO,SAASmkB,EAAKC,GACpB,IAAI9W,EAAO6W,EAAIA,EAAIjpB,OAAS,GAC5B,GAAIoS,EAAM,CACN,GAAIA,EAAK6G,MAAQiQ,EAAKjQ,IAAK,CACvB,OAAOgQ,EAAIvX,OAAO,CAAC,CACfyX,IAAKD,EAAKjQ,IACVA,IAAKiQ,EAAKjQ,IACVxV,IAAKylB,EAAKlE,WAEX,CACHiE,EAAIxX,MACJ,OAAOwX,EAAIvX,OAAO,CAAC,CACfyX,IAAK/W,EAAK+W,IAAMD,EAAKjQ,IACrBA,IAAK7G,EAAK6G,IACVxV,IAAK2O,EAAK3O,IAAMylB,EAAKlE,QAIjC,MAAO,CAAC,CACJmE,IAAKD,EAAKjQ,IACVxV,IAAKylB,EAAKlE,IACV/L,IAAKiQ,EAAKjQ,OAEf,IACH,OAAO+P,EAAMrkB,IAAI,SAASukB,GACtB,GAAIA,EAAKjQ,MAAQ,EAAG,CAChB,OAAOiQ,EAAKzlB,IAEhB,IAAIwY,EAAQ2M,gBAAgBM,EAAKC,IAAKlV,GACtC,GAAIiV,EAAKC,MAAQ3H,EAAMxhB,SAAWic,EAAMjc,OAAQ,CAC5C,MAAO,SAAWkpB,EAAKzlB,IAAM,cAC1B,CACH,MAAO,gBAAkBwY,EAAQ,KAAOiN,EAAKzlB,IAAM,aAExDjC,KAAK,IAEZ,OAAOoD,EAKX,SAAS2c,cAAcnC,EAAO/M,EAAK8O,EAAYiI,GAC3C,IAAInQ,EAAM5G,EAAM+M,EAChB,IAAIiK,EAAMjK,EAAQ1B,KAAKC,MAAM1E,EAAM,GACnC,IAAIiI,EAAMkI,EAAWjI,EAAYkI,GACjC,GAAInI,IAAQ,EAAG,CACX,OAAOmI,OACJ,GAAInI,EAAM,GAAKjI,EAAM,EAAG,CAC3B,OAAOsI,cACH8H,EACAhX,EACA8O,EACAiI,QAED,GAAIlI,EAAM,GAAKjI,EAAM,EAAG,CAC3B,OAAOsI,cACHnC,EACAiK,EACAlI,EACAiI,OAED,CACH,OAAQ,GAMhB,IAAIzD,kBAAoB,WACpB,GAAI/iB,OAAOuJ,cAAgB5F,SAAS4F,aAAc,CAC9C,OAAO,WACH,IAAIW,GAAalK,OAAOuJ,cAAgB5F,SAAS4F,gBACjD,GAAIW,EAAUlI,KAAM,CAChB,OAAOkI,EAAUlI,SACd,CACH,OAAOkI,EAAUjM,kBAGtB,GAAI0F,SAASuG,WAAavG,SAASuG,UAAUiY,OAAS,UAAW,CACpE,OAAO,WACH,OAAOxe,SAASuG,UAAUC,cAAcnI,MAGhD,OAAO,WACH,MAAO,IAhBS,GAsBxB,SAASuW,kBAAkB9L,EAAWzK,GAClC,IAAI0kB,EAAO/lB,EAAE,QAAUqB,EAAKiH,QAAQ,KAAM,SAAW,SACrDyd,EAAKna,SAAS,QACdoa,WAAWD,EAAK,IAChB,IACI/iB,SAASijB,YAAY,QACvB,MAAO9iB,IACT4iB,EAAKvhB,SAGT,IAAI0hB,uBAAyB,WACzB,IAAIC,EAAWnjB,SAASghB,cAAc,YACtC,IAAI1a,EAAiB,mBAAoB6c,EACzCA,EAAW,KACX,GAAI7c,EAAgB,CAChB,OAAO,SAAS6c,GACZ,IAAI1pB,EAAS0pB,EAASC,aAAeD,EAAS7c,eAC9C,OAAO6c,EAASvgB,MAAM4e,OAAO2B,EAAS7c,eAAgB7M,SAEvD,GAAIuG,SAASuG,UAAW,CAC3B,OAAO,WACH,IAAIM,EAAQ7G,SAASuG,UAAUC,cAC/B,OAAOK,EAAMxI,YAEd,CACH,OAAO,WACH,MAAO,KAhBU,GAqB7B,SAASglB,yBAAyBF,GAC9BA,EAAS7c,eAAiB6c,EAASC,aAAe,EAKtD,SAASE,cAAchM,EAAQrY,EAAOskB,GAClC,IAAKtkB,EAAMxF,OAAQ,CACf,MAAO,GAEX,IAAI+kB,EAAOgF,YAAYlM,GACvB,IAAItZ,EAAS,GACb,IAAK,IAAI4Y,EAAIU,EAAO7d,OAAQmd,EAAI3X,EAAM,GAAGxF,SAAUmd,EAAG,CAClD,IAAIxc,EAAO,MACX,IAAIqpB,EAAYxkB,EAAM,GAAGlE,OAAO6b,GAC5B8M,EAAiBD,EAAUxnB,cAC/B,IAAK,IAAIpC,EAAI,EAAGA,EAAIoF,EAAMxF,SAAUI,EAAG,CACnCO,EAAO,KACP,IAAI4R,EAAU/M,EAAMpF,GAAGkB,OAAO6b,GAC1B+M,EAAe3X,EAAQ/P,cAC3B,GAAIwnB,IAAczX,EAAS,CACvB,GAAIuX,GAAa/E,IAAS,QAAS,CAC/BpkB,EAAO,MACP,WACG,GAAIspB,IAAmBC,EAAc,CACxC,GAAInF,IAAS,QAAS,CAClBiF,EAAYA,EAAUxnB,mBACnB,GAAIuiB,IAAS,QAAS,CACzBiF,EAAYA,EAAU3oB,kBACnB,CACHV,EAAO,MACP,WAED,CACHA,EAAO,MACP,QAIZ,GAAIA,EAAM,CACN4D,EAAO5D,KAAKqpB,OACT,CACH,OAGR,OAAOnM,EAAStZ,EAAO/C,KAAK,IAGhC,SAAS2oB,wBAAwB3X,GAC7B4X,UAAU9Y,QAAQ,SAAS+Y,GACvBA,EAAKnW,WAAWoW,iBAAiB3qB,KAAK0qB,EAAM7X,KAIpD,IAAI3E,OAAS,WACT,GAAIjL,OAAOuJ,aAAc,CACrB,IAAIW,EAAYlK,OAAOuJ,eACvB,GAAIW,EAAUyd,iBAAkB,CAC5B,OAAO,SAASnL,EAAO/M,GACnB,IAAIvF,EAAYlK,OAAOuJ,eACvBW,EAAUyd,iBAAiBnL,EAAO,EAAG/M,EAAK,QAE3C,CACH,OAAO,SAAS+M,EAAO/M,GACnB,IAAIvF,EAAYlK,OAAOuJ,eACvB,IAAIiB,EAAQ7G,SAASwG,cACrBK,EAAMod,SAASpL,EAAO,GACtBhS,EAAMV,OAAO2F,EAAKA,EAAIoY,WAAWzqB,QACjC8M,EAAU4d,kBACV5d,EAAU6d,SAASvd,SAGxB,CACH,OAAO7J,EAAEkQ,MAnBJ,GAuBb,SAAS8V,WAAWhgB,GAChB,GAAI3G,OAAOuJ,aAAc,CACrB,IAAIW,EAAYlK,OAAOuJ,eACvB,GAAIW,EAAUyd,iBAAkB,CAC5Bzd,EAAUyd,iBAAiBhhB,EAAS,EAAGA,EAAS,QAC7C,GAAIhD,SAASwG,YAAa,CAC7B,IAAIK,EAAQ7G,SAASwG,cACrBK,EAAMX,mBAAmBlD,GACzBuD,EAAU4d,kBACV5d,EAAU6d,SAASvd,KAK/B,SAASwd,gBAAgB/M,EAAQzZ,GAC7B,IAAIoB,EAAQqY,EAAOvd,MAAMqmB,aAAe,GACxC,GAAInhB,EAAMxF,OAAQ,CACd,IAAI4R,EAAOpM,EAAMqlB,QACjB,IAAIC,EAAOvnB,EAAEoB,IAAIa,EAAO,SAAStF,GAC7B,GAAIA,EAAII,MAAM,SAAU,CACpBJ,EAAMA,EAAI2L,QAAQ,MAAO,gCACzB3L,EAAMkE,EAAGlE,GACT,OAAOA,EAAI2L,QAAQ,oBAAqB,MAE5C,OAAOzH,EAAGlE,KAEd,IAAI6qB,EAASxnB,EAAEoB,IAAIa,EAAO,SAAStF,GAC/B,IAAIwb,EAAIxb,EAAII,MAAM,gBAClB,OAAOob,GAAKA,EAAE,IAAM,KAExB,IAAIsP,EAAOnN,EAAOzc,UAAUwQ,EAAK5R,QAAQoJ,OACzC,MAAO,CACHiM,QAASwI,EACTjM,KAAMA,EACNkZ,KAAMA,EACNG,YAAaF,EACbC,KAAMA,OAEP,CACH,MAAO,CACH3V,QAASwI,EACTjM,KAAM,GACNkZ,KAAM,GACNG,YAAaF,EACbC,KAAM,KAKlBznB,EAAE6Z,SAAW,CACT8N,QAAS,QACTC,KAAM,kCAENC,YAAa,CACT,cAAe,eAAgB,QAAS,SAAU,OAAQ,QAC1D,SAAU,MAAO,SAAU,UAAW,QAAS,OAAQ,QACvD,SAAU,OAAQ,OAAQ,OAAQ,OAAQ,YAC1C,eAAgB,OAAQ,aAAc,QAAS,QAAS,SACxD,QAAS,iBAAkB,OAAQ,aAAc,QACjD,YAAa,YAAa,aAAc,YAAa,QACrD,iBAAkB,WAAY,UAAW,OAAQ,WACjD,WAAY,gBAAiB,WAAY,YAAa,WACtD,YAAa,cAAe,iBAAkB,aAC9C,aAAc,UAAW,aAAc,eACvC,gBAAiB,gBAAiB,gBAAiB,gBACnD,aAAc,WAAY,cAAe,UAAW,UACpD,aAAc,YAAa,cAAe,cAAe,UACzD,YAAa,aAAc,OAAQ,YAAa,OAAQ,QACxD,cAAe,OAAQ,WAAY,UAAW,YAAa,SAC3D,QAAS,QAAS,WAAY,gBAAiB,YAC/C,eAAgB,YAAa,aAAc,YAC3C,uBAAwB,YAAa,aAAc,YACnD,YAAa,cAAe,gBAAiB,eAC7C,iBAAkB,iBAAkB,iBAAkB,cACtD,OAAQ,YAAa,QAAS,UAAW,SACzC,mBAAoB,aAAc,eAAgB,eAClD,iBAAkB,kBAAmB,oBACrC,kBAAmB,kBAAmB,eAAgB,YACtD,YAAa,WAAY,cAAe,OAAQ,UAAW,QAC3D,YAAa,SAAU,YAAa,SAAU,gBAC9C,YAAa,gBAAiB,gBAAiB,aAC/C,YAAa,OAAQ,OAAQ,OAAQ,aAAc,SAAU,MAC7D,YAAa,YAAa,cAAe,SAAU,aACnD,WAAY,WAAY,SAAU,SAAU,UAAW,YACvD,YAAa,YAAa,OAAQ,cAAe,YAAa,MAC9D,OAAQ,UAAW,SAAU,YAAa,SAAU,QACpD,QAAS,aAAc,SAAU,eAErCxa,MAAOA,MACPe,QAASA,QACTJ,MAAOA,MAIP8Z,YAAa,SAASA,EAAYC,GAC9B,GAAIA,EAAMhrB,MAAMimB,cAAe,CAC3B,OAAO,SACJ,CACH,OAAOhjB,EAAEqhB,QAAQ0G,EAAM9oB,cAAee,EAAE6Z,SAASgO,gBAAkB,IAM3EG,iBAAkB,SAASA,EAAiB1N,GACxC,QAASA,EAAOvd,MAAM8mB,sBAM1B/J,aAAc,SAASA,EAAa5Z,GAChC,UAAWA,IAAQ,SAAU,CACzB,IAAI+nB,EAAU,yBACd,OAAO/nB,EAAIoI,QAAQ2f,EAAS,UAMpCC,gBAAiB,SAASA,EAAgBhoB,GACtC,cAAcA,IAAQ,YAAcA,EAAInD,MAAM+lB,kBAElDlH,cAAe,SAASA,EAAc1b,GAClC,cAAcA,IAAQ,YAAcA,EAAInD,MAAMgmB,iBAKlDoF,aAAc,SAASA,EAAajoB,GAChC,OAAOA,EAAIgD,MAAMyf,iBAAiBjV,OAAOI,UAO7Csa,iBAAkB,SAASA,EAAiB9N,EAAQ+N,EAAKC,EAAavZ,GAClE,SAASlR,EAAUyc,EAAQuB,EAAO/M,GAC9B,OAAOwL,EAAOzc,UAAUge,EAAO/M,GAEnC,SAASrS,EAAO6d,GACZ,OAAOta,EAAE6Z,SAASa,MAAMJ,GAAQ7d,OAEpC,IAAI8rB,EAAa,GACjB,IAAIxrB,EACJ,IAAIsL,EAAQ,EACZ,IAAImgB,EACJ,IAAIC,EAAe1Z,EACnB,IAAI8M,EACJwM,EAAIpgB,UAAY,EAChB,MAAQlL,EAAQsrB,EAAIhqB,KAAKic,GAAU,CAE/B,GAAI+N,EAAIjpB,OAAQ,CAEZ,IAAIspB,EAAajsB,EAAOoB,EAAUyc,EAAQ,EAAG+N,EAAIpgB,YACjD4T,EAAQ6M,EAAajsB,EAAOM,EAAM,QAC/B,CACH8e,EAAQ9e,EAAMsL,MACdqgB,EAAa7M,EAAQpf,EAAOM,EAAM,IAEtC,GAAIsL,EAAQwT,EAAO,CACf0M,GAAc1qB,EAAUyc,EAAQjS,EAAOwT,GAE3CxT,EAAQqgB,EAGR,UAAWJ,IAAgB,WAAY,CACnCE,EAAaF,EAAYzpB,MAAM,KAAM9B,OAClC,CACHyrB,EAAaF,EAAYhgB,QAAQ,aAAc,SAAS6P,EAAGwQ,GACvD,GAAIA,IAAO,IAAK,CACZ,MAAO,IAEX,OAAO5rB,EAAM4rB,KAIrBJ,GAAcC,EAEd,GAAI3M,EAAQ9M,EAAU,CAElB,GAAI2Z,EAAa3Z,EAAU,CAEvB0Z,EAAetO,KAAKkB,IAChB,EACAoN,EACAhsB,EAAO+rB,GACP/rB,EAAOM,EAAM,SAEd,CAEH0rB,GAAgBhsB,EAAO+rB,IAAezZ,EAAW8M,IAKzD,IAAKwM,EAAIjpB,OAAQ,CACb,OAIR,GAAIiJ,EAAQ5L,EAAO6d,GAAS,CACxBiO,GAAc1qB,EAAUyc,EAAQjS,GAGpC,GAAIiS,IAAWiO,EAAY,CACvB,MAAO,CAACjO,EAAQvL,GAEpB,MAAO,CAACwZ,EAAYE,IAMxBG,mBAAoB,SAASA,EAAmBtO,EAAQ7P,GACpD,SAASoe,EAAShsB,GACd,OAAOyd,EAAOzc,UAAUhB,EAAI,EAAGA,KAAO,UAClCyd,EAAOzc,UAAUhB,EAAI,EAAGA,GAAGE,MAAM,MAGzC,IAAI+rB,EAAY,qCAChB,SAASC,EAAa1gB,GAClB,OAAOiS,EAAOzc,UAAUwK,GAAOtL,MAAM+rB,GAGzC,SAASE,EAAmBnsB,GACxB,OAAOyd,EAAOzd,KAAO,KAAOyd,EAAOzd,EAAI,KAAO,IAGlD,SAASosB,EAAkBpsB,GACvB,OAAOyd,EAAOzd,KAAO,MAAQyd,EAAOzd,EAAI,KAAO,IAGnD,SAASqsB,EAAQrsB,GACb,OAAOssB,IAAmB7O,EAAOzd,KAAO,MAAQqrB,KACxCkB,EAGZ,IAAIlB,EAAkBloB,EAAE6Z,SAASqO,gBAAgB5N,GACjD,IAAIS,EAAa,GACjB,IAAIsO,EAAU,MACd,IAAItH,EAAQ,EACZ,IAAIhlB,EACJ,IAAI8nB,GAAS,EACb,IAAIyE,EACJ,IAAI7sB,EAAS,EACb,IAAIwQ,EAAS,EACb,IAAK,IAAIpQ,EAAI,EAAGA,EAAIyd,EAAO7d,OAAQI,IAAK,CACpC,IAAIgB,EAAYyc,EAAOzc,UAAUhB,GACjCE,EAAQc,EAAUd,MAAMwmB,iBACxB,GAAIxmB,EAAO,CACPge,EAAahe,EAAM,GACnBssB,EAAU,WACP,GAAItO,EAAY,CACnB,GAAIT,EAAOzd,KAAO,IAAK,CACnB,GAAIwsB,EAAS,CACTtO,EAAa,GACbsO,EAAU,UACP,CACHA,EAAU,WAGf,CACHA,EAAU,KAEd,IAAIF,EAAkBpO,GAAcsO,IAAatO,EACjD,IAAIqO,EAAUJ,EAAmBnsB,GACjC,GAAIgsB,EAAShsB,KAAOssB,GAAkBC,GAAU,CAC5C,GAAIvE,KAAW,GAAKyE,IAAezsB,GAAKgoB,KAAW,EAAG,CAClDA,EAAQhoB,GAGhB,IAAI0sB,EAASjP,EAAOzd,GAAGE,MAAM,SAC7B,GAAIosB,EAAgB,CAEhB,GAAI7O,EAAOzd,KAAO,IAAK,CACnBE,EAAQgsB,EAAalsB,GACrB,GAAIE,EAAO,CACPF,GAAKE,EAAM,GAAGN,OAAS,EACvB,WAEFslB,IACAtlB,OACC,GAAIwsB,EAAkBpsB,GAAI,GAE3BklB,IACAtlB,EACFwQ,EAAS,EACTpQ,GAAK,OACF,IAAK0sB,IAAWrB,EAAiB,GAClCnG,IACAtlB,GAGV,GAAIysB,EAAQrsB,GAAI,CACZ,GAAIge,OAAOP,EAAOzd,MAAQ,EAAG,CACzBJ,IAEJ,IAAIsO,EAAO,CACPgX,MAAOA,EACP1Z,MAAOxL,EAAIoQ,EACX8N,WAAYA,EACZte,OAAQA,EACR4E,KAAMgoB,EACNpb,KAAMhB,EAAS,EACf4X,MAAOA,GAEX,IAAIje,EAAM6D,EAASM,GACnB,GAAInE,IAAQ,MAAO,CACf,WACG,GAAIA,EAAK,CACZ,GAAIA,EAAImb,QAAUxiB,UAAW,CACzBwiB,EAAQnb,EAAImb,MAEhB,GAAInb,EAAInK,SAAW8C,UAAW,CAC1B9C,EAASmK,EAAInK,OAEjB,GAAImK,EAAIie,QAAUtlB,UAAW,CACzB+pB,EAAazE,EACbA,EAAQje,EAAIie,MAEhB,GAAIje,EAAIyB,QAAU9I,UAAW,CACzB1C,EAAI+J,EAAIyB,MACR,gBAGL,GAAIxL,IAAMyd,EAAO7d,OAAS,EAAG,CAChCgO,EAAS,CACLsX,MAAOA,EAAQ,EACf1Z,MAAOxL,EACPke,WAAYA,EACZte,OAAQ,EACR4E,KAAMgoB,EACNxE,MAAOA,IAIf,IAAI2E,EAAOxE,mBAAmBnnB,GAC9B,GAAI2rB,EAAK/sB,OAAS,EAAG,CACjBI,GAAK2sB,EAAK/sB,OAAS,KAO/BoB,UAAW,SAASA,EAAUyc,EAAQmP,EAAaC,GAC/C,IAAIzL,EAAQje,EAAE6Z,SAASqE,iBAAiB7c,KAAKiZ,IAC7C,IAAK2D,EAAMtf,MAAM8qB,EAAaC,GAAWjtB,OAAQ,CAC7C,MAAO,GAEX,IAAIof,EAAQ,EACZ,IAAI/M,EACJ,IAAI6a,EAAmB,GACvB,IAAIC,EAAiB,GACrB,IAAIC,EACJ,IAAIxT,EAAK,aACT,IAAIpJ,EAAS,EACbjN,EAAE6Z,SAAS+O,mBAAmBtO,EAAQ,SAASvP,GAC3C,IAAIoN,EACJ,GAAIsR,GAAe1e,EAAKgX,QAAU0H,EAAc,EAAG,CAC/C5N,EAAQ9Q,EAAK1C,MAEb8P,EAAImC,EAAOzc,UAAU,EAAGge,EAAQ,GAAG9e,MAAMsZ,GACzC,GAAI8B,EAAG,CACH0D,GAAS1D,EAAE,GAAG1b,OAElB,GAAIsO,EAAKgQ,WAAY,CACjB4O,EAAmB5e,EAAKgQ,YAGhC,GAAI2O,GAAa3e,EAAKgX,QAAU2H,EAAW,CACvCE,EAAiB7e,EAAKgQ,WACtB8O,EAAa9e,EAAK1C,MAClB4E,EAASlC,EAAKkD,KAElB,GAAIlD,EAAKgX,QAAU2H,EAAY,EAAG,CAC9B5a,EAAM/D,EAAK1C,MACX8P,EAAImC,EAAOzc,UAAU,EAAGiR,EAAM,GAAG/R,MAAMsZ,GACvC,GAAI8B,EAAG,CACHrJ,GAAOqJ,EAAE,GAAG1b,OAEhB,GAAIsO,EAAKgQ,WAAY,CACjBjM,EAAM+a,EAAa5c,MAI/B,GAAIwc,IAAgB5N,EAAO,CACvB,MAAO,GAEX,GAAI/M,IAAQvP,UAAW,CACnBuP,EAAMwL,EAAO7d,OAEjB6d,EAASqP,EAAmBrP,EAAOzc,UAAUge,EAAO/M,GACpD,GAAI8a,EAAgB,CAChBtP,EAASA,EAAOhS,QAAQ,kBAAmB,IAC3CgS,GAAU,IAEd,OAAOA,GAMXgB,UAAW,SAASA,EAAUhB,GAC1B,OAAOA,EAAOhS,QAAQua,UAAW,SAASiH,EAAG3tB,EAAQkF,GACjD,GAAIA,IAAS,GAAI,CACb,MAAO,GAEX,SAAS0jB,EAAKzK,GACV,OAAOA,EAAOhS,QAAQ,QAAS,SAASA,QAAQ,MAAO,OAClDA,QAAQ,UAAW,KAE5BnM,EAAS4oB,EAAK5oB,GACd,IAAI4tB,EAAa5tB,EAAOY,MAAM,MAAMN,OAEpC,GAAIstB,GAAc,EAAG,CACjB,IAAIxC,EAAOprB,EAAO+G,MAAM,KACxB,IAAI2Y,EAAQ0L,EAAK5oB,MAAM,EAAG,GAAGV,KAAK,KAClC,IAAItB,EAAM4qB,EAAK5oB,MAAM,GAAGV,KAAK,KAC7B,MAAO,KAAO4d,EAAQ,KAAOlf,GAAO0E,GAAQ,IAAMA,EAAO,SACtD,GAAI0oB,IAAe,EAAG,CACzBA,EAAa,UACV,GAAIA,IAAe,EAAG,CACzBA,EAAa,QACV,CACHA,EAAa,GAKjB,MAAO,KAAO5tB,EAAS4tB,EAAahF,EAAK1jB,GAAQ,IAAMA,EAAO,OAOtEkZ,YAAa,SAASA,EAAYra,EAAKzD,EAAQutB,GAC3C,IAAIC,EAAc,GAClB,IAAIjpB,EAAS,GACb,IAAIiB,EAAQjC,EAAE6Z,SAASyB,UAAUpb,GAAKgD,MAAM,OAC5C,IAAK,IAAIrG,EAAI,EAAG6Y,EAAMzT,EAAMxF,OAAQI,EAAI6Y,IAAO7Y,EAAG,CAC9C,GAAIoF,EAAMpF,KAAO,GAAI,CACjBmE,EAAO5D,KAAK,IACZ,SAEJ,IAAIqd,EAAOxY,EAAMpF,GACjB,IAAIqtB,EAAc,EAClB,IAAIttB,EACJ,IAAIutB,EAAc1P,EAAKhe,OACvB,IAAIwhB,EAAQje,EAAE6Z,SAASqE,iBAAiB7c,KAAKoZ,IAC7C,IAAI2P,EAAYnM,EAAMA,EAAMxhB,OAAS,GACrC,IAAIitB,EAAYS,GAAeC,EAAYA,EAAU3tB,OAAS,GAC9D,IAAI4tB,IAAiB5P,EAAK1d,MAAM,mCAChC,GAAIstB,EAAc,CACdX,GAAa,EAEjB1pB,EAAE6Z,SAAS+O,mBAAmBnO,EAAM,SAAS1P,GACzC,IAAIuf,EAAkBvf,EAAK1C,QAAUqhB,EACrC,IAAIjI,EAAK5jB,EACT,GAAIkN,EAAKtO,QAAUA,GAAU6tB,GACxBvf,EAAKtO,SAAWA,EAAS,GACzBoe,OAAOJ,EAAK1P,EAAK1C,MAAQ,MAAQ,EAAI,CACtC,IAAIkiB,EAAY,MAChB,GAAIP,GAAcjf,EAAK8Z,SAAW,EAAG,CAEjC,IAAI2F,EAAWnpB,KAAKoZ,EAAK5c,UAAUkN,EAAK8Z,QAExC,IAAI4F,EAAWD,EAAS/tB,OACxB,IAAIgL,EAAQsD,EAAK1C,MAAQ5L,EAAS,EAClC+tB,EAAWA,EAAS3sB,UAAU,EAAG4J,GACjC,GAAI+iB,EAASztB,MAAM,cAAgB0K,EAAQgjB,EAAU,CACjDF,EAAY,MAKpB,IAAIG,EACJ,GAAIV,GAAcjf,EAAK8Z,SAAW,GAC9B9Z,EAAK1C,QAAU8hB,EAAc,GAAKI,EAAW,CAC7C3tB,EAAS6d,EAAK5c,UAAUqsB,EAAanf,EAAK8Z,OAC1C6F,EAAY3f,EAAK8Z,MAAQ,MACtB,CACHhnB,EAAY4c,EAAK5c,UAAUkN,EAAK1C,OAChCoZ,EAAMuD,mBAAmBnnB,GACzBjB,EAAS6d,EAAK5c,UAAUqsB,EAAanf,EAAK1C,OAASoZ,EACnD,GAAI6I,GAAmBD,GAAgB5I,IAAQ,IAAK,CAChD7kB,GAAU,IAEd8tB,EAAY3f,EAAK1C,MAAQoZ,EAAIhlB,OAAS,EAE1C,GAAIutB,EAAY,CACZptB,EAASA,EAAO0L,QAAQ,+BAAgC,IAE5D4hB,GAAeQ,GAAa3f,EAAK1C,OAAS,EAC1C,GAAI4hB,EAAa,CACb,IAAIU,EAAoB/tB,EAAOG,MAAM,aACrCH,EAASqtB,EAAcrtB,EACvB,GAAI+tB,EAAmB,CACnBV,EAAc,IAGtB,IAAIW,EAAUhuB,EAAOG,MAAM8lB,WAC3B,GAAI+H,EAAS,CACT,IAAI/b,EAAO+b,EAAQA,EAAQnuB,OAAS,GACpC,GAAIoS,EAAKA,EAAKpS,OAAS,KAAO,IAAK,CAC/BwtB,EAAcpb,EAAK9R,MAAMumB,iBAAiB,GAC1C1mB,GAAU,SACP,GAAIA,EAAOG,MAAMymB,eAAgB,CACpC5mB,EAASA,EAAO0L,QAAQkb,cAAe,IACvCyG,EAAcpb,EAAK9R,MAAMumB,iBAAiB,IAGlDtiB,EAAO5D,KAAKR,GAEZ,MAAO,CAACyL,MAAOqiB,EAAWjuB,OAAQ,EAAGooB,OAAQ,MAIzD,OAAO7jB,GAKX6pB,IAAK,SAASA,EAAI3qB,GACd,OAAOA,EAAIoI,QAAQ,4BAA6B,UAKpDoT,OAAQ,SAASA,EAAOxb,EAAKwQ,GACzB,IAAIC,EAAW3Q,EAAEqE,OAAO,CACpBoM,KAAM,EACN+K,OAAQ,IACT9K,GACH,OAAO1Q,EAAE6Z,SAASgR,IAAI3qB,GAAKoI,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAC1DA,QAAQ,KAAM,UAAUpF,MAAM,MAAM9B,IAAI,SAASqZ,GAC9C,IAAIK,EAAWL,EAAKvX,MAAM,gCAC1B4X,EAAWA,EAASpN,OAAOI,SAC3B,OAAOgN,EAAS1Z,IAAI,SAASlB,EAAKrD,GAC9B,GAAIqD,EAAInD,MAAM,MAAO,CACjB,OAAOmD,EAAIoI,QAAQ,cAAe,SAASwhB,EAAGhb,GAC1C,GAAIjS,IAAM,GAAKie,EAASje,EAAI,GAAGE,MAAM,UAAW,CAC5C,IAAI+tB,EAAK,IAAI3oB,MAAMwO,EAASF,KAAO,GAAGxS,KAAK,UAC3C,OAAO6sB,EAAKhc,MACT,CACH,IAAI0M,EAASV,EAASnc,MAAM9B,EAAI,EAAGA,GAAGoB,KAAK,IAC3C,GAAI0S,EAAS6K,QAAU3e,GAAK,EAAG,CAC3B2e,EAAS7K,EAAS6K,OAASA,EAE/B,IAAI9F,EAAM1V,EAAE6Z,SAASpd,OAAO+e,GAC5B,IAAIyC,EAAQtN,EAASF,KAAQiF,EAAM/E,EAASF,KAC5C,GAAIwN,IAAU,EAAG,CACbA,EAAQ,EAEZ,OAAO,IAAI9b,MAAM8b,EAAQ,GAAGhgB,KAAK,UAAY6Q,KAIzD,OAAO5O,IACRjC,KAAK,MACTA,KAAK,OAMhB8sB,kBAAmB,SAASA,EAAkBzQ,GAC1C,IAAKta,EAAE6Z,SAASqO,gBAAgB5N,GAAS,CACrC,OAAOA,EAEX,IAAIiB,EAAQ,GACZ,IAAIlF,EAAK,mDACT,IAAIwM,EAAY,kCAChB,OAAOvI,EAAOpX,MAAMmT,GAAI3I,OAAOI,SAAS1M,IAAI,SAASkZ,GACjD,GAAIA,EAAOvd,MAAM,SAAU,CACvB,IAAKiD,EAAE6Z,SAAS+B,cAActB,GAAS,CACnCA,GAAU,IACViB,EAAMne,KAAKkd,EAAOhS,QAAQua,EAAW,YAEtC,CACH,IAAI3U,EAAM,MACV,GAAIoM,EAAOvd,MAAM,MAAO,CACpBmR,EAAM,KAEV,GAAIqN,EAAM9e,OAAQ,CACd6d,EAASiB,EAAMA,EAAM9e,OAAS,GAAK6d,EAEvC,GAAIpM,EAAK,CACLqN,EAAMrN,WACH,GAAIqN,EAAM9e,OAAQ,CACrB6d,GAAU,KAGlB,OAAOA,IACRrc,KAAK,KAKZgd,kBAAmB,SAASA,EAAkBX,GAC1C,OAAOta,EAAE6Z,SAASc,gBAAgBL,IAKtCc,iBAAkB,SAASA,EAAiBd,EAAQ3J,GAChD,GAAI2J,IAAW,GAAI,CACf,UAAW3J,EAAS5B,WAAa,SAAU,CACvC,MAAO,CAAC,GAAI4B,EAAS5B,cAClB,CACH,MAAO,IAGf,SAASic,EAAaC,EAAW5iB,EAAOzB,EAAK0T,GACzC,IAAK2Q,EAAUC,aACXlrB,EAAE6Z,SAASpd,OAAOmK,KAAS5G,EAAE6Z,SAASpd,OAAO6d,GAAS,CACtD6Q,KAAK,kBAAoB9iB,EAAQ,kCAC5B,6DACA,iDAGb,IAAI+iB,EAAaprB,EAAE6Z,SAASlK,SAASyb,WACrCza,EAAWA,GAAY,GACvB,IAAI9T,EAAI,EACR,SAASwuB,EAAyBJ,EAAW/rB,GACzC,IAAIwR,EAAU1Q,EAAEqE,OAAO,GAAIsM,EAAU,CACjC5B,SAAU7P,EAAM,KAEpB,IAAI0H,EAAMqkB,EAAU/rB,EAAM,GAAIwR,GAC9B,UAAW9J,IAAQ,SAAU,CACzBokB,EAAaC,EAAWpuB,EAAI,EAAG+J,EAAK1H,EAAM,IAC1C,UAAW0H,IAAQ,SAAU,CACzB,MAAO,CAACA,EAAK8J,EAAQ3B,UAEzB,OAAO7P,OACJ,GAAI0H,aAAezE,OAASyE,EAAInK,SAAW,EAAG,CACjD,OAAOmK,MACJ,CACH,OAAO1H,GAGf,IAAIA,EACJ,UAAWyR,EAAS5B,WAAa,SAAU,CACvC7P,EAAQ,CAACob,EAAQ3J,EAAS5B,cACvB,CACH7P,EAAQ,CAACob,EAAQ,GAErB,IACI,IAAItZ,EAASoqB,EAAW7pB,OAAO,SAASrC,EAAO+rB,GAC3CpuB,IAKA,UAAWouB,IAAc,YAAcA,EAAUK,SAAU,CACvD,OAAOD,EAAyBJ,EAAW/rB,OACxC,CACH,IAAIzC,EAAS,EACb,IAAI8uB,EAAiB,MACrB,IAAIzQ,EAAW9a,EAAE6Z,SAASsO,aAAajpB,EAAM,IAC7C,IAAIssB,EAAW1Q,EAAS1Z,IAAI,SAASkZ,GACjC,IAAIvL,EACJ,IAAI0c,EAAWpqB,KAAKiZ,GAAQ7d,OAE5B,GAAIyC,EAAM,IAAMzC,EAASgvB,IAAaF,EAAgB,CAClDxc,EAAW7P,EAAM,GAAKzC,EACtB8uB,EAAiB,SACd,CAGHxc,GAAY,EAGhB,IAAI2c,EAAgBjvB,EACpB,IAAIuE,EACJvE,GAAUgvB,EACV,GAAIzrB,EAAE6Z,SAAS+B,cAActB,GAAS,CAClC,MAAO,CAACA,GAAS,OACd,CACH,GAAI2Q,aAAqB9oB,MAAO,CAC5B,IAAIuO,EAAUua,EAAU,IAAM,GAC9BjqB,EAAS,CAACsZ,EAAQvL,EAAW,EAAI,EAAIA,GACrC,GAAI/N,EAAO,GAAGjE,MAAMkuB,EAAU,IAAK,CAC/B,GAAIva,EAAQib,KAAM,CACd,MAAO3qB,EAAO,GAAGjE,MAAMkuB,EAAU,IAAK,CAClCjqB,EAAShB,EAAE6Z,SAASuO,iBAChBpnB,EAAO,GACPiqB,EAAU,GACVA,EAAU,GACVjqB,EAAO,SAGZ,CACHA,EAAShB,EAAE6Z,SAASuO,iBAChBpnB,EAAO,GACPiqB,EAAU,GACVA,EAAU,GACVjqB,EAAO,KAInB,GAAI+N,EAAW,EAAG,CACd,MAAO,CAAC/N,EAAO,IAAK,SAErB,UAAWiqB,IAAc,WAAY,CACxCjqB,EAASqqB,EAAyBJ,EAAW,CACzC3Q,EAAQvL,IAGhB,UAAW/N,IAAW,YAAa,CAG/B,GAAIA,EAAO,MAAQ,EAAG,CAClBA,EAAO,IAAM0qB,EAEjB,OAAO1qB,EAEX,MAAO,CAACsZ,GAAS,MAGzB,IAAIsR,EAAmBJ,EAAS9d,OAAO,SAASme,GAC5C,OAAOA,EAAQ,MAAQ,IACxB,GACH,IAAIvR,EAASkR,EAASpqB,IAAI,SAASyqB,GAC/B,OAAOA,EAAQ,KAChB5tB,KAAK,IACR,IAAI8Q,EACJ,UAAW6c,IAAqB,YAAa,CACzC7c,EAAW7P,EAAM,OACd,CACH6P,EAAW6c,EAAiB,GAGhC,IAAIvQ,EAAMha,KAAKiZ,GAAQ7d,OACvB,GAAIsS,EAAWsM,EAAK,CAChBtM,EAAWsM,EAEf,GAAIf,IAAWpb,EAAM,GAAI,CACrB,OAAOA,EAEX,MAAO,CAACob,EAAQvL,KAErB7P,GACH,UAAWyR,EAAS5B,WAAa,SAAU,CACvC,IAAIgP,EAAgB/d,EAAE6Z,SAASa,MAAM1Z,EAAO,IAAIvE,OAChD,GAAIuD,EAAE6Z,SAASpd,OAAOuE,EAAO,IAAM+c,EAAe,CAC9C,IAAIhP,EAAW/N,EAAO,GACtB+N,EAAWoW,mBAAmBnkB,EAAO,GAAI+N,GACzC,IAAIsM,EAAMrb,EAAE6Z,SAASpd,OAAOuE,EAAO,IACnC,GAAI+N,EAAWsM,EAAK,CAChBtM,EAAWsM,EAEfra,EAAO,GAAK+N,EAEhB,OAAO/N,MACJ,CACH,OAAOA,EAAO,IAEpB,MAAOmC,GACL,IAAIka,EAAM,wBAA0BxgB,EAAI,GAAK,IAC7CuuB,EAAWxsB,OAAO/B,EAAI,GACtB,MAAM,IAAImD,EAAE6Z,SAASiS,UAAU,aAAczO,EAAKla,EAAEoY,SAM5Dpf,OAAQ,SAASA,EAAO+D,EAAKwQ,GACzB,SAASqb,EAAUzR,GACf,GAAIA,EAAOvd,MAAM,OAAQ,CACrBud,EAASA,EAAOhS,QAAQ,UAAW,SAASwhB,EAAGkC,GAC3C,GAAIA,EAAQvvB,OAAS,IAAM,EAAG,CAC1B,MAAO,QACJ,CACH,OAAOuvB,EAAQ1jB,QAAQ,KAAM,SAIzC,OAAOyc,KAAKzK,GAEhB,IAAI3J,EAAW3Q,EAAEqE,OAAO,GAAI,CACxB4nB,gBAAiB,MACjBC,cAAe,MACfC,SAAU,OACXzb,GAAW,IACd,UAAWxQ,IAAQ,SAAU,CAEzB,IAAI4a,EAAW9a,EAAE6Z,SAASsO,aAAajoB,GACvCA,EAAMF,EAAEoB,IAAI0Z,EAAU,SAASzZ,GAC3B,GAAIA,IAAS,GAAI,CACb,OAAOA,OACJ,GAAIrB,EAAE6Z,SAAS+B,cAAcva,GAAO,CAGvCA,EAAOA,EAAKiH,QAAQ,eAAgB,SAASjH,GACzC,OAAOA,EAAKiH,QAAQ,UAAW,OAEnC,OAAOjH,EAAKiH,QAAQsa,gBAAiB,SACjCrd,EACAmT,EACAqP,EACAqE,EACAtT,EACAuT,EACAhrB,GAEA,GAAIA,IAAS,GAAI,CACb,MAAO,GAEXA,EAAO0qB,EAAU1qB,GACjB,IAAIirB,EAAY,GAChB,GAAI5T,EAAMxU,QAAQ,QAAU,EAAG,CAC3BooB,GAAa,oBAEjB,IAAIC,EAAkB,GACtB,GAAI7T,EAAMxU,QAAQ,QAAU,EAAG,CAC3BqoB,EAAgBnvB,KAAK,aAEzB,GAAIsb,EAAMxU,QAAQ,QAAU,EAAG,CAC3BqoB,EAAgBnvB,KAAK,gBAEzB,GAAIsb,EAAMxU,QAAQ,QAAU,EAAG,CAC3BqoB,EAAgBnvB,KAAK,YAEzB,GAAImvB,EAAgB9vB,OAAQ,CACxB6vB,GAAa,mBACTC,EAAgBtuB,KAAK,KAAO,IAEpC,GAAIya,EAAMxU,QAAQ,QAAU,EAAG,CAC3BooB,GAAa,qBAEjB,GAAItsB,EAAE6Z,SAASiO,YAAYC,GAAQ,CAC/BuE,GAAa,SAAWvE,EAAQ,IAC5B,WAAaA,EAAQ,IACzB,GAAIrP,EAAMxU,QAAQ,QAAU,EAAG,CAC3BooB,GAAa,uBAAyBvE,EAAQ,KAGtD,GAAI/nB,EAAE6Z,SAASiO,YAAYsE,GAAa,CACpCE,GAAa,oBAAsBF,EAAa,IAEpD,IAAIrhB,EACJ,GAAIshB,IAAc,GAAI,CAClBthB,EAAO1J,MACJ,CACH0J,EAAOshB,EAAU/jB,QAAQ,SAAU,KAC9BA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAE7C,IAAIkkB,EAAQlH,UAAUjkB,EAAMqP,GAC5B,GAAI8b,EAAO,CACPnrB,EAAOmkB,gBAAgBnkB,EAAMqP,GAC7B4b,GAAaE,EAEjB,IAAIxrB,EACJ,GAAI0X,EAAMxU,QAAQ,QAAU,EAAG,CAC3B,GAAI6G,EAAKhO,MAAMomB,UAAW,CACtBniB,EAAS,mBAAqB+J,EAAO,QAClC,CACH,IAAK4F,EAASwb,WACTphB,EAAKhO,MAAM,kCAAmC,CAC/CgO,EAAO,GAEX/J,EAAS,qBACT,GAAI+J,EAAM,CACN/J,GAAU,UAAY+J,EAAO,IAEjC,IAAI0hB,EAAM,CAAC,YACX,GAAI9b,EAASsb,gBAAiB,CAC1BQ,EAAIC,QAAQ,cAEhB,GAAI/b,EAASub,cAAe,CACxBO,EAAIC,QAAQ,YAEhB1rB,GAAU,SAAWyrB,EAAIxuB,KAAK,KAAO,IAIzC+C,GAAU,uBACP,CACHA,EAAS,QAEb,GAAIsrB,IAAc,GAAI,CAClBtrB,GAAU,WAAasrB,EAAY,IAEvC,GAAIxT,IAAW,GAAI,CACf9X,GAAU,WAAa8X,EAAS,IAEpC,GAAIJ,EAAMxU,QAAQ,QAAU,EAAG,CAC3BlD,GAAU,IAAMK,EAAO,WACpB,CACHL,GAAU,eACN+J,EAAKzC,QAAQ,KAAM,WAAa,KAChCjH,EAAO,UAEf,OAAOL,QAER,CACHK,EAAO0qB,EAAU1qB,GACjB,IAAImrB,EAAQlH,UAAUjkB,EAAMqP,GAC5B,GAAI8b,EAAM/vB,OAAQ,CACd4E,EAAOmkB,gBAAgBnkB,EAAMqP,GAC7B,MAAO,gBAAkB8b,EAAQ,KAAOnrB,EAAO,cAC5C,CACH,MAAO,SAAWA,EAAO,cAGlCpD,KAAK,IACR,OAAOiC,EAAIoI,QAAQ,6BAA8B,aAC9C,CACH,MAAO,KAMfqS,gBAAiB,SAASA,EAAgBL,GACtC,OAAOA,EAAOhS,QAAQ,MAAO,SAASA,QAAQ,MAAO,UAKzDqkB,kBAAmB,SAASA,EAAkBrS,GAC1C,OAAOA,EAAOhS,QAAQ,SAAU,KAAKA,QAAQ,SAAU,MAK3D7L,OAAQ,SAAS6d,GACb,OAAOta,EAAE6Z,SAASqE,iBAAiB7c,KAAKiZ,IAAS7d,QAKrDyhB,iBAAkB,SAASA,EAAiB5D,GACxC,IAAItZ,EAAS,GACb,MAAOsZ,EAAO7d,OAAQ,CAClB,IAAIglB,EAAMuD,mBAAmB1K,GAC7BA,EAASA,EAAOzc,UAAU4jB,EAAIhlB,QAC9BuE,EAAO5D,KAAKqkB,GAEhB,OAAOzgB,GAMX4rB,QAAS,SAAS3qB,EAAO4qB,EAAMhI,GAC3B,IAAIiI,EAAgB7qB,EAAMb,IAAI,SAASkZ,GACnC,OAAOta,EAAE6Z,SAASa,MAAMJ,KAE5B,IAAIyS,EAAUD,EAAc1rB,IAAI,SAASkZ,GACrC,OAAOO,OAAOP,KAElB,UAAWuK,IAAU,YAAa,CAC9BA,EAAQ,EAEZ,IAAIpoB,EAAS0d,KAAKkB,IAAIxc,MAAM,KAAMkuB,GAAWlI,EAE7C,IAAImI,EAAe7S,KAAKC,MAAMyS,EAAOpwB,GAAU,EAC/C,GAAIuwB,EAAe,EAAG,CAClB,OAAO/qB,EAAMhE,KAAK,MAEtB,IAAIye,EAAQ,GACZ,IAAK,IAAI7f,EAAI,EAAG6Y,EAAMzT,EAAMxF,OAAQI,EAAI6Y,EAAK7Y,GAAKmwB,EAAc,CAC5D,IAAIvS,EAAOxY,EAAMtD,MAAM9B,EAAGA,EAAImwB,GAC9B,IAAIne,EAAO4L,EAAKvM,MAChBwO,EAAMtf,KAAKqd,EAAKlZ,OAAO,SAAS6jB,EAAK9K,GACjC,IAAIkQ,EAAWxqB,EAAE6Z,SAASa,MAAMJ,GAChC,IAAItd,EAAM,IAAImF,MAAM1F,EAAS+tB,EAAS/tB,OAAS,GAAGwB,KAAK,KACvDmnB,EAAIhoB,KAAKkd,EAAStd,GAClB,OAAOooB,GACR,IAAInnB,KAAK,IAAM4Q,GAEtB,OAAO6N,EAAMze,KAAK,OAKtByc,MAAO,SAASA,EAAMxa,GAClBA,EAAMA,EAAIoI,QAAQsa,gBAAiB,MACnC,OAAO1iB,EAAIoI,QAAQ,aAAc,SAAS2kB,EAAOC,GAC7C,OAAOA,KAMfC,OAAQ,SAASA,IACb,OAAOtG,UAAUjZ,SAKrBwf,QAAS,SAASA,IACd,IAAI1X,EAAMmR,UAAUpqB,SACpB,OAAOiZ,EAAM,GASjB2X,eAAgB,SAASA,EAAe1wB,EAAK2wB,GACzC,SAASC,EAAajT,GAElB,OAAOA,EAAOpX,MAAM0gB,WAAWxiB,IAAI,SAASkZ,GAGxC,GAAIA,EAAOvd,MAAM,SAAU,CAEvB,GAAIud,IAAW,MAAQA,IAAW,KAAM,CACpC,MAAO,GAEX,IAAIkT,EAAQlT,EAAO,GACnB,IAAIjE,EAAK,IAAIlO,OAAO,yBAA2BqlB,EAAO,KACtDlT,EAASA,EAAOhS,QAAQ+N,EAAI,MAEhCiE,EAAS,IAAMA,EAAS,IAExB,OAAO7L,KAAKvS,MAAMoe,KACnBrc,KAAK,IAEZ,GAAIqvB,IAAW,MAAO,CAClB,GAAI3wB,EAAI,KAAO,KAAOA,EAAIA,EAAIF,OAAS,KAAO,IAAK,CAC/C,OAAOE,EAAI2L,QAAQ,SAAU,SAC1B,GAAI3L,EAAI,KAAO,KAAOA,EAAIA,EAAIF,OAAS,KAAO,IAAK,CACtD,OAAOE,EAAI2L,QAAQ,SAAU,IAAIA,QAAQ,YAAa,WACnD,GAAI3L,EAAII,MAAM,kBAAmB,CACpC,OAAOJ,OACJ,GAAIA,EAAII,MAAM,SAAU,CAE3B,OAAOwwB,EAAa5wB,OACjB,CACH,OAAOA,EAAI2L,QAAQ,OAAQ,MAGnC,IAAIpD,EAAQvI,EAAII,MAAM4mB,OACtB,GAAIze,EAAO,CACP,OAAO,IAAIiD,OAAOjD,EAAM,GAAIA,EAAM,SAC/B,GAAIvI,EAAII,MAAM,QAAS,CAC1B,OAAOwwB,EAAa5wB,QACjB,GAAIA,EAAII,MAAM,cAAe,CAChC,OAAOU,SAASd,EAAK,SAClB,GAAIA,EAAII,MAAM2mB,UAAW,CAC5B,OAAO/lB,WAAWhB,OACf,CACH,OAAOA,EAAI2L,QAAQ,eAAgB,QAM3CmlB,gBAAiB,SAASA,EAAgBnT,GACtC,OAAOta,EAAEoB,IAAIkZ,EAAOvd,MAAMqmB,aAAe,GAAIpjB,EAAE6Z,SAASwT,iBAM5DK,gBAAiB,SAASA,EAAgBpT,GACtC,OAAOta,EAAEoB,IAAIkZ,EAAOvd,MAAMqmB,aAAe,GAAI,SAASzmB,GAClD,OAAOqD,EAAE6Z,SAASwT,eAAe1wB,EAAK,UAO9CgxB,cAAe,SAASA,EAAcrT,GAClC,OAAO+M,gBAAgB/M,EAAQta,EAAE6Z,SAASwT,iBAK9CO,cAAe,SAASA,EAActT,GAClC,OAAO+M,gBAAgB/M,EAAQ,SAAS3d,GACpC,OAAOqD,EAAE6Z,SAASwT,eAAe1wB,EAAK,UAM9CkxB,cAAe,SAASA,EAAclxB,EAAK+T,GACvC,IAAIC,EAAW3Q,EAAEqE,OAAO,GAAI,CACxBypB,QAAS,IACVpd,GACH,UAAW/T,IAAQ,SAAU,CACzB,OAAOkxB,EAAc7tB,EAAE6Z,SAAS6T,gBAAgB/wB,GAAM+T,GAE1D,IAAI1P,EAAS,CACT8oB,EAAG,IAEP,SAASiE,EAAMnoB,GACXnF,KAAKmF,MAAQA,EAEjB,IAAI6hB,EAAO9qB,EAAI4E,OAAO,SAAS6jB,EAAKzoB,GAChC,UAAWA,IAAQ,SAAU,CACzBA,EAAMY,OAAOZ,GAEjB,GAAIA,EAAII,MAAM,OAASqoB,aAAe2I,EAAO,CACzC/sB,EAAOokB,EAAIxf,OAAS,KAExB,GAAIjJ,EAAII,MAAM,OAAQ,CAClB,IAAIsR,EAAO1R,EAAI2L,QAAQ,MAAO,IAC9B,GAAIqI,EAASmd,QAAQ5pB,QAAQmK,MAAW,EAAG,CACvC,OAAO,IAAI0f,EAAM1f,OACd,CACHrN,EAAOqN,GAAQ,WAEhB,GAAI1R,EAAII,MAAM,MAAO,CACxB,IAAIixB,EAASrxB,EAAI2L,QAAQ,KAAM,IAAIpF,MAAM,IACzC,GAAIyN,EAASmd,QAAQ5pB,QAAQ8pB,EAAOrvB,OAAO,GAAG,OAAS,EAAG,CACtD,IAAIkQ,EAAOmf,EAAO9f,MAEtB8f,EAAOjgB,QAAQ,SAASigB,GACpBhtB,EAAOgtB,GAAU,OAErB,GAAInf,EAAM,CACN,OAAO,IAAIkf,EAAMlf,SAElB,GAAIuW,aAAe2I,EAAO,CAC7B/sB,EAAOokB,EAAIxf,OAASjJ,OACjB,GAAIA,EAAK,CACZqE,EAAO8oB,EAAE1sB,KAAKT,GAElB,OAAO,MACR,MACH,GAAI8qB,aAAgBsG,EAAO,CACvB/sB,EAAOymB,EAAK7hB,OAAS,KAEzB,OAAO5E,GAKXitB,iBAAkB,SAASA,iBAAiBnH,KAAMxM,OAAQ5J,SACtD,IAAIC,SAAW3Q,EAAEqE,OAAO,CACpB6pB,cAAe,OAChBxd,SACH,IACIyd,YAAc,MACd,IAAIhW,EAAImC,OAAOvd,MAAMsmB,qBACrB,GAAIlL,EAAG,CACH,IAAKxH,SAASud,cAAe,CACzB/C,KAAK,wDACA,wBACL,OAEJ7Q,OAASnC,EAAE,GACX,IAAIiW,IAAMjW,EAAE,KAAO,WAAa2O,KAAOA,KAAKpX,MAC5C,IAAI7O,GAAKsX,EAAE,GACX,IACI,IAAIoP,KAAO8G,KAAK,IAAMlW,EAAE,GAAK,KAC7B,IAAKiW,IAAIvtB,IAAK,CACVimB,KAAKhkB,MAAM,mBAAqBjC,QAC7B,CACHutB,IAAIvtB,IAAIhC,MAAMioB,KAAMS,OAE1B,MAAOpkB,GACL2jB,KAAKhkB,MAAM,yBACA9C,EAAE6Z,SAASc,gBAAgBL,cAEvC,CACHwM,KAAKzoB,KAAKic,OAAQ,MAAMgU,KAAK,WACzBH,YAAc,QAGxB,MAAOhrB,MAOborB,SAAU,SAASjU,GACf,SAASS,EAAWT,GAChB,GAAIta,EAAE6Z,SAAS+B,cAActB,GAAS,CAClC,GAAIA,EAAOvd,MAAM,UAAW,CACxBud,EAASA,EAAOhS,QAAQ,UAAW,WAG3C,OAAOgS,EAEX,UAAWkU,SAAW,mBAAqBA,OAAOD,WAAa,SAAU,CACrE,IAAI7Y,EAAM1V,EAAE6Z,SAASpd,OAAO6d,GAC5B,IAAIzd,EAAI,EACR,IAAIuxB,EAAM,GACVA,EAAII,OAAOD,UAAY,WACnB,MAAO,CACHtf,KAAM,WACF,GAAIpS,EAAI6Y,EAAK,CACT,IAAIrU,EAAOrB,EAAE6Z,SAAShc,UAAUyc,EAAQzd,EAAGA,EAAI,GAC/CA,IACA,MAAO,CACH+I,MAAOmV,EAAW1Z,QAEnB,CACH,MAAO,CACHitB,KAAM,UAM1B,OAAOF,IAIfnD,UAAW,IAAI,WACX,IACIxqB,KAAK+tB,OAAOtrB,OAAS,SAASoX,GAC1B,OAAOta,EAAE6Z,SAASsO,aAAa7N,IAEnC7Z,KAAK+tB,OAAOzxB,OAAS,SAASud,GAC1B,OAAOA,EAAOvd,MAAM8lB,YAExBpiB,KAAK+tB,OAAOlmB,SAAW,SAASgS,EAAQmU,GACpC,OAAOnU,EAAOhS,QAAQsa,gBAAiB6L,IAE3ChuB,KAAK+tB,OAAOE,QAAU,SAASpU,GAC3B,OAAOA,EAAOoU,OAAO7L,YAE3B,MAAO1f,MAMbwrB,cAAe,SAAS1D,GACpB,IAAIG,EAAaprB,EAAE6Z,SAASlK,SAASyb,WACrC,IAAK,IAAIvuB,EAAI,EAAGA,EAAIuuB,EAAW3uB,SAAUI,EAAG,CACxC,GAAIuuB,EAAWvuB,KAAOmD,EAAE6Z,SAASkR,kBAAmB,CAChDK,EAAWxsB,OAAO/B,EAAG,EAAGouB,GACxB,QAGRG,EAAWhuB,KAAK6tB,KAIxBjrB,EAAE6Z,SAASiS,UAAY,SAAS8C,EAAmBpN,EAAM7U,EAAS4O,GAC9D,GAAItf,UAAUQ,SAAW,EAAG,CACxBgE,KAAKkM,QAAU1Q,UAAU,GACzBwE,KAAK+gB,KAAO,eACT,CACH/gB,KAAK+gB,KAAOA,EACZ/gB,KAAKkM,QAAUA,EACf,GAAI4O,EAAO,CACP9a,KAAK8a,MAAQA,KAIzBvb,EAAE6Z,SAASiS,UAAU9sB,UAAY,IAAIoD,MACrCpC,EAAE6Z,SAASiS,UAAU9sB,UAAU1B,SAAW,WACtC,OAAOmD,KAAKkM,QAAU,KAAOlM,KAAK8a,OAKtCvb,EAAEa,GAAG8e,QAAU,WACX,OAAOlf,KAAKqc,IAAI,aAAc,YAElC9c,EAAEa,GAAGguB,OAAS,WACV,OAAOpuB,KAAKqc,IAAI,aAAc,WAGlC,IAAIgS,SAAW,GACf,SAAS3D,KAAK9N,GACVA,EAAM,qBAAuBA,EAC7B,GAAIyR,SAAS5qB,QAAQmZ,MAAU,EAAG,CAC9ByR,SAAS1xB,KAAKigB,GAEd,GAAIld,QAAS,CACT,GAAIA,QAAQgrB,KAAM,CACdhrB,QAAQgrB,KAAK9N,QACV,GAAIld,QAAQC,IAAK,CACpBD,QAAQC,IAAIid,QAGb,CAEHxQ,WAAW,WACP,MAAM,IAAIzK,MAAM,SAAWib,IAC5B,KAOf,IAAI0R,IAAM,GACV/uB,EAAEgvB,KAAO,SAASC,EAAKC,EAAQC,EAAQC,EAAStsB,GAC5C,IAAIusB,EAAW,IAAIrvB,EAAEsvB,SACrB,IAAI5e,EACJ,GAAI1Q,EAAEuvB,cAAcN,GAAM,CACtBve,EAAUue,MACP,CACHve,EAAU,CACNue,IAAKA,EACLC,OAAQA,EACRC,OAAQA,EACRC,QAASA,EACTtsB,MAAOA,GAGf,SAAS0sB,EAAaC,GAClB,OAAOzvB,EAAE0vB,UAAUD,EAAS5e,aAChB4e,EAASzuB,SAAW,oBACpByuB,EAAS3sB,QAAU,aAEnCisB,IAAIre,EAAQue,KAAOF,IAAIre,EAAQue,MAAQ,EACvC,IAAIU,EAAU,CACVC,QAAW,MACXV,OAAUxe,EAAQwe,OAClBC,OAAUze,EAAQye,OAClBte,KAAQke,IAAIre,EAAQue,MAExBjvB,EAAE6vB,KAAK,CACHZ,IAAKve,EAAQue,IACba,WAAY,SAASA,EAAWC,EAAMpf,GAClC,GAAIzO,YAAYwO,EAAQif,SAAU,CAC9Bjf,EAAQif,QAAQI,EAAMJ,GAE1Bhf,EAAS5F,KAAO0D,KAAKC,UAAUihB,IAEnCP,QAAS,SAASA,EAAQK,EAAUO,EAAQC,GACxC,IAAIC,EAAeD,EAAME,kBAAkB,gBAC3C,IAAKD,EAAanzB,MAAM,4BAA6B,CACjDouB,KAAK,oDACA,kBAET,IAAIiF,EACJ,IACIA,EAAO3hB,KAAKvS,MAAMuzB,GACpB,MAAOtsB,GACL,GAAIuN,EAAQ5N,MAAO,CACf4N,EAAQ5N,MAAMmtB,EAAO,eAAgB9sB,OAClC,CACH,MAAM,IAAInD,EAAE6Z,SAASiS,UAAU,OAAQ,eAAgB3oB,EAAEoY,OAE7D8T,EAASgB,OAAO,CAAC1jB,QAAS,eAAgB8iB,SAAUA,IACpD,OAEJ,GAAIvtB,YAAYwO,EAAQ+e,UAAW,CAC/B/e,EAAQ+e,SAASQ,EAAOG,GAE5B,GAAIZ,EAAaY,IAAS1f,EAAQwe,SAAW,kBAAmB,CAE5D,GAAIxe,EAAQ0e,QAAS,CACjB1e,EAAQ0e,QAAQgB,EAAMJ,EAAQC,GAElCZ,EAAS3uB,QAAQ0vB,OACd,CACH,GAAI1f,EAAQ5N,MAAO,CACf4N,EAAQ5N,MAAMmtB,EAAO,oBAEzBZ,EAASgB,OAAO,CAAC1jB,QAAS,mBAAoB8iB,SAAUA,MAGhE3sB,MAAO4N,EAAQ5N,MACfwtB,YAAa,mBACbC,SAAU,OACVC,MAAO,KACPz0B,MAAO,MAEPylB,KAAM,SAEV,OAAO6N,EAASoB,WAqBpB,SAASC,cAAclU,GACnB,IAAImU,EAAO3wB,EAAE,2DACA,iEACA,4BAA4B4L,SAAS,QAClD+kB,EAAKhlB,SAAS6Q,EAAIlQ,KAAK,UACvB,GAAIkQ,EAAK,CACL,IAAI9D,EAAQ8D,EAAIlQ,KAAK,SACrB,GAAIoM,EAAO,CACPA,EAAQA,EAAMxV,MAAM,WAAWwK,OAAO,SAASnI,GAC3C,OAAQA,EAAExI,MAAM,yBACjBkB,KAAK,KACR0yB,EAAKrkB,KAAK,QAASoM,IAG3B,IAAIkY,EAAOD,EAAKtlB,KAAK,SAAS,GAAGW,wBACjC,IAAIhL,EAAS,CACTmQ,MAAOyf,EAAKzf,MACZ/E,OAAQwkB,EAAKxkB,QAEjBukB,EAAKnsB,SACL,OAAOxD,EAKX,SAASkZ,cAAcL,EAAUgX,GAC7B,IAAI1f,EAAQ0I,EAASxO,KAAK,kBAAkB8F,QAC5C,IAAInQ,EAASmZ,KAAKC,MAAMjJ,EAAQ0f,EAAU1f,OAG1C,OAAOnQ,GAAU,IAKrB,SAAS8vB,aAAajX,EAAUgX,GAC5B,OAAO1W,KAAKC,MAAMP,EAASxO,KAAK,kBAAkBe,SAAWykB,EAAUzkB,QAG3E,SAAS2kB,IAAI9uB,EAAOpB,GAChB,IAAImwB,EAAO/uB,EAAMyL,OAAO,SAASrL,GAC7B,OAAOA,EAAKxB,OAAUwB,IAE1B,OAAO2uB,EAAKv0B,SAAWwF,EAAMxF,OAGjC,SAAS+pB,YAAYlM,GACjB,IAAIrY,EAAQqY,EAAOpX,MAAM,IACzB,GAAI6tB,IAAI9uB,EAAO,eAAgB,CAC3B,MAAO,aACJ,GAAI8uB,IAAI9uB,EAAO,eAAgB,CAClC,MAAO,YACJ,CACH,MAAO,SAIf,SAASgvB,UAAU3W,GACf,OAAOkM,YAAYlM,KAAY,QAInC,SAASpY,YAAYN,GACjB,OAAOzE,SAASyE,KAAY,WAGhC,SAASzE,SAASyE,GACd,cAAcA,IAAW,WAAa,WAAa5B,EAAEwhB,KAAK5f,GAK9D,IAAIsvB,aAAelxB,EAAE6Z,SAAS8N,QAAQ5qB,MAAM,SAC5C,IAAIo0B,UAAY,0DACZ,UACJ,IAAIC,eAAiBF,YAAc,OAASlxB,EAAE6Z,SAAS8N,QAAU,IAEjE,IAAI0J,IAAM,IAAIlpB,OAAO,KAAOipB,eAAe30B,OAAS,MACpD,IAAI60B,SAAW,4BACVJ,YAAcE,eAAiB,IAIpC,IAAIG,WAAa,CACb,CAAC,kBAAmB,wBACpB,CAACD,SAAUH,UAAU7oB,QAAQ,sBAAuB,KACpD,CAACgpB,SAAUH,UAAU7oB,QAAQ,cAAe,KAC5C,CACI,mEACA,mEACA,oEACA,oEACA,2EACA,kEACKA,QAAQ+oB,IAAK,KAAOD,eACzBD,WAEJ,CACI,0EACI,OACJ,0EACI,OACJ,0EACI,QACJ,0EACI,QACJ,0EACI,eACH,yEACA,SAAS7oB,QAAQ+oB,IAAK,IAAMD,eAC7BD,YAMRnxB,EAAE6Z,SAASkR,kBAAkBO,SAAW,KAExCtrB,EAAE6Z,SAASkR,kBAAkBG,YAAc,KAC3ClrB,EAAE6Z,SAASlK,SAAW,CAClBI,OAAQ,KACRC,QAAS,KACTwhB,KAAM,KACNpiB,MAAO,KACPb,QAAS,KACTkjB,SAAU,IACV9V,KAAM,KACN+V,WAAY,KACZC,IAAK,MACLnhB,SAAU,EACV0d,cAAe,MACf0D,iBAAkB,KAClBC,YAAa,KACbC,UAAW,MACXxjB,OAAQ,MACRyjB,eAAgB,KAChBC,iBAAkB,KAClB/F,gBAAiB,MACjBE,SAAU,MACVD,cAAe,MACf+F,mBAAoB,KACpBC,iBAAkB,KAClB/hB,gBAAiB,KACjBF,iBAAkB,KAClBkiB,aAAc,KACd3F,MAAO,GACP/b,KAAM,EACNX,YAAa,GACbsiB,aAAc,KACdC,aAAc,MACdC,cAAe,MACfne,cAAe,KACfoe,YAAa,KACbC,aAAc,KACdC,MAAO,KACPC,aAAc,EACdtH,WAAY,CAACprB,EAAE6Z,SAASkR,mBACxB4H,YAAa,KACbC,WAAY,KACZC,mBAAoB,GACpBC,iBAAkB,KAClBC,0BAA2B,KAC3BljB,oBAAqB,KACrBO,aAAc,IACdC,YAAa,IACbC,kBAAmB,IACnBC,kBAAmB,CAAC,kBACpBof,QAAS3vB,EAAEkQ,KACXuf,SAAUzvB,EAAEkQ,KACZ8iB,SAAU,QACVC,WAAY,KACZC,UAAW,KACXC,WAAY,MACZC,OAAQpzB,EAAEkQ,KACVmjB,QAASrzB,EAAEkQ,KACXojB,OAAQtzB,EAAEkQ,KACVqjB,QAASvzB,EAAEkQ,KACX6W,iBAAkB/mB,EAAEkQ,KACpBsjB,OAAQxzB,EAAEkQ,KACVujB,OAAQzzB,EAAEkQ,KACVwjB,MAAO1zB,EAAEkQ,KACTgR,SAAUlhB,EAAEkQ,KACZ6Q,QAAS/gB,EAAEkQ,KACXyjB,cAAe3zB,EAAEkQ,KACjB0jB,cAAe5zB,EAAEkQ,KACjB2jB,QAAS7zB,EAAEkQ,KACXoN,QAAS,CACLwW,oBAAqB,iDACjB,sBACJC,sBAAuB,4BACvBC,cAAe,kBACfC,eAAgB,kCAChBC,WAAY,0DACR,OACJC,gBAAiB,0BACjBC,iBAAkB,mDACd,iCACJC,uBAAwB,6CACpB,iEACC,YACLC,qBAAsB,sCACtBC,aAAc,2BACdC,eAAgB,mBAChBC,eAAgB,qCAChBC,cAAe,8CACfC,oBAAqB,kCACrBC,aAAc,uCACdC,kBAAmB,qBACnBC,gBAAiB,iDACb,YACJC,kBAAmB,sBACnBtC,MAAO,QACPuC,SAAU,WACVC,cAAe,gCACfC,WAAY,wCACZ3X,YAAa,+CACb4X,eAAgB,mCAChBC,gBAAiB,yDAMzB,IAAIC,SAAW,GACf,IAAIxO,UAAY,IAAIxZ,MAGpB,IAAIioB,WAAa,GACjB,IAAIC,cACJ,IAAIpH,YAAc,MAClB,IAAIqH,iBAAmB,KACvB,IAAIC,eAAiB,KACrBz1B,EAAEa,GAAGgZ,SAAW,SAAS6b,EAAkBhlB,GACvC,SAASilB,EAAcrnB,GACnB,GAAIA,EAAQ,CACR7N,KAAKkC,QAAU,GAEnBlC,KAAK8D,IAAM,SAASvC,EAAK4D,GACrB,GAAI0I,EAAQ,CACR7N,KAAKkC,QAAQX,GAAO4D,MACjB,CACH5F,EAAEsE,QAAQC,IAAIvC,EAAK4D,KAG3BnF,KAAKa,IAAM,SAASU,GAChB,GAAIsM,EAAQ,CACR,OAAO7N,KAAKkC,QAAQX,OACjB,CACH,OAAOhC,EAAEsE,QAAQhD,IAAIU,KAG7BvB,KAAK+D,OAAS,SAASxC,GACnB,GAAIsM,EAAQ,QACD7N,KAAKkC,QAAQX,OACjB,CACHhC,EAAEsE,QAAQE,OAAOxC,KAO7B,SAAS4zB,EAAsB9jB,GAC3B,GAAI9R,EAAE6Z,SAASmO,iBAAiBlW,GAAU,CACtC,IAAIwI,EAASta,EAAE6Z,SAASc,gBAAgB7I,GACxC,IAAInF,EAAU7Q,QAAQwhB,IAAU6X,eAAgB,IAAM7a,EAAS,KAC/D,MAAM,IAAIta,EAAE6Z,SAASiS,UAAUnf,QAC5B,GAAIzK,YAAYyO,GAASqhB,kBAAmB,CAC/C,OAAO3K,gBAAgBvV,EAASnB,GAASqhB,uBACtC,GAAIrhB,GAASqhB,iBAAkB,CAClC,OAAOhyB,EAAE6Z,SAAS8T,cAAc7b,OAC7B,CACH,OAAO9R,EAAE6Z,SAAS+T,cAAc9b,IAMxC,SAAS+jB,EAAej0B,GACpB,UAAWA,IAAW,SAAU,CAC5B2F,EAAKuuB,KAAKl0B,QACP,GAAIA,aAAkBO,MAAO,CAChCoF,EAAKuuB,KAAK91B,EAAEoB,IAAIQ,EAAQ,SAASA,GAC7B,OAAO6M,KAAKC,UAAU9M,KACvB3D,KAAK,WACL,UAAW2D,IAAW,SAAU,CACnC2F,EAAKuuB,KAAKrnB,KAAKC,UAAU9M,QACtB,CACH2F,EAAKuuB,KAAKl0B,IAIlB,SAASm0B,EAAWC,GAChB,IAAI3f,EAAK,0BAET,IAAI8B,EAAI6d,EAASj5B,MAAMsZ,GACvB,GAAI8B,EAAG,CAEH5Q,EAAK0uB,MAAMtlB,GAASmhB,WACpB9xB,EAAEsB,IAAI6W,EAAE,GAAI,SAASsX,GACjB,IAAIyG,EAAO/d,EAAE,GACb5Q,EAAKuuB,KAAK,cAAgBI,EAAO,KACjC,IAAIC,EAAO1G,EAASvsB,MAAM,MAC1B,IAAII,GAAK6U,EAAE,GAAK,EAChB5Q,EAAKuuB,KAAKK,EAAKx3B,MAAM2E,EAAI,EAAGA,EAAI,GAAGlC,IAAI,SAASqZ,EAAM5d,GAClD,GAAIA,IAAM,EAAG,CACT4d,EAAO,YACHza,EAAE6Z,SAASc,gBAAgBF,GAAQ,IAE3C,MAAO,KAAOnX,EAAIzG,EAAI,GAAK,MAAQ4d,IACpCxc,KAAK,OAAOm4B,UAChB,SAMX,SAASC,EAAuBvzB,GAC5B,GAAIZ,YAAYyO,GAASsiB,YAAa,CAClCtiB,GAASsiB,WAAW72B,KAAKmL,EAAMzE,OAC5B,CACHyE,EAAKzE,MAAM,iBAAmBA,EAAM6J,SACpC,GAAI7J,EAAMA,OAASA,EAAMA,MAAM6J,QAAS,CACpC7J,EAAQA,EAAMA,MAEd,IAAIua,EAAM,KAAOva,EAAM6J,QACvB,GAAI7J,EAAMozB,KAAM,CACZ7Y,GAAO,aAAeva,EAAMozB,KAAK5tB,QAAQ,OAAQ,IAAM,IAE3D,GAAIxF,EAAMwzB,GAAI,CACVjZ,GAAO,YAAcva,EAAMwzB,GAE/B/uB,EAAKzE,MAAMua,KAOvB,SAASkZ,EAAoBtH,EAAKuH,GAC9B,IAAIC,EAAc,SAASvH,EAAQC,GAC/B5nB,EAAK0uB,MAAMtlB,GAASmhB,WACpB9xB,EAAEgvB,KAAK,CACHC,IAAKA,EACLC,OAAQA,EACRC,OAAQA,EACRQ,QAAS,SAASI,EAAMJ,GACpB,IACIhf,GAASgf,QAAQvzB,KAAKmL,EAAMwoB,EAAMJ,EAASpoB,GAC7C,MAAOpE,GACLuzB,EAAkBvzB,EAAG,UAG7BssB,SAAU,SAASM,EAAMN,GACrB,IACI9e,GAAS8e,SAASrzB,KAAKmL,EAAMwoB,EAAMN,EAAUloB,GAC/C,MAAOpE,GACLuzB,EAAkBvzB,EAAG,UAG7BisB,QAAS,SAASA,EAAQgB,GACtB,GAAIA,EAAKttB,MAAO,CACZuzB,EAAuBjG,EAAKttB,YACzB,GAAIZ,YAAYyO,GAASshB,oBAAqB,CACjDthB,GAASshB,mBAAmB71B,KAAKmL,EAAM6oB,EAAKpvB,OAAQuG,OACjD,CACHsuB,EAAezF,EAAKpvB,QAExBuG,EAAK6uB,UAETtzB,MAAO6zB,KAIf,OAAO,SAAS7kB,EAAS+H,GACrB,GAAI/H,IAAY,GAAI,CAChB,OAEJ,IACIA,EAAU8jB,EAAsB9jB,GAClC,MAAO3O,GAELuzB,EAAkBvzB,EAAG,oCACrB,OAGJ,IAAKqzB,GAAQ1kB,EAAQzD,OAAS,OAAQ,CAElCooB,EAAY3kB,EAAQzD,KAAMyD,EAAQyV,UAC/B,CACH,IAAIwG,EAAQlU,EAASkU,QACrB,GAAIA,EAAO,CACP0I,EAAY3kB,EAAQzD,KAAM,CAAC0f,GAAO5f,OAAO2D,EAAQyV,WAC9C,CAEH1N,EAAS/W,MAAM,kBAAoBwa,IAAUiX,iBAS7D,SAASqC,EAAwBh1B,EAAQi1B,EAAOpE,EAAOqE,GAGnD,OAAO,SAASC,EAAcld,GAC1B,GAAIkd,IAAiB,GAAI,CACrB,OAGJ,IAAIjlB,EACJ,IACIA,EAAU8jB,EAAsBmB,GAClC,MAAO5zB,GAEL,GAAIjB,YAAYyO,GAASmQ,WAAY,CACjCnQ,GAASmQ,UAAU3d,EAAGoE,OACnB,CACHA,EAAKzE,MAAM,WAAaK,EAAEwJ,SAAWxJ,IAEzC,OAaJ,IAAI+N,EAAMtP,EAAOkQ,EAAQzD,MACzB,IAAImT,EAAOrkB,SAAS+T,GACpB,GAAIsQ,IAAS,WAAY,CACrB,GAAIqV,GAAS3lB,EAAIzU,SAAWqV,EAAQyV,KAAK9qB,OAAQ,CAC7C8K,EAAKzE,MACD,mBACIhH,QACIwhB,IAAU4W,WACVpiB,EAAQzD,KACR6C,EAAIzU,OACJqV,EAAQyV,KAAK9qB,aAGtB,CACH,OAAOyU,EAAIrS,MAAM0I,EAAMuK,EAAQyV,YAEhC,GAAI/F,IAAS,UAAYA,IAAS,SAAU,CAC/C,IAAIlN,EAAW,GACf,GAAIkN,IAAS,SAAU,CACnBlN,EAAWvV,OAAOi4B,KAAK9lB,GACvBA,EAAM0lB,EACF1lB,EACA2lB,EACApE,GAGR5Y,EAASzc,KAAK8T,EAAK,CACfnB,OAAQ+B,EAAQzD,KAAO,KACvBA,KAAMyD,EAAQzD,KACd8kB,WAAY3R,IAAS,SAAWlN,EAAW/U,iBAE5C,GAAI2C,YAAY40B,GAAW,CAC9BA,EAASC,EAAcxvB,QACpB,GAAIrF,YAAYyO,GAASsmB,mBAAoB,CAChDtmB,GAASsmB,kBAAkB76B,KAAKmL,EAAMwvB,EAAcxvB,OACjD,CACHsS,EAAS/W,MAAMhH,QAAQwhB,IAAU6W,gBAAiBriB,EAAQzD,SAKtE,SAASsoB,EAAWO,EAAKlH,EAAQltB,GAC7ByE,EAAK6uB,SACL,GAAIl0B,YAAYyO,GAASgiB,aAAc,CACnChiB,GAASgiB,YAAYv2B,KAAKmL,EAAM2vB,EAAKlH,EAAQltB,QAC1C,GAAIktB,IAAW,QAAS,CAC3BzoB,EAAKzE,MAAM,kBAAoBktB,EAAS,MAC7B1S,IAAUkX,eAAiB,MAC3Bx0B,EAAE6Z,SAASc,gBAAgBuc,EAAIC,gBAIlD,SAASC,EAAqBnI,EAAKuH,EAAMpH,GACrC,SAASiI,EAAajH,GAClB,GAAIA,EAAKttB,MAAO,CACZuzB,EAAuBjG,EAAKttB,YACzB,GAAIZ,YAAYyO,GAASshB,oBAAqB,CACjDthB,GAASshB,mBAAmB71B,KAAKmL,EAAM6oB,EAAKpvB,OAAQuG,OACjD,CACHsuB,EAAezF,EAAKpvB,QAExBuG,EAAK6uB,SAET,SAASkB,EAAavH,EAAMJ,GACxB,IACIhf,GAASgf,QAAQvzB,KAAKmL,EAAMwoB,EAAMJ,EAASpoB,GAC7C,MAAOpE,GACLuzB,EAAkBvzB,EAAG,SAG7B,SAASo0B,EAAcxH,EAAMN,GACzB,IACI9e,GAAS8e,SAASrzB,KAAKmL,EAAMwoB,EAAMN,EAAUloB,GAC/C,MAAOpE,GACLuzB,EAAkBvzB,EAAG,SAG7B,SAASssB,EAASA,GACd,IAAI+H,EAAQ/H,EAGZ,GAAI9e,GAASqiB,WAAa,GAAI,CAC1BriB,GAASqiB,SAAS9vB,MAAM,KAAK6K,QAAQ,SAAS0pB,GAC1CD,EAAQA,EAAMC,KAGtB,GAAID,GAASA,EAAM/6B,OAAQ,CACvB,IAAIi7B,EAAqB,GACzB13B,EAAEiB,KAAKu2B,EAAO,SAAS1N,EAAG6N,GACtB,GAAI33B,EAAEuvB,cAAcoI,WAAgBA,EAAKtpB,OAAS,SAAU,CACxDqpB,EAAmBC,EAAKtpB,MAAQ,WAC5B,IAAIV,EAAS6oB,GAAQmB,EAAKtpB,OAAS,OACnC,IAAIkZ,EAAOplB,MAAMnD,UAAUL,MAAMvC,KAAKH,WACtC,IAAI27B,EAAWrQ,EAAK9qB,QAAUkR,EAAS,EAAI,GAC3C,GAAIgD,GAAS+gB,YAAciG,EAAKxI,QAC5BwI,EAAKxI,OAAO1yB,SAAWm7B,EAAU,CACjCrwB,EAAKzE,MACD,mBACIhH,QACIwhB,IAAU4W,WACVyD,EAAKtpB,KACLspB,EAAKxI,OAAO1yB,OACZm7B,QAGT,CACHrwB,EAAK0uB,MAAMtlB,GAASmhB,WACpB,GAAInkB,EAAQ,CACR,IAAIogB,EAAQxmB,EAAKwmB,MAAM,MACvB,GAAIA,EAAO,CACPxG,EAAO,CAACwG,GAAO5f,OAAOoZ,OACnB,CACHhgB,EAAKzE,MAAM,kBACAwa,IAAUiX,eAG7Bv0B,EAAEgvB,KAAK,CACHC,IAAKA,EACLC,OAAQyI,EAAKtpB,KACb8gB,OAAQ5H,EACRoI,QAAS2H,EACT7H,SAAU8H,EACVnI,QAASiI,EACTv0B,MAAO6zB,SAM3B,IAAIlE,SAAe+D,IAAS,SAAWA,EAAO,QAC9CkB,EAAmBG,KAAOH,EAAmBG,MAAQ,SAASh3B,GAC1D,UAAWA,IAAO,YAAa,CAC3B,IAAIi3B,EAAQrI,EAAS+H,MAAMp2B,IAAI,SAASu2B,GACpC,OAAOA,EAAKtpB,OACbpQ,KAAK,MAAQ,SAChBsJ,EAAKuuB,KAAK,uBAAyBgC,OAChC,CACH,IAAIC,EAAQ,MACZ/3B,EAAEiB,KAAKu2B,EAAO,SAAS1N,EAAG6N,GACtB,GAAIA,EAAKtpB,OAASxN,EAAI,CAClBk3B,EAAQ,KACR,IAAI1a,EAAM,GACVA,GAAO,UAAYsa,EAAKtpB,KAAO,IAC/B,GAAIspB,EAAKxI,OAAQ,CACb,IAAIA,EAASwI,EAAKxI,OAClB,GAAIqH,GAAQmB,EAAKtpB,OAASokB,EAAO,CAC7BtD,EAASA,EAAOxwB,MAAM,GAE1B0e,GAAO,IAAM8R,EAAOlxB,KAAK,KAE7B,GAAI05B,EAAKE,KAAM,CACXxa,GAAO,KAAOsa,EAAKE,KAEvBtwB,EAAKuuB,KAAKzY,GACV,OAAO,SAGf,IAAK0a,EAAO,CACR,GAAIl3B,IAAO,OAAQ,CACf0G,EAAKuuB,KAAK,uCACA,2CACA,kBACP,CACH,IAAIzY,EAAM,WAAaxc,EAAK,eAC5B0G,EAAKzE,MAAMua,OAK3B+R,EAAQsI,OACL,CACHtI,EAAQ,OAGhB,OAAOpvB,EAAEgvB,KAAK,CACVC,IAAKA,EACLC,OAAQ,kBACRC,OAAQ,GACRC,QAASK,EACTE,QAAS2H,EACT7H,SAAU8H,EACVz0B,MAAO,SAASA,IACZssB,EAAQ,SAKpB,SAAS4I,EAAiBC,EAAYxF,EAAOyF,GACzCA,EAAWA,GAAYl4B,EAAEkQ,KACzB,IAAIsR,EAAOrkB,SAAS86B,GACpB,IAAIr2B,EACJ,IAAIZ,EAAS,GACb,IAAIm3B,EAAY,EAChB,IAAIC,EACJ,GAAI5W,IAAS,QAAS,CAClB5f,EAAS,IAET,SAAUy2B,EAAMC,EAAclJ,GAC1B,GAAIkJ,EAAa77B,OAAQ,CACrB,IAAI+O,EAAQ8sB,EAAa,GACzB,IAAI7Q,EAAO6Q,EAAa35B,MAAM,GAC9B,IAAI6iB,EAAOrkB,SAASqO,GACpB,GAAIgW,IAAS,SAAU,CACnBja,EAAK0uB,MAAMtlB,GAASmhB,WACpB,GAAInhB,GAASqiB,WAAa,MAAO,CAC7B,KAAMmF,IAAc,EAAG,CACnBC,EAAiB7B,EAAoB/qB,EAAOinB,OACzC,CACHlrB,EAAKzE,MAAMwa,IAAU8W,kBAEzBiE,EAAM5Q,EAAM2H,OACT,CACHgI,EAAqB5rB,EAAOinB,EAAO,SAAS8F,GACxC,GAAIA,EAAS,CACTv4B,EAAEqE,OAAOzC,EAAQ22B,QACd,KAAMJ,IAAc,EAAG,CAC1BC,EAAiB7B,EACb/qB,EACAinB,OAED,CACHlrB,EAAKzE,MAAMwa,IAAU8W,kBAEzB7sB,EAAK6uB,SACLiC,EAAM5Q,EAAM2H,WAGjB,GAAI5N,IAAS,WAAY,CAC5B,GAAI4W,EAAgB,CAChB7wB,EAAKzE,MAAMwa,IAAU+W,4BAClB,CACH+D,EAAiB5sB,EAErB6sB,EAAM5Q,EAAM2H,QACT,GAAI5N,IAAS,SAAU,CAC1BxhB,EAAEqE,OAAOzC,EAAQ4J,GACjB6sB,EAAM5Q,EAAM2H,QAEb,CACHA,MA1CR,CA4CG6I,EAAY,WACXC,EAAS,CACLzB,YAAaG,EACTh1B,EACA,MACA6wB,EACA2F,EAAe91B,KAAKiF,IAExB4rB,WAAYp0B,OAAOi4B,KAAKp1B,YAG7B,GAAI4f,IAAS,SAAU,CAC1B,GAAI7Q,GAAS6nB,qBAAsB,CAC/B52B,EAAS,CACL60B,YAAaF,EAAoB0B,EAAYxF,IAEjD,GAAIzyB,EAAE8B,QAAQ6O,GAASwiB,YAAa,CAChCvxB,EAAOuxB,WAAaxiB,GAASwiB,WAEjC+E,EAASt2B,OACN,CACH2F,EAAK0uB,MAAMtlB,GAASmhB,WACpBsF,EAAqBa,EAAYxF,EAAO,SAAS7wB,GAC7C,GAAIA,EAAQ,CACRZ,EAAOy1B,YAAcG,EACjBh1B,EACA,MACA6wB,GAEJzxB,EAAOmyB,WAAap0B,OAAOi4B,KAAKp1B,OAC7B,CAEHZ,EAAOy1B,YAAcF,EAAoB0B,EAAYxF,GAEzDyF,EAASl3B,GACTuG,EAAK6uB,iBAGV,GAAI5U,IAAS,SAAU,CAC1B0W,EAAS,CACLzB,YAAaG,EACTqB,EACAtnB,GAAS+gB,WACTe,GAEJU,WAAYp0B,OAAOi4B,KAAKiB,SAEzB,CAEH,GAAIzW,IAAS,YAAa,CACtByW,EAAaj4B,EAAEkQ,UACZ,GAAIsR,IAAS,WAAY,CAC5B,IAAInE,EAAMmE,EAAO,gCACjB,MAAM,IAAIxhB,EAAE6Z,SAASiS,UAAUzO,GAGnC6a,EAAS,CACLzB,YAAawB,EACb9E,WAAYxiB,GAASwiB,cAOjC,SAASsF,EAAoBxJ,EAAKwD,GAC9B,IAAIvD,EAAS/xB,SAASs1B,KAAW,UAAY,QAAUA,EACvD,OAAO,SAASiG,EAAMC,EAAQluB,GAC1BlD,EAAK0uB,MAAMtlB,GAASmhB,WACpB9xB,EAAEgvB,KAAK,CACHC,IAAKA,EACLC,OAAQA,EACRC,OAAQ,CAACuJ,EAAMC,GACfhJ,QAAS,SAASI,EAAMJ,GACpB,IACIhf,GAASgf,QAAQvzB,KAAKmL,EAAMwoB,EAAMJ,EAASpoB,GAC7C,MAAOpE,GACLuzB,EAAkBvzB,EAAG,UAG7BssB,SAAU,SAASM,EAAMN,GACrB,IACI9e,GAAS8e,SAASrzB,KAAKmL,EAAMwoB,EAAMN,EAAUloB,GAC/C,MAAOpE,GACLuzB,EAAkBvzB,EAAG,UAG7BisB,QAAS,SAASA,EAAQK,GACtB,IAAKA,EAAS3sB,OAAS2sB,EAASzuB,OAAQ,CACpCyJ,EAASglB,EAASzuB,YACf,CAEHyJ,EAAS,MAEblD,EAAK6uB,UAETtzB,MAAO6zB,KAQnB,SAASD,EAAkBvzB,EAAGwB,EAAOia,GACjC,GAAI1c,YAAYyO,GAASihB,kBAAmB,CACxCjhB,GAASihB,iBAAiBx1B,KAAKmL,EAAMpE,EAAGwB,OACrC,CACH4C,EAAKuZ,UAAU3d,EAAGwB,GAClB,IAAKia,EAAQ,CACT/R,WAAW,WACP,MAAM1J,GACP,KAYf,IAAIy1B,EAAgB,GACpB,IAAIC,EAAW,EACf,SAASC,EAAYxe,EAAQjS,EAAOqI,GAEhC,IAAI7T,EAAG6Y,EACPkjB,EAAcx7B,KAAKy7B,GACnB,GAAIve,IAAW,GAAI,OAIZ,IAAK5J,EAAQihB,IAAK,CACrB,IAAIoH,EAAiB,CACjB9M,gBAAiBtb,GAASsb,gBAC1BC,cAAevb,GAASub,cACxBC,SAAUxb,GAASwb,SACnB9a,WAAYwf,GAAU1f,OAE1BmJ,EAASta,EAAE6Z,SAASyB,UAAUhB,GAC9B,IAAIuS,EAAOtlB,EAAKslB,OAChB,IAAKhS,OAAOxZ,KAAKiZ,IAAWuS,GACvBvS,EAAOvd,MAAM,SACZ4T,GAASgL,OAAS,MAAQjL,EAAQiL,OAASpc,WAC5CoR,GAASgL,OAAS,OAASjL,EAAQiL,OAAS,MAAO,CACpD,IAAIqd,EAAQtoB,EAAQuoB,UACpB,IAAIh3B,EAAQjC,EAAE6Z,SAASU,YAAYD,EAAQuS,EAAMmM,GACjD,IAAKn8B,EAAI,EAAG6Y,EAAMzT,EAAMxF,OAAQI,EAAI6Y,IAAO7Y,EAAG,CAC1C,GAAIoF,EAAMpF,KAAO,IAAMoF,EAAMpF,KAAO,KAAM,CACtC+7B,EAAcx7B,KAAK,qBAChB,CACHw7B,EAAcx7B,KAAK4C,EAAE6Z,SAAS1d,OAC1B8F,EAAMpF,GACNk8B,UAIT,CACHze,EAASta,EAAE6Z,SAAS1d,OAAOme,EAAQye,GACnCze,EAAOpX,MAAM,MAAM6K,QAAQ,SAASuM,GAChCse,EAAcx7B,KAAKkd,UAGxB,CACHse,EAAcx7B,KAAKkd,GAEvBse,EAAcx7B,KAAK,CACf86B,SAAUxnB,EAAQwnB,SAClB7vB,MAAOA,IAIf,SAAS6wB,EAAaze,GAElB,IACI,IAAI0e,EAAgBn5B,EAAEqE,OAAO,CACzBhG,KAAM,KACNszB,IAAK,MACLuG,SAAUl4B,EAAEkQ,MACbuK,EAAK/J,SAAW,IACnB,IAAI4J,EACJ,IAAI3d,EAAM8d,EAAKH,OACf,IAAI8e,EAAQl3B,YAAYvF,GACxB,GAAIy8B,EAAO,CACPz8B,EAAMA,IAEV,GAAIQ,SAASR,KAAS,SAAU,CAC5B,GAAIuF,YAAYyO,GAAS0oB,aAAc,CACnC,IAAIzyB,EAAM+J,GAAS0oB,YAAY18B,GAC/B,GAAIQ,SAASyJ,KAAS,SAAU,CAC5B0T,EAAS1T,QAEV,GAAIjK,aAAewF,MAAO,CAC7BmY,EAASta,EAAE6Z,SAAS+S,QAAQjwB,EAAK4K,EAAKslB,OAAQlc,GAASF,UACpD,CACH6J,EAAS/c,OAAOZ,QAEjB,CACH2d,EAAS3d,EAEb,GAAI2d,IAAW,GAAI,CAEf,GAAIA,IAAW,GAAI,CACf,IAAK6e,EAAcxH,IAAK,CACpB,GAAIhhB,GAASwhB,aAAc,CACvB7X,EAASA,EAAOhS,QAAQ6a,SAAU,aAC9B7a,QAAQ4a,UAAW,aAE3B,GAAIiW,EAAc/N,WAAY,CAC1B,IACI9Q,EAASta,EAAE6Z,SAASuB,iBAChBd,EACA3J,IAEN,MAAOxN,GACLuzB,EAAkBvzB,EAAG,eAG7B,IAAIm2B,EAAQhf,EAAOpX,MAAMugB,gBACzBnJ,EAASta,EAAEoB,IAAIk4B,EAAO,SAAShf,GAC3B,GAAIA,GAAUA,EAAOvd,MAAM0mB,kBACtBzjB,EAAE6Z,SAAS+B,cAActB,GAAS,CAGnCA,EAASA,EAAOhS,QAAQ,eAAgB,IACxC,GAAI6wB,EAAc96B,KAAM,CACpB,IAAIk7B,EACJ,GAAInlB,EAAc,CACdA,EAAeA,EAAatC,QAAQjM,OAExC,GAAI0zB,IAAajf,EAAOzU,OAAQ,CAC5B0B,EAAKzE,MAAMwa,IAAU2X,mBAClB,CACHj1B,EAAE6Z,SAASoU,iBAAiB1mB,EAAM+S,EAAQ,CACtC4T,cAAevd,GAASud,iBAIpC,MAAO,OACJ,CACH,OAAO5T,KAEZrc,KAAK,IACR,GAAIqc,IAAW,GAAI,CACfA,EAAS6D,KAAKne,EAAE6Z,SAASyB,UAAUhB,IACnCA,EAASta,EAAE6Z,SAAS6B,OAAOpB,EAAQ,CAC/B7J,KAAME,GAASF,QAI3B,GAAI6J,IAAW,GAAI,CACfwe,EAAYxe,EAAQG,EAAKpS,MAAO8wB,KAI5C,GAAI7e,IAAW,IAAM8e,EAAO,CACxBN,EAAYxe,EAAQG,EAAKpS,MAAO8wB,IAEtC,MAAOh2B,GACLy1B,EAAgB,GAEhB,GAAI12B,YAAYyO,GAASihB,kBAAmB,CACxCjhB,GAASihB,iBAAiBx1B,KAAKmL,EAAMpE,EAAG,gBACrC,CACHuJ,gBAAgB,qCAAsCvJ,KAOlE,SAAS2S,EAAOpF,GACZA,EAAU1Q,EAAEqE,OAAO,GAAI,CAEnBm1B,OAAQ,MAERC,OAAQ,MACT/oB,GAAW,IACd,IAAKA,EAAQ8oB,OAAQ,CACjBE,GAAa7Z,OAAOzO,GAEpB,IAAIuoB,EAAkB/8B,EAAOg9B,QAAQC,SAEzC,IAAIC,EAAgB,GAEpB,GAAInpB,GAAS+hB,aAAe,EAAG,CAI3B,IAAIjrB,EACJ,GAAIkJ,GAAS+hB,cAAgB,EAAG,CAC5BjrB,EAAQF,EAAKwyB,WACV,CACHtyB,EAAQkJ,GAAS+hB,YAErBhW,GAAM3O,QAAQ,SAAS0M,EAAMpS,GACzB,IAAIiS,EAASG,EAAK,GAClB,IAAI/J,EAAU+J,EAAK,GACnB,GAAItd,SAASmd,KAAY,WAAY,CACjCA,EAASA,IAEb,GAAInd,SAASmd,KAAY,SAAU,CAC/BA,EAAS/c,OAAO+c,GAEpBwf,EAAc18B,KAAK,CACfkd,OAAQA,EACRjS,MAAOA,EACPqI,QAASA,MAGjBopB,EAAgBA,EAAcn7B,MAAMm7B,EAAcr9B,OAASgL,EAAQ,OAChE,CACHqyB,EAAgBpd,GAAMtb,IAAI,SAASqZ,EAAMpS,GACrC,MAAO,CACHiS,OAAQG,EAAK,GACbpS,MAAOA,EACPqI,QAAS+J,EAAK,MAI1B,IACIme,EAAgB,GAChB54B,EAAEiB,KAAK64B,EAAe,SAASj9B,EAAG4d,GAC9Bye,EAAaze,KAEjB,IAAK/J,EAAQ8oB,OAAQ,CACjBE,GAAale,OAAOme,GAExBpyB,EAAKyyB,MAAMtpB,GACXupB,EAAW,iBACb,MAAO92B,GACL,GAAIjB,YAAYyO,GAASihB,kBAAmB,CACxCjhB,GAASihB,iBAAiBx1B,KAAKmL,EAAMpE,EAAG,yBACrC,CACHuJ,gBAAgB,WAAYvJ,KAOxC,SAAS+2B,IACL,GAAIvpB,GAAS+hB,aAAe,EAAG,CAC3B,IAAIjrB,EACJ,GAAIkJ,GAAS+hB,cAAgB,EAAG,CAC5BjrB,EAAQF,EAAKwyB,WACV,CACHtyB,EAAQkJ,GAAS+hB,YAErB,IAAIyH,EAASv9B,EAAOyO,KAAK,eACzB,GAAI8uB,EAAO19B,OAAS,EAAIgL,EAAO,CAC3B,IAAI4T,EAAM8e,EAAO19B,OAASgL,EAAQ,EAClC,IAAI2yB,EAAaD,EAAOx7B,MAAM,EAAG0c,GAGjC,IAAIgf,EAAUD,EAAW7nB,SACzB6nB,EAAW51B,SACX61B,EAAQp5B,KAAK,WACT,IAAIq5B,EAAQt6B,EAAES,MACd,GAAI65B,EAAM/vB,GAAG,UAAW,CAGpB+vB,EAAM91B,cAS1B,SAAS+1B,IACL,GAAI5pB,GAAS6pB,YAAcj7B,UAAW,CAElCgI,EAAKuuB,KAAKvuB,EAAKkzB,UAAW,CAACvC,SAAU7rB,UAAW+e,WAAY,aACzD,GAAIza,GAAS6pB,UAAW,CAC3B,IAAIhZ,SAAc7Q,GAAS6pB,UAC3B,GAAIhZ,IAAS,SAAU,CACnBja,EAAKuuB,KAAKnlB,GAAS6pB,gBAChB,GAAIhZ,IAAS,WAAY,CAC5B,IACI7Q,GAAS6pB,UAAUp+B,KAAKmL,EAAMA,EAAKuuB,MACrC,MAAO3yB,GACLwN,GAAS6pB,UAAY,KACrB9D,EAAkBvzB,EAAG,kBAEtB,CACHoE,EAAKzE,MAAMwa,IAAUmX,kBAOjC,SAASiG,EAAa5oB,GAClB,UAAWA,IAAY,YAAa,CAChCA,EAAUvK,EAAKozB,cAEnB,IAAI5qB,EAAS2pB,GAAa3pB,OAAO,MACjC,IAAIH,EAAO8pB,GAAa9pB,OACxB,cAAeA,GACX,IAAK,SACDkC,EAAUA,EAAQxJ,QAAQ,KAAMsH,GAChC,MACJ,IAAK,UACD,GAAIA,EAAM,CACNkC,EAAUA,EAAQxJ,QAAQ,KAAMqI,GAAS8gB,cACtC,CACH3f,EAAU9R,EAAE6Z,SAASoB,kBAAkBnJ,GAE3C,MAER,IAAIpB,EAAU,CACVwnB,SAAU,SAASA,EAAS1b,GACxBnQ,UAAUmQ,EAAI7Q,SAAS,YACvBsuB,EAAW,gBAAiB,CAACzd,EAAK1K,MAG1C,GAAI5P,YAAY6N,GAAS,CACrB,IAAInJ,EAAMmJ,EAAO,SAASuK,GACtB/S,EAAKuuB,KAAKxb,EAASxI,EAASpB,KAEhC,GAAI9J,GAAO1E,YAAY0E,EAAIg0B,MAAO,CAC9Bh0B,EAAIg0B,KAAK,SAAStgB,GACd,UAAWA,IAAW,SAAU,CAC5B/S,EAAKuuB,KAAKxb,EAASxI,EAASpB,WAIrC,CACHnJ,EAAKuuB,KAAK/lB,EAAS+B,EAASpB,IAIpC,SAASmqB,IACL,GAAItzB,EAAKgD,GAAG,QAAS,CAGjB,OAAOlL,OAAOy7B,WAAa93B,SAASie,gBAAgB8Z,YAAc,EAEtE,OAAOC,GAAK9tB,eAAiB3F,EAAK2F,aAKtC,SAAS+tB,EAActV,GAEnB,IAAI9L,EAAWgN,UAAUvlB,MAAMqkB,EAAK,IACpC,IAAK9L,EAAU,CACX,MAAM,IAAI7Z,EAAE6Z,SAASiS,UAAUxO,IAAUyX,mBAE7C,IAAImG,EAAcvV,EAAK,GACvB,GAAI2P,WAAW4F,GAAc,CACzBrhB,EAASshB,YAAY7F,WAAW4F,QAC7B,CAEH/M,YAAc,MACd,IAAIrc,EAAU6T,EAAK,GACnB,GAAI7T,EAAS,CACT+H,EAASxb,KAAKyT,GAASwc,KAAK,WACxBH,YAAc,KACdmH,WAAW4F,GAAerhB,EAASuhB,kBAWnD,SAASC,IACL,GAAIlN,YAAa,CACbqH,iBAAmB,MACnB8F,SAASC,KAAO,IAAM9sB,KAAKC,UAAU6mB,eACrC1oB,WAAW,WACP2oB,iBAAmB,MACpB,MAOX,IAAIgG,EAAgB,KACpB,IAAIC,EAAmB,GACvB,SAASnnB,EAASxC,EAAS8M,EAAQvgB,GAC/B,SAASq9B,IAEL,GAAI/qB,GAAS0hB,cAAgB1hB,GAASgrB,UAAYt9B,EAAM,CACpD,IAAKi3B,WAAW74B,OAAQ,CAEpB8K,EAAK+tB,iBACF,CACH/tB,EAAK+tB,WAAW,QAK5B,SAASsG,IAEL,IAAKv9B,EAAM,CACP8vB,YAAc,KACd,GAAIxd,GAAS0hB,aAAc,CACvB9qB,EAAK+tB,WAAWxjB,EAAS,OAE7Bqc,YAAc0N,EAElBxM,EAAS3uB,UACTu5B,EAAW,iBAAkB,CAACnoB,IAGlC,SAAS8N,EAAK5e,GACV,UAAWA,IAAW,YAAa,CAC/B60B,EAAe70B,GAEnB46B,IACAr0B,EAAK6uB,SAGT,SAAS0F,IAEL,IAAI96B,EAASy1B,EAAYA,YAAYr6B,KAAKmL,EAAMuK,EAASvK,GACzD,GAAIvG,EAAQ,CAERuG,EAAK0uB,MAAMtlB,GAASmhB,WAEpB,GAAI5vB,YAAYlB,EAAOstB,MAAQttB,EAAO45B,MAAO,EACxC55B,EAAOstB,MAAQttB,EAAO45B,MAAMx+B,KAAK4E,EAAQ4e,OACvC,CACH,OAAO5f,EAAE+7B,KAAK/6B,GAAQstB,KAAK1O,SAE5B,GAAIoc,GAAQ,CACfP,EAAiBr+B,KAAK,WAElBw+B,UAED,CACHA,KAMR,GAAIJ,EAAe,CACfA,EAAgB,MAChBE,IAEJ,IAEI,GAAIzB,EAAW,kBAAmB,CAACnoB,MAAc,MAAO,CACpD,OAEJ,IAAKzT,EAAM,CACP+V,EAAepU,EAAE6Z,SAAS+T,cAAc9b,GAE5C,IAAKmqB,IAAS,CAGV,GAAI59B,IAAS6D,YAAYyO,GAASwD,gBACrBxD,GAASwD,cAAcrC,IACvBA,EAAQ/U,MAAM4T,GAASwD,gBAAiB,CACjDulB,GAAa1pB,UAAUrC,OAAOmE,IAGtC,IAAI2kB,EAAc6B,GAAapsB,MAC/B,IAAK0S,GAAUjO,GAAS4hB,YAAa,CACjCmI,EAAa5oB,GAIjB,IAAIud,EAAW,IAAIrvB,EAAEsvB,SAIrB,IAAIuM,EAAoB1N,YACxB,GAAIrc,EAAQ/U,MAAM,kBAAoBwK,EAAKwmB,MAAM,MAAO,CACpD,GAAIxmB,EAAK20B,QAAU,EAAG,CAClB30B,EAAK40B,OAAO,UACT,CACH50B,EAAK40B,SAETP,SACG,GAAIjrB,GAAS6gB,MAAQ1f,EAAQ/U,MAAM,kBAC9Bq/B,GAAU,CAClB,IAAIF,EAAQ30B,EAAK20B,QACjB,GAAIA,IAAU,GAAK30B,EAAK80B,aAAeH,EAAQ,EAAG,CAC9C,GAAI30B,EAAK80B,UAAU,MAAO,CACtB90B,EAAK+0B,UAAU/8B,UAAW,MAE9BgI,EAAK2G,MAET0tB,SACG,GAAIjrB,GAASvB,OAAS0C,EAAQ/U,MAAM,mBAC/Bq/B,GAAU,CAClB70B,EAAK6H,QACLwsB,QACG,CACH,IAAIh1B,EAAMk1B,IACV,GAAIl1B,EAAK,CACL,OAAOA,GAGf,OAAOyoB,EAASoB,UAClB,MAAOttB,GACLuzB,EAAkBvzB,EAAG,OAAQ9E,GAC7BkJ,EAAK6uB,SACL,GAAI/3B,EAAM,CACN,MAAM8E,IASlB,SAASo5B,IACL,GAAIr6B,YAAYyO,GAAS6rB,gBAAiB,CACtC,IACI,GAAI7rB,GAAS6rB,eAAepgC,KAAKmL,EAAMA,KAAU,MAAO,CACpD,QAEN,MAAOpE,GACLwN,GAAS6rB,eAAiBx8B,EAAEkQ,KAC5BwmB,EAAkBvzB,EAAG,mBAG7Bs5B,IACA,GAAIv6B,YAAYyO,GAAS+rB,eAAgB,CACrC,IACI/rB,GAAS+rB,cAActgC,KAAKmL,EAAMA,GACpC,MAAOpE,GACLwN,GAAS+rB,cAAgB18B,EAAEkQ,KAC3BwmB,EAAkBvzB,EAAG,kBAG7BoE,EAAKkrB,MAAMkK,GAAiB,KAAMC,GAGtC,SAASH,IACL,IAAIpuB,EAAO9G,EAAKs1B,YAAY,MAAQ,IACpCl6B,GAAQ6B,OAAO6J,EAAO,SACtB1L,GAAQ6B,OAAO6J,EAAO,SAK1B,SAASyuB,EAAkBC,GACvB,IAAIvuB,EAAcjH,EAAKs1B,cAAgB,gBACvC,IAAI/E,EAAQn1B,GAAQrB,IAAIkN,GACxB,GAAIspB,EAAO,CACPA,EAAQrpB,KAAKvS,MAAM47B,OAChB,CACHA,EAAQ,GAEZ,GAAI93B,EAAEqhB,QAAQ0b,EAAkBjF,MAAY,EAAG,CAC3CA,EAAM16B,KAAK2/B,GACXp6B,GAAQ4B,IAAIiK,EAAaC,KAAKC,UAAUopB,KAMhD,SAASkF,EAAwBpe,GAC7B,IAAI6X,EAAc6B,GAAapsB,MAC/B,IAAImC,EAAO9G,EAAKs1B,YAAY,MAC5B,IAAKZ,IAAS,CACVa,EAAkBzuB,GAEtB,IAAIokB,EAAQlrB,EAAK01B,WAAW,MAC5BvD,GAAarrB,KAAKA,GAAQokB,EAAQ,IAAMA,EAAQ,KAChD,GAAIgE,EAAY1mB,SAAW2pB,GAAa3pB,SAAU,CAC9C,GAAI7N,YAAYu0B,EAAY1mB,QAAS,CACjC2pB,GAAa3pB,OAAO,SAAStF,GACzB,IAAI7D,EAAM6vB,EAAY1mB,OAAO3T,KAAKmL,EAAMkD,EAAUlD,GAClD,GAAIX,GAAO1E,YAAY0E,EAAIg0B,MAAO,CAC9Bh0B,EAAIg0B,KAAK,SAAStgB,GACd,UAAWA,IAAW,SAAU,CAC5B7P,EAAS6P,aAKtB,CACHof,GAAa3pB,OAAO0mB,EAAY1mB,SAGxC,UAAW0mB,EAAYzmB,UAAY,YAAa,CAC5CzI,EAAKyI,UAAUR,OAAOinB,EAAYzmB,SAEtC,GAAIhQ,EAAEuvB,cAAckH,EAAY7iB,QAAS,CACrC8lB,GAAa9lB,OAAO5T,EAAEc,KAAK21B,EAAY7iB,OAAQ,SAASvF,EAAM6uB,GAC1D,OAAO,WACH,IAAI3V,EAAO,GAAG5oB,MAAMvC,KAAKH,WACzB,IACI,OAAOihC,EAAIr+B,MAAM0I,EAAMggB,GACzB,MAAOpkB,GACLuzB,EAAkBvzB,EAAG,oBAKrCu2B,GAAan1B,IAAI,IACjB44B,GAAWz8B,UACX,IAAKke,GAAU1c,YAAYu0B,EAAY2G,SAAU,CAC7C3G,EAAY2G,QAAQhhC,KAAKmL,EAAMA,IAIvC,SAAS0yB,EAAW5rB,EAAMkZ,GACtBA,GAAQA,GAAQ,IAAIpZ,OAAO,CAAC5G,IAE5B,IAAI2E,EAAMosB,IAAgBA,GAAapsB,MACvC,GAAIA,GAAOhK,YAAYgK,EAAImC,IAAQ,CAC/B,IACI,OAAOnC,EAAImC,GAAMxP,MAAM0I,EAAMggB,GAC/B,MAAOpkB,UACE+I,EAAImC,GACXqoB,EAAkBvzB,EAAGkL,SAEtB,GAAInM,YAAYyO,GAAStC,IAAQ,CACpC,IACI,OAAOsC,GAAStC,GAAMxP,MAAM0I,EAAMggB,GACpC,MAAOpkB,GACLwN,GAAStC,GAAQ,KACjBqoB,EAAkBvzB,EAAGkL,KAKjC,SAASgvB,IACL,IAAI9gC,EAASgL,EAAK8D,KAAK,WACvB,IAAK9O,EAAOsP,kBAAkBtE,GAAO,CACjCA,EAAK+1B,UAAU/gC,EAAOwS,WAAW7C,IAAM,GACvC,OAAO,MAIf,SAASqxB,IACL,GAAI/H,kBAAoB7kB,GAASgrB,SAAU,CACvC,IACI,GAAIL,SAASC,KAAM,CACf,IAAIA,EAAOD,SAASC,KAAKjzB,QAAQ,KAAM,IACvCitB,cAAgB9mB,KAAKvS,MAAMshC,mBAAmBjC,QAC3C,CACHhG,cAAgB,GAEpB,GAAIA,cAAc94B,OAAQ,CACtBw+B,EAAc1F,cAAcA,cAAc94B,OAAS,SAChD,GAAI64B,WAAW,GAAI,CACtB/tB,EAAK4zB,YAAY7F,WAAW,KAElC,MAAOnyB,GACLuzB,EAAkBvzB,EAAG,cAKjC,SAASy5B,IACLI,IACAzC,IACA,GAAI7d,GAAMjgB,OAAQ,CACd8K,EAAKgY,UAKT,IAAIke,EAAa,MACjB,GAAIv7B,YAAYyO,GAASyiB,QAAS,CAC9BsK,GAAU,WACND,EAAa,MAEjB,IACI9sB,GAASyiB,OAAOh3B,KAAKmL,EAAMA,GAC7B,MAAOpE,GACLuzB,EAAkBvzB,EAAG,UAEvB,QACEu6B,GAAU19B,EAAEkQ,KACZ,IAAKutB,GAAcl2B,EAAKgH,UAAW,CAI/BhH,EAAK6uB,WAIjB,GAAIX,eAAgB,CAChBA,eAAiB,MACjBz1B,EAAEX,QAAQqM,GAAG,aAAc6xB,IAMnC,SAAStB,IACL,OAAOG,IAAY1C,GAAa9pB,SAAW,MAK/C,SAAS+tB,EAAcx6B,GACnB,IAAInC,EAAQkL,EAAMosB,GAAapsB,MAC/B,GAAIhK,YAAYgK,EAAI6U,SAAU,CAC1B/f,EAASkL,EAAI6U,QAAQ3kB,KAAKmL,EAAMpE,EAAGoE,GACnC,GAAIvG,IAAWzB,UAAW,CACtB,OAAOyB,QAER,GAAIkB,YAAYyO,GAASoQ,SAAU,CACtC/f,EAAS2P,GAASoQ,QAAQ3kB,KAAKmL,EAAMpE,EAAGoE,GACxC,GAAIvG,IAAWzB,UAAW,CACtB,OAAOyB,IAInB,IAAI4S,EAAS,CACTkB,SAAU,SAAS3R,EAAG2b,GAClB,IAAKsd,GAAU,CACX,GAAI1C,GAAap4B,QAAU,GAAI,CAC3B,GAAIg3B,GAAarqB,OAAS,GACtB/L,YAAYy6B,IAAkB,CAC9Bp1B,EAAK2G,IAAI,QACN,CACH3G,EAAK6uB,SACL7uB,EAAKuuB,KAAK,SAEX,CACHhX,KAGR,OAAO,OAEXxH,SAAU,WACN,GAAI8K,sBAAwB,GAAI,CAC5B,IAAItQ,EAAUvK,EAAKozB,cACnB,IAAI5rB,EAAWxH,EAAKq2B,eACpB9rB,EAAUA,EAAQjU,UAAU,EAAGkR,GAAY,KACvC+C,EAAQjU,UAAUkR,EAAW,GACjC2rB,EAAa5oB,GACbvK,EAAKs2B,YAAY,MAGzBC,SAAU,WACNv2B,EAAK6H,SAETyF,IAAO,SAAS1R,EAAG46B,GAIf,IAAI7xB,EAAMosB,GAAapsB,MAAOinB,EAAY6K,EAC1C,UAAW9xB,EAAI6mB,4BAA8B,YAAa,CACtDiL,EAAgB9xB,EAAI6mB,8BACjB,CACHiL,EAAgBrtB,GAASoiB,0BAE7B,GAAIpiB,GAASwiB,YACTh2B,SAASwT,GAASwiB,cAAgB,WAClCjnB,EAAIinB,aAAe5zB,UAAW,CAC9B4zB,EAAaxiB,GAASwiB,eACnB,CACHA,EAAajnB,EAAIinB,WAErB,GAAIA,IAAe,WAAY,CAC3BA,EAAaxiB,GAASwiB,WAE1B,SAASzyB,EAAQ4T,GACb/M,EAAK02B,SAAS3pB,EAAU,CACpBwhB,KAAM,KACNoI,KAAMvtB,GAASmiB,iBACfqL,OAAQxtB,GAASuhB,iBACjB8L,cAAeA,EACf9K,UAAWviB,GAASuiB,YAG5B,GAAIC,EAAY,CACZ,OAAQh2B,SAASg2B,IACb,IAAK,WACD,IAAI7Y,EAAS/S,EAAK62B,cAAcztB,GAASmiB,kBACzC,GAAIK,EAAW12B,SAAW,EAAG,CACzB,IAAIqG,EAAQ,IAAIV,MAAMkb,IAAUwW,qBAChC4C,EAAkB5zB,EAAO,QACzB,OAAO,MAEX,IAAI9B,EAASmyB,EAAW/2B,KAAKmL,EAAM+S,EAAQ5Z,GAC3C,GAAIM,GAAUkB,YAAYlB,EAAO45B,MAAO,CACpC55B,EAAO45B,KAAKl6B,GAEhB,MACJ,IAAK,QACDA,EAAQyyB,GACR,MACJ,QACI,MAAM,IAAInzB,EAAE6Z,SAASiS,UAAUxO,IAAUuX,wBAE9C,CACHkJ,IAEJ,OAAO,OAEXtmB,SAAU,SAAStU,EAAG2b,GAClBA,EAAS3b,GACToE,EAAKxC,QAAQ,IAAK,WACdwC,EAAK82B,qBAET,OAAO,MAEXvmB,WAAY,WACR,GAAI+O,UAAUpqB,SAAW,EAAG,CACxB8K,EAAKsB,MAAM,OACX,OAAO,QAGfy1B,SAAY,WACR/2B,EAAKkyB,OAAOlyB,EAAK6E,WAErBmyB,OAAU,WACNh3B,EAAKkyB,QAAQlyB,EAAK6E,YAG1B,SAASoyB,EAASr7B,GAGd,IAAInC,EAAQnE,EACZ,GAAI0K,EAAKgH,UAAW,CAChB,IAAKhH,EAAKy0B,SAAU,CAChBh7B,EAAS28B,EAAcx6B,GACvB,GAAInC,IAAWzB,UAAW,CACtB,OAAOyB,EAEX,GAAImC,EAAEud,QAAU,EAAG,CACf+d,EAAY,OAEb,CACH,IAAK9tB,GAASkhB,YAAa,CACvB7wB,EAAS28B,EAAcx6B,GACvB,GAAInC,IAAWzB,UAAW,CACtB,OAAOyB,GAGf,GAAImC,EAAEud,QAAU,IAAMvd,EAAEqQ,QAAS,CAC7B,GAAI7C,GAASkhB,YAAa,CACtB7wB,EAAS28B,EAAcx6B,GACvB,GAAInC,IAAWzB,UAAW,CACtB,OAAOyB,GAGf,GAAIq0B,SAAS54B,OAAQ,CACjB,IAAKI,EAAIw4B,SAAS54B,OAAQI,KAAM,CAC5B,IAAI6hC,EAAIrJ,SAASx4B,GACjB,GAAI6hC,EAAEC,aAAe,EAAG,CACpB,IACID,EAAEE,QACJ,MAAO97B,GACL,GAAIZ,YAAYyO,GAASihB,kBAAmB,CACxCjhB,GAASihB,iBAAiBx1B,KACtBmL,EACApE,EACA,kBAED,CACHoE,EAAKzE,MAAMwa,IAAU2W,mBAKrCoB,SAAW,GAEf9tB,EAAK6uB,SAET,OAAO,QAKnB,SAASyI,EAAU17B,GACf,IAAI+I,EAAMosB,GAAapsB,MACvB,GAAIqC,MAAaytB,KAAWrrB,GAASkhB,aAAc,CAC/C,GAAI3vB,YAAYgK,EAAIgV,UAAW,CAC3B,OAAOhV,EAAIgV,SAAS9kB,KAAKmL,EAAMpE,EAAGoE,QAC/B,GAAIrF,YAAYyO,GAASuQ,UAAW,CACvC,OAAOvQ,GAASuQ,SAAS9kB,KAAKmL,EAAMpE,EAAGoE,KAKnD,SAASu3B,EAAMC,GACX,OAAO,SAAS7B,GACZ6B,EAAMn+B,IAAIs8B,IAIlB,SAAS5f,IACL,OAAOtd,EAAEqE,OACL,GACArE,EAAE6Z,SAASlK,SAAS2N,QACpB3M,IAAYA,GAAS2M,SAAW,IAIxC,IAAI/V,EAAO9G,KACX,GAAI8G,EAAKgD,GAAG,aAAc,CACtBhD,EAAOvH,EAAE,UAAU4L,SAAS,QAC5B5L,EAAE,QAAQ2L,SAAS,wBAEvB,GAAIlL,KAAKhE,OAAS,EAAG,CACjB,OAAOgE,KAAKQ,KAAK,WACbjB,EAAEa,GAAGgZ,SAASzd,KACV4D,EAAES,MACFi1B,EACA11B,EAAEqE,OAAO,CAACgK,KAAM9G,EAAKy3B,UAAWtuB,MAK5C,GAAInJ,EAAKwD,KAAK,YAAa,CACvB,OAAOxD,EAAKwD,KAAK,YAErB,GAAIxD,EAAK9K,SAAW,EAAG,CACnB,IAAI4gB,EAAMvhB,QAAQwhB,IAAUwX,iBAC5B,MAAM,IAAI90B,EAAE6Z,SAASiS,UAAUzO,GAGnC,IAAIjJ,EACJ,IAAIqqB,EAAY,EAChB,IAAI7hC,EACJ,IAAIqiC,EAAcpY,UAAUpqB,SAC5B,IAAI2U,EACJ,IAAI8tB,EACJ,IAAIptB,EACJ,IAAIqtB,EAAS,IAAInxB,MACjB,IAAIoxB,GAAgB,IAAI/+B,WACxB,IAAI88B,GAAa,IAAI98B,WACrB,IAAIg/B,GAAaP,EAAM3B,IACvB,IAAItM,GAAYH,cAAcnpB,GAC9B,IAAI+3B,GAAYR,EAAMM,IACtB,IAAIhD,GAAW,MAEf,IAAIsB,GAAU19B,EAAEkQ,KAChB,IAAIqvB,GAAWC,GACf,IAAIC,GAAmB,GACvB,IAAI9uB,GAAW3Q,EAAEqE,OACb,GACArE,EAAE6Z,SAASlK,SACX,CACItB,KAAM9G,EAAKy3B,SACXxN,QAAS9gB,GAAWA,EAAQ+hB,QAAU/hB,IAE1CA,GAAW,WAGRC,GAASya,WAEhB,IAAIsU,GAAU,MACd,IAAIhjB,GAAQ,GACZ,IAAI/Z,GAAU,IAAIgzB,EAAchlB,GAASrC,QACzC,IAAIC,GAAUoC,GAASpC,QACvB,IAAIoxB,GAAS,MACb,IAAI3D,GAAS,MACb,IAAI4D,GAAY,KAChB,IAAItH,GACJ,IAAIoB,GACJ,IAAImG,GACJ,IAAIC,GACJ,IAAIC,GAIJ//B,EAAEqE,OAAOkD,EAAMvH,EAAEc,KAAK,CAClB+P,GAAI,WACA,OAAOouB,GAKX7vB,MAAO,WACHsN,GAAQ,GACR9f,EAAOqd,KAAK,IACZggB,EAAW,WACX1yB,EAAK+E,KAAK,CAACgxB,UAAW,IACtB,OAAO/1B,GAMX6zB,YAAa,WACT,IAAI4E,EAAc/F,EAAW,YAC7B+F,EAAcA,GAAe,GAC7B,OAAOhgC,EAAEqE,OAAO,GAAI,CAChBwE,MAAO0F,GACPqB,KAAM8pB,GAAa9pB,OACnBG,OAAQxI,EAAK04B,aACbnuB,QAASvK,EAAKozB,cACd5rB,SAAU2qB,GAAa3qB,WACvB2N,MAAOna,MAAMma,IACb4b,aAAcA,GAAa/1B,QAC3ByN,QAAS0pB,GAAa1pB,UAAUjF,MACjCi1B,IAKP7E,YAAa,SAAS+E,GAClB,GAAI9D,GAAU,CACV,MAAM,IAAIh6B,MAAMtG,QAAQwhB,IAAUoX,cAAe,gBAErDuF,EAAW,WAAY,CAACiG,IACxBb,GAAW,SAASP,IAChBv3B,EAAK44B,WAAWD,EAAKnwB,QACrBxI,EAAKs2B,YAAYqC,EAAKpuB,SACtB4nB,GAAa3qB,SAASmxB,EAAKnxB,UAC3B2qB,GAAa9pB,KAAKswB,EAAKtwB,MACvB,GAAIswB,EAAKr3B,MAAO,CACZtB,EAAKsB,QAET6T,GAAQna,MAAM29B,EAAKxjB,OAAOhP,OAAO,SAAS+M,GACtC,OAAOA,EAAK,KAEhB,GAAIylB,EAAK5H,wBAAwBtqB,MAAO,CACpCsqB,GAAe4H,EAAK5H,aAExB,GAAI3nB,GAAS2hB,cAAe,CACxBoH,GAAa1pB,UAAUzL,IAAI27B,EAAKlwB,SAEpC8F,MAEJ,OAAOvO,GAKX+tB,WAAY,SAASxjB,EAASsuB,EAAa/3B,GAEvC,UAAWA,IAAU,YAAa,CAC9BitB,WAAWjtB,GAASd,EAAK6zB,kBACtB,CACH9F,WAAWl4B,KAAKmK,EAAK6zB,eAEzB,IAAKp7B,EAAE8B,QAAQyzB,eAAgB,CAC3BA,cAAgB,GAEpB,GAAIzjB,IAAYvS,YAAc6gC,EAAa,CACvC,IAAIC,EAAQ,CACRpB,EACA3J,WAAW74B,OAAS,EACpBqV,GAEJyjB,cAAcn4B,KAAKijC,GACnBhF,IAEJ,OAAO9zB,GAOXlJ,KAAM,SAASyT,EAAS8M,EAAQyQ,GAC5B,IAAIiR,EAAIjR,GAAY,IAAIrvB,EAAEsvB,SAC1BgQ,GAAU,SAASR,IACf,GAAI9+B,EAAE8B,QAAQgQ,GAAU,EACpB,SAAUumB,IACN,IAAI3oB,EAAMoC,EAAQwV,QAClB,GAAI5X,EAAK,CACLnI,EAAKlJ,KAAKqR,EAAKkP,GAAQ0P,KAAK+J,OACzB,CACHiI,EAAE5/B,YALV,QAQG,GAAIs7B,GAAQ,CAGfyD,GAAiBriC,KAAK,CAAC0U,EAAS8M,EAAQ0hB,QACrC,CAIH,IAAI15B,EAAM0N,EAASxC,EAAS8M,EAAQ,MACpC,GAAIhY,IAAQA,EAAI0nB,MAAQ1nB,EAAIg0B,MAAO,EAC9Bh0B,EAAI0nB,MAAQ1nB,EAAIg0B,MAAMx+B,KAAKwK,EAAK,WAC7B05B,EAAE5/B,QAAQ6G,SAO1B,OAAO+4B,EAAE7P,WAMbmP,UAAW,SAASlH,EAAM3K,EAAOnP,GAC7BrX,EAAKmD,QAAQ,qBAAsB,CAACguB,EAAM3K,EAAOnP,IACjD,OAAOrX,GAQXkrB,MAAO,SAAS+D,EAAM+J,EAAUnR,EAAStsB,GACrCq8B,EAAO/hC,KAAK,GAAGuB,MAAMvC,KAAKH,YAC1B,GAAImgC,GAAU,CACV,MAAM,IAAIh6B,MAAMtG,QAAQwhB,IAAUoX,cAAe,UAErD,IAAKxyB,YAAYs0B,GAAO,CACpB,MAAM,IAAIp0B,MAAMkb,IAAUqX,qBAE9ByH,GAAW,KACX,GAAI70B,EAAKwmB,SAAWxmB,EAAK20B,UAAY,IAAM0D,GAAW,CAClDxD,GAAW,MACX70B,EAAK40B,OAAO,WACT,GAAI50B,EAAKwmB,MAAM,OAASxmB,EAAK01B,WAAW,MAAO,CAClDb,GAAW,MACX,GAAIl6B,YAAYktB,GAAU,CACtBA,IAEJ,OAAO7nB,EAGX,GAAIoJ,GAASX,QAAS,CAClB0pB,GAAa1pB,UAAUT,UAG3B,IAAI2sB,EAAQ30B,EAAK20B,QACjB,SAASsE,EAAe9H,EAAM3K,EAAOnP,GACjC,GAAImP,EAAO,CACP,MAAOxmB,EAAK20B,QAAUA,EAAO,CACzB30B,EAAK2G,IAAI3O,UAAW,MAExB,GAAIoR,GAASX,QAAS,CAClB0pB,GAAa1pB,UAAUV,SAE3B,IAAIjB,EAAO9G,EAAKs1B,YAAY,MAAQ,IACpCl6B,GAAQ4B,IAAI8J,EAAO,QAAS0f,GAC5BprB,GAAQ4B,IAAI8J,EAAO,QAASqqB,GAC5B0D,GAAW,MACX,GAAIl6B,YAAYktB,GAAU,CAKtBA,SAED,CACH,GAAImR,EAAU,CACV,IAAK3hB,EAAQ,CACTrX,EAAKzE,MAAMwa,IAAUyW,uBAEzBxsB,EAAK2G,IAAI3O,UAAW,MAAMkhC,SAAS,WAChC,CACHrE,GAAW,MACX,IAAKxd,EAAQ,CACTrX,EAAKzE,MAAMwa,IAAU0W,eAEzBzsB,EAAK2G,IAAI3O,UAAW,MAAM2O,IAAI3O,UAAW,MAG7C,GAAI2C,YAAYY,GAAQ,CACpBA,KAGRyE,EAAKgE,IAAI,sBAEbhE,EAAKmE,GAAG,qBAAsB,SAAS6V,EAAOmX,EAAM3K,EAAOnP,GACvD4hB,EAAe9H,EAAM3K,EAAOnP,KAEhCrX,EAAKnK,KAAK,SAASs7B,GACfnxB,EAAKk5B,SAAS9vB,GAAS8gB,UAAUr0B,KAAK,SAASsjC,GAC3C,IACI,IAAI95B,EAAM4vB,EAAKp6B,KAAKmL,EAAMmxB,EAAMgI,EAAM,SAClC3S,EACAnP,GACA4hB,EAAe9H,EAAM3K,EAAOnP,KAEhC,GAAIhY,GAAO1E,YAAY0E,EAAIg0B,MAAO,CAC9BrzB,EAAK0uB,QACLrvB,EAAIg0B,KAAK,SAAS7M,GACdyS,EAAe9H,EAAM3K,GACrBxmB,EAAK6uB,YAGf,MAAOjzB,GACLuzB,EAAkBvzB,EAAG,UAE1B,CACC4M,OAAQuN,IAAU0X,SAAW,KAC7B3mB,KAAM,cAEX,CACC0B,OAAQuN,IAAUmV,MAAQ,KAC1BpkB,KAAM,UAEV,OAAO9G,GAKXoJ,SAAU,WACN,OAAOA,IAKXytB,cAAe,SAASF,GACpB,IAAI11B,EAAMkxB,GAAa3qB,WACvB,IAAI+C,EAAU4nB,GAAap4B,MAAMzD,UAAU,EAAG2K,GAC9C,IAAIm4B,EAAc7uB,EAAQ5O,MAAM,KAChC,IAAIoX,EACJ,GAAI4jB,EAAM,CACN,GAAIyC,EAAYlkC,SAAW,EAAG,CAC1B6d,EAASqmB,EAAY,OAClB,CACH,IAAIxoB,EAAIrG,EAAQ/U,MAAM,WACtB,IAAI6jC,EAAgBzoB,EAAIA,EAAEzK,OAAO,SAAS+T,GACtC,OAAQA,EAAI1kB,MAAM,SACnBN,OAAS,EACZ0b,EAAIrG,EAAQ/U,MAAM,MAClB,IAAI8jC,EAAe1oB,EAAIA,EAAE1b,OAAS,EAClC,GAAIokC,EAAe,IAAM,EAAG,CACxBvmB,EAASxI,EAAQ/U,MAAM,aAAa,QACjC,GAAI6jC,EAAgB,IAAM,EAAG,CAChCtmB,EAASxI,EAAQ/U,MAAM,qBAAqB,OACzC,CACHud,EAASqmB,EAAYA,EAAYlkC,OAAS,GAC1C,IAAKI,GAAI8jC,EAAYlkC,OAAS,EAAGI,GAAI,EAAGA,KAAK,CAEzC,IAAIikC,EAAcH,EAAY9jC,GAAI,GAClC,GAAIikC,EAAYA,EAAYrkC,OAAS,KAAO,KAAM,CAC9C6d,EAASqmB,EAAY9jC,GAAI,GAAK,IAAMyd,MACjC,CACH,cAKb,CACHA,EAASxI,EAEb,OAAOwI,GAKX2jB,SAAU,SAAS3pB,EAAU5D,GACzBA,EAAU1Q,EAAEqE,OAAO,CACf65B,KAAM,KACNpI,KAAM,MACNqI,OAAQ,KACRH,cAAe,KACf9K,UAAW,MACZxiB,GAAW,IACd,IAAIqwB,EAAYrwB,EAAQstB,cAGxB,IAAI1jB,EAAS/S,EAAK62B,cAAc1tB,EAAQwtB,MAAM51B,QAAQ,OAAQ,KAC9D,IAAIklB,EAAQ,MACZ,GAAI9c,EAAQwtB,KAAM,CACd,GAAI5jB,EAAOvd,MAAM,MAAO,CACpBywB,EAAQ,SACL,GAAIlT,EAAOvd,MAAM,MAAO,CAC3BywB,EAAQ,IAEZ,GAAIA,EAAO,CACPlT,EAASA,EAAOhS,QAAQ,QAAS,KAIzCgM,EAAWA,EAAS3V,QACpB,GAAIgS,GAASvB,OAASpP,EAAEqhB,QAAQ,QAAS/M,MAAe,EAAG,CACvDA,EAASlX,KAAK,SAElB,GAAIuT,GAAS6gB,MAAQxxB,EAAEqhB,QAAQ,OAAQ/M,MAAe,EAAG,CACrDA,EAASlX,KAAK,QAElB,GAAIqhC,EAAY,IAAM,EAAG,CACrB3sB,EAAUvK,EAAK62B,cAAc1tB,EAAQwtB,UAClC,CACH,IAAI7gC,EAAOkK,EAAK62B,cAAc1tB,EAAQwtB,MACtC,GAAI7gC,IAASyU,EAAS,CAElB,QAGR,IAAIiT,EAAO/kB,EAAE6Z,SAASC,aAAaQ,GACnC,GAAI5J,EAAQytB,OAAQ,CAChBpZ,EAAOA,EAAKzc,QAAQ,kBAAmB,SAASwhB,EAAGkX,EAAOvf,GACtD,GAAIA,EAAI1kB,MAAM,QAAS,CACnB,OAAOikC,EAAQ,QAAUvf,MACtB,CACH,OAAOuf,EAAQ,IAAMvf,KAIjC,SAASwf,IACL,IAAIrW,EAAU,GACd,IAAK,IAAI/tB,EAAIyX,EAAS7X,OAAQI,KAAM,CAChC,GAAIqI,EAAM7H,KAAKiX,EAASzX,IAAK,CACzB,IAAIE,EAAQuX,EAASzX,GACrB,GAAI2wB,IAAU,IAAK,CACfzwB,EAAQA,EAAMuL,QAAQ,KAAM,OAEhC,IAAKklB,GAAS9c,EAAQytB,OAAQ,CAC1BphC,EAAQA,EAAMuL,QAAQ,aAAc,QAExC,IAAKy4B,GAAa9P,UAAUl0B,GAAQ,CAChC,GAAIud,EAAOrb,gBAAkBqb,EAAQ,CACjCvd,EAAQA,EAAMkC,mBACX,GAAIqb,EAAOxc,gBAAkBwc,EAAQ,CACxCvd,EAAQA,EAAMe,eAGtB8sB,EAAQxtB,KAAKL,IAGrB,OAAO6tB,EAEX,IAAIljB,EAAQq5B,EAAY,GAAK,IAC7B,IAAI77B,EAAQ,IAAIiD,OAAO,IAAM4c,EAAMrd,GACnC,IAAIkjB,EAAUqW,IACd,SAAS34B,EAAQpJ,EAAOopB,GACpB,IAAIjnB,EAAOkG,EAAKozB,cAChB,IAAInyB,EAAMjB,EAAKq2B,eACf,IAAIvnB,EAAK,IAAIlO,OAAO,IAAMjJ,EAAO,KACjC,IAAIgiC,EAAM7/B,EAAKxD,UAAU,EAAG2K,GAC5B,IAAI24B,EAAO9/B,EAAKxD,UAAU2K,GAC1B,IAAI44B,EAAY9Y,EAAYhgB,QAAQ+N,EAAI,KAAOmX,GAAS,IACxDjmB,EAAKs2B,YAAYqD,EAAME,EAAYD,GACnC55B,EAAK85B,cAAcH,EAAME,GAAW3kC,QAExC,GAAImuB,EAAQnuB,SAAW,EAAG,CACtB,GAAIiU,EAAQytB,OAAQ,CAChB71B,EAAQyc,EAAM6F,EAAQ,QACnB,CACHrjB,EAAKkN,OAAOmW,EAAQ,GAAGtiB,QAAQpD,EAAO,KAAOsoB,GAAS,KAE1D1b,EAAUvK,EAAK62B,cAAc1tB,EAAQwtB,MACrC,OAAO,UACJ,GAAItT,EAAQnuB,OAAS,EAAG,CAC3B,KAAMgiC,GAAa,EAAG,CAClBA,EAAY,EACZ,GAAI/tB,EAAQolB,KAAM,CACd,GAAI5zB,YAAYwO,EAAQwiB,WAAY,CAChC,IAAItsB,EAAM8J,EAAQwiB,UAAU92B,KACxBmL,EACA+S,EACAsQ,EACA8P,GAEJ,UAAW9zB,IAAQ,YAAa,CAC5B,OAAO,SACJ,CACH,OAAOA,QAER,GAAI8J,EAAQwiB,YAAc,MAAO,CACpCwH,IACA,IAAIr5B,EAAOupB,EAAQjsB,QAAQ2iC,UAAUrjC,KAAK,QAC1CsJ,EAAKuuB,KAAK91B,EAAE6Z,SAASc,gBAAgBtZ,GAAO,CACxC43B,UAAW,KACX7N,WAAY,QAGpB,OAAO,UAER,CACH,IAAImW,EAASjb,cAAchM,EAAQsQ,EAASmW,GAC5C,GAAIQ,EAAQ,CACRj5B,EAAQgS,EAAQinB,GAChBzvB,EAAUvK,EAAK62B,cAAc1tB,EAAQwtB,MACrC,OAAO,SAQvB5pB,SAAU,WACN,OAAOgkB,GAAapsB,MAAMuqB,aAK9B+K,gBAAiB,SAASvJ,EAAYxF,GAClC,SAASgP,IACLl6B,EAAK0uB,MAAMtlB,GAASmhB,WACpBkG,EAAiBC,EAAYxF,EAAO,SAASzxB,GACzCuG,EAAK6uB,SACL,IAAIlqB,EAAMosB,GAAapsB,MACvBlM,EAAEqE,OAAO6H,EAAKlL,GACdg8B,EAAwB,QAGhC,GAAI96B,YAAYuwB,GAAQ,CACpBlrB,EAAKkrB,MAAMA,EAAO,KAAMgP,QACrB,GAAItkC,SAAS86B,KAAgB,UAAYxF,EAAO,CACnDlrB,EAAKkrB,MACDgG,EAAoBR,EAAYxF,GAChC,KACAgP,OAED,CACHA,IAEJ,OAAOl6B,GAKXizB,UAAW,WACPD,IACA,OAAOhzB,GAKXy0B,OAAQ,WACJ,OAAOA,IAKX/F,MAAO,SAAStW,GACZ2f,GAAU,SAASR,IACfpB,KACA1B,GAAS,KACTtC,GAAanqB,QAAQoQ,GAAWzG,YAChC,IAAKyG,EAAS,CACV+Z,GAAaruB,KAAK,WAAWwjB,SAEjCoL,EAAW,aAEf,OAAO1yB,GAKX6uB,OAAQ,WACJkJ,GAAU,SAASR,IACf9C,GAAS,MACT,GAAIztB,IAAWsY,UAAUjZ,UAAYrG,EAAM,CACvCmyB,GAAapqB,SAEjBoqB,GAAaruB,KAAK,WAAWsU,UAC7B,IAAIb,EAAW2gB,GACfA,GAAmB,GACnB,IAAK,IAAI5iC,EAAI,EAAGA,EAAIiiB,EAASriB,SAAUI,EAAG,CACtC0K,EAAKlJ,KAAKQ,MAAM0I,EAAMuX,EAASjiB,IAEnC0K,EAAKmD,QAAQ,UACb,IAAI7J,EAAK46B,EAAiBnU,QAC1B,GAAIzmB,EAAI,CACJA,IAEJ0G,EAAK82B,mBACLpE,EAAW,cAEf,OAAO1yB,GAMXslB,KAAM,WACF,GAAIlc,GAAS+wB,SAAU,CACnB,OAAO/wB,GAAS+wB,SAEpB,UAAWtwB,IAAc,aAAeA,IAAc,IAAM,CACxDA,EAAY8I,cAAc3S,EAAMspB,IAEpC,OAAOzf,GAMX2oB,KAAM,WACF,GAAIppB,GAASgxB,QAAS,CAClB,OAAOhxB,GAASgxB,QAEpB,UAAWzC,IAAa,YAAa,CACjCA,EAAWpO,aAAavpB,EAAMspB,IAElC,OAAOqO,GAKXlvB,QAAS,WACL,OAAO0pB,GAAa1pB,WAKxB4xB,cAAe,SAASpyB,GACpB,SAASqyB,IACLlxB,GAAS0hB,aAAe,KACxB,IAAKiD,WAAW74B,OAAQ,CACpB8K,EAAK+tB,kBACF,GAAIzO,UAAUpqB,SAAW,EAAG,CAC/B8K,EAAK+tB,WAAW,OAGxB,GAAI9lB,EAAQ,CAGR,UAAWnQ,OAAOyiC,eAAiB,YAAa,CAC5Cj1B,WAAWg1B,EAAK,OACb,CACHC,aAAaD,QAEd,CACHlxB,GAAS0hB,aAAe,MAE5B,OAAO9qB,GAKXw6B,oBAAqB,WACjBxM,cAAgB,GAChBD,WAAa,GACb,OAAO/tB,GAKX0H,KAAM,WACF,GAAI4X,UAAUpqB,WAAa,EAAG,CAC1B,OAAO8K,MACJ,CACHsf,UAAUjZ,QAAQ2B,UAClB,IAAIN,EAAO4X,UAAUvZ,SAASgC,SAE9B,IAAI0yB,EAAI/yB,EAAKhC,SAASf,IAAM,GAC5BlM,EAAE,aAAaiiC,QAAQ,CAAC3E,UAAW0E,GAAI,KACvC,IACIpb,wBAAwB3X,GAC1B,MAAO9L,GACLuzB,EAAkBvzB,EAAG,oBAEzB,OAAO8L,IASfpG,MAAO,SAAS2G,EAAQoP,GACpB0gB,GAAU,SAASR,IACf,GAAIjY,UAAUpqB,WAAa,EAAG,CAC1B,GAAI+S,IAAW,MAAO,CAClBjI,EAAKgI,QAAQqP,OACV,CACHrX,EAAK+H,OAAOsP,SAEb,GAAIpP,IAAW,MAAO,CACzBjI,EAAK0H,WACF,CACH,IAAIrB,EAAQiZ,UAAUjZ,QACtB,GAAIA,IAAUrG,EAAM,CAIhBsf,UAAU9Y,QAAQ,SAAS8L,GACvB,GAAIA,IAAatS,GAAQsS,EAAStL,UAAW,CACzCsL,EAAStK,QAAQqP,MAGzB,IAAKA,EAAQ,CACT,IACIgI,wBAAwBrf,GAC1B,MAAOpE,GACLuzB,EAAkBvzB,EAAG,sBAIjC0jB,UAAUtiB,IAAIgD,GACdA,EAAK+H,OAAOsP,MAGpB,OAAOrX,GAKX26B,OAAQ,SAASA,GACb7C,GAAW,SAASP,IAChB,GAAIoD,EAAQ,CACR36B,EAAKgI,UACLowB,GAAS,SACN,CACHA,GAAS,MACTp4B,EAAK+H,YAGb,OAAO/H,GAKXo4B,OAAQ,WACJ,OAAOA,IAKXrwB,OAAQ,SAASsP,GACb,IAAKrQ,KAAYoxB,GAAQ,CACrB,GAAIvuB,IAAc7R,UAAW,CAEzBgI,EAAKsY,SAETyf,GAAU,SAASR,IACf,IAAIl4B,EACJ,IAAKgY,IAAWrQ,GAAS,CACrB0rB,EAAW,WAEf,IAAKrb,GAAUhY,IAAQrH,WAAaqf,EAAQ,CACxCrQ,GAAU,KACV,IAAKhH,EAAKy0B,SAAU,CAChBtC,GAAapqB,aAK7B,OAAO/H,GAKXgI,QAAS,SAASqP,GACd0gB,GAAU,SAASR,IACf,IAAIl4B,EACJ,IAAKgY,GAAUrQ,GAAS,CACpB3H,EAAMqzB,EAAW,UAErB,IAAKrb,GAAUhY,IAAQrH,WAAaqf,EAAQ,CACxCrQ,GAAU,MACVmrB,GAAanqB,aAGrB,OAAOhI,GAKXgH,QAAS,WACL,OAAOA,IAKXksB,UAAW,WACP,IAAI5N,EAAOtlB,EAAKslB,OAChB,IAAK,IAAIhwB,EAAI00B,WAAW90B,OAAQI,KAAM,CAClC,IAAIslC,EAAU5Q,WAAW10B,GAAGuE,IAAI,SAASqZ,GACrC,OAAOA,EAAKhe,SAEhB,GAAI0d,KAAKkB,IAAIxc,MAAM,KAAMsjC,IAAYtV,EAAM,CACvC,OAAO0E,WAAW10B,GAAGoB,KAAK,MAAQ,MAG1C,MAAO,IAKX0pB,QAAS,WACL,OAAO3nB,EAAE6Z,SAAS8N,SAMtBjY,IAAK,WACD,OAAOgqB,IAKXiB,YAAa,WACT,OAAOjB,GAAap4B,OAKxBu8B,YAAa,SAAS/rB,EAAS8M,GAC3BygB,GAAW,SAASP,IAEhB,UAAWhtB,IAAY,SAAU,CAC7BA,EAAUrD,KAAKC,UAAUoD,GAE7B4nB,GAAan1B,IAAIuN,EAASvS,UAAWqf,KAEzC,OAAOrX,GAKX85B,aAAc,SAAStyB,EAAUuQ,GAC7B+f,GAAW,SAASP,IAChBpF,GAAa3qB,SAASA,EAAUuQ,KAEpC,OAAO/X,GAKXq2B,aAAc,WACV,OAAOlE,GAAa3qB,YAKxB0F,OAAQ,SAAS6F,EAAQoE,GACrB,UAAWpE,IAAW,SAAU,CAC5B+kB,GAAW,SAASP,IAChB,IAAI3yB,EAAS5E,EAAK66B,YAClB1I,GAAajlB,OAAO6F,EAAQoE,GAC5B,GAAI/N,GAAS6hB,cAAgBrmB,EAAQ,CACjC5E,EAAK82B,sBAGb,OAAO92B,MACJ,CACH,MAAM,IAAInF,MAAMtG,QAAQwhB,IAAU4X,WAAY,aAMtDiL,WAAY,SAASpwB,GACjBsvB,GAAW,SAASP,IAChB,GAAI58B,YAAY6N,GAAS,CACrB2pB,GAAa3pB,OAAO,SAAStF,GACzBsF,EAAO3T,KAAKmL,EAAMkD,EAAUlD,SAE7B,CACHmyB,GAAa3pB,OAAOA,GAExBuoB,GAAapsB,MAAM6D,OAASA,IAEhC,OAAOxI,GAKX04B,WAAY,WACR,OAAO3H,GAAapsB,MAAM6D,QAS9B0wB,SAAU,SAAS7wB,GACfyvB,GAAW,SAASP,IAChBpF,GAAa9pB,KAAKA,IAAS,KAAOe,GAAS8gB,SAAW7hB,KAE1D,OAAOrI,GAKX86B,WAAY,SAAS1Q,GACjB,GAAIA,EAAK,CACL,OAAOjV,OACJ,CACH,OAAO1c,EAAEoB,IAAIsb,GAAO,SAASra,GACzB,OAAOH,YAAYG,EAAK,IAAMA,EAAK,KAAOA,EAAK,KAChDpE,KAAK,QAMhB4hB,OAAQ,SAAS1O,EAAO/E,GACpB,IAAK7E,EAAKgD,GAAG,YAAa,CAEtBhD,EAAKvC,SAAS,UACduC,EAAKxC,QAAQ,IAAK,SAAU,WACxBwC,EAAKsY,OAAO1O,EAAO/E,SAEpB,CACH,GAAI+E,GAAS/E,EAAQ,CACjB7E,EAAK4J,MAAMA,GACX5J,EAAK6E,OAAOA,GAEhB+E,EAAQ5J,EAAK4J,QACb/E,EAAS7E,EAAK6E,SACd,UAAWuE,GAAS+wB,WAAa,oBACtB/wB,GAASgxB,UAAY,YAAa,CACzCjI,GAAa7Z,OAAOlP,GAAS+wB,UAC7Bn6B,EAAKgY,UACL,OAEJ,IAAI+iB,EAAgBpoB,cAAc3S,EAAMspB,IACxC,IAAI0R,EAAezR,aAAavpB,EAAMspB,IAEtC,GAAIyR,IAAkBlxB,GAClBmxB,IAAiBrD,EAAU,CAC3B9tB,EAAYkxB,EACZpD,EAAWqD,EACX7I,GAAa7Z,OAAOzO,GACpB7J,EAAKgY,UACL0a,EAAW,aAGnB,OAAO1yB,GAKXgY,QAAS,WACL,GAAIsR,GAAU1f,QAAU,EAAG,CACvB5J,EAAK,GAAGmR,MAAM6D,YAAY,eAAgBsU,GAAU1f,OAExD2E,EAAO,CACH2jB,OAAQ,MACRD,OAAQ,OAEZ,OAAOjyB,GAKXyyB,MAAO,SAAStpB,GACZA,EAAU1Q,EAAEqE,OAAO,GAAI,CACnBm1B,OAAQ,MACRC,OAAQ,MACT/oB,GAAW,IACd,IACI,IAAIvE,EAAS5E,EAAK66B,YAClB,IAAII,EAGJxiC,EAAEiB,KAAK23B,EAAe,SAAS/7B,EAAG4d,GAC9B,GAAIA,IAASoe,EAAU,CACnB2J,EAAUxiC,EAAE,oBACT,GAAIA,EAAEuvB,cAAc9U,IAASvY,YAAYuY,EAAKyd,UAAW,CAE5D,GAAIxnB,EAAQ8oB,OAAQ,CAChB,IAAIwF,EAAW,oBAAsBvkB,EAAKpS,MAAQ,IAClD,IAAI0E,EAAOnQ,EAAOyO,KAAK2zB,GACvB,GAAIjyB,EAAKkN,SAAWuoB,EAAQvoB,OAAQ,CAChClN,EAAK01B,YAAYD,QAElB,CACHA,EAAQ52B,SAAShP,GAErB6d,EAAKyd,SAASsK,EAAQl2B,KAAK,aAAcmO,EAAKpS,YAC3C,CACHrI,EAAE,UAAUia,KAAKQ,GACZ7O,SAAS42B,GAASrxB,MAAM,WAGrC+oB,IACAD,EAAW,WAEX,GAAKtpB,GAAS6hB,cAAgB9hB,EAAQ+oB,QAAWttB,EAAQ,CACrD5E,EAAK82B,mBAETzF,EAAgB,GAClB,MAAO8J,GACL,GAAIxgC,YAAYyO,GAASihB,kBAAmB,CACxC,IACIjhB,GAASihB,iBAAiBx1B,KAAKmL,EAAMm7B,EAAI,oBAC3C,MAAOC,GACLhyB,GAASihB,iBAAmB5xB,EAAEkQ,KAC9BxD,gBAAgB,qBAAsBi2B,QAEvC,CACHj2B,gBAAgB,UAAWg2B,IAGnC,OAAOn7B,GAKXiyB,OAAQ,SAAS/e,EAAMH,EAAQ5J,GAC3B2uB,GAAW,SAASP,IAChB,GAAIrkB,EAAO,EAAG,CACVA,EAAOiC,GAAMjgB,OAASge,EAE1B,IAAKiC,GAAMjC,GAAO,CACdlT,EAAKzE,MAAM,uBAAyB2X,QACjC,GAAIH,IAAW,KAAM,CACxBoC,GAAM9d,OAAO6b,EAAM,GACnB7d,EAAOyO,KAAK,eAAiBoP,EAAO,KAAKjW,aACtC,CACHkY,GAAMjC,GAAM,GAAKH,EACjB,GAAI5J,EAAS,CACTgM,GAAMjC,GAAM,GAAK/J,EAErBwoB,EAAa,CACT5e,OAAQA,EACRjS,MAAOoS,EACP/J,QAASA,IAEbnJ,EAAKyyB,MAAM,CACPP,OAAQ,MACRD,OAAQ,UAIpB,OAAOjyB,GAKXq7B,YAAa,SAASnoB,GAClB,OAAOlT,EAAKiyB,OAAO/e,EAAM,OAM7BiO,WAAY,WACR,OAAOhM,GAAMjgB,OAAS,GAW1Bq5B,KAAM,SAASn5B,EAAK+T,GAChB,SAASolB,EAAKn5B,GACV,IACI,IAAIkmC,EAAS7iC,EAAEqE,OAAO,CAClB21B,MAAO,KACPrI,IAAKhhB,GAASghB,IACduG,SAAUl4B,EAAEkQ,KACZ+oB,UAAW,MACX7N,WAAY,MACb1a,GAAW,KACd,SAAUwnB,GACN2K,EAAO3K,SAAW,SAAS1b,GACvB,GAAIqmB,EAAOlR,IAAK,CACZnV,EAAI7Q,SAAS,OAEjB,IACI,GAAIzJ,YAAYg2B,GAAW,CACvBA,EAAS1b,IAEf,MAAOrZ,GACLuzB,EAAkBvzB,EAAG,uBACrB+0B,EAAW,QAXvB,CAcG2K,EAAO3K,UACV,GAAI2K,EAAO7I,MAAO,CAEd,GAAIpB,EAAcn8B,OAAQ,CACtB8K,EAAKyyB,QAETpB,EAAgB,GAEpB,UAAWj8B,IAAQ,WAAY,CAC3BA,EAAMA,EAAI2F,KAAKiF,GAEnB2xB,EAAa,CACT5e,OAAQ3d,EACR+T,QAASmyB,EACTx6B,MAAOqU,GAAMjgB,SAIjBigB,GAAMtf,KAAK,CAACT,EAAKqD,EAAEqE,OAAOw+B,EAAQ,CAC9BxkC,KAAM,UAEV,GAAIwkC,EAAO7I,MAAO,CACdzyB,EAAKyyB,SAEX,MAAO72B,GAGL,GAAIjB,YAAYyO,GAASihB,kBAAmB,CACxCjhB,GAASihB,iBAAiBx1B,KAAKmL,EAAMpE,EAAG,uBACrC,CACHuJ,gBAAgB,kBAAmBvJ,KAI/C,GAAIxG,IAAQ4C,WAAa2C,YAAYvF,EAAIi+B,MAAO,CAC5C56B,EAAE+7B,KAAKp/B,GAAK2xB,KAAKwH,OACd,CACHA,EAAKn5B,GAET,OAAO4K,GAKXzE,MAAO,SAAS6J,EAAS+D,GACrBA,EAAU1Q,EAAEqE,OAAO,GAAIqM,EAAS,CAACihB,IAAK,MAAOvG,WAAY,QACzD,SAASjvB,EAAOme,GACZ,UAAWA,IAAW,SAAU,CAC5BA,EAAS/c,OAAO+c,GAGpB,IAAIpa,EAAMF,EAAE6Z,SAASc,gBAAgBL,GACjChS,QAAQ,MAAO,SACfA,QAAQ2a,OAAQ,kBACpB,MAAO,cAAgB/iB,EAAM,IAEjC,UAAWyM,IAAY,WAAY,CAC/B,OAAOpF,EAAKuuB,KAAK,WACb,OAAO35B,EAAOwQ,EAAQvQ,KAAKmL,KAC5BmJ,GAEP,GAAI/D,GAAWA,EAAQiuB,KAAM,CACzBjuB,EAAQiuB,KAAK,SAAStgB,GAClB/S,EAAKuuB,KAAK35B,EAAOme,MAErB,OAAO/S,EAEX,OAAOA,EAAKuuB,KAAK35B,EAAOwQ,GAAU+D,IAKtCoQ,UAAW,SAAS3d,EAAGwB,GACnB,IAAIgI,EAAUC,kBAAkBzJ,GAChC,GAAIwB,EAAO,CACPgI,EAAU,QAAUhI,EAAQ,UAAYgI,EAE5C,GAAIA,EAAS,CACTpF,EAAKzE,MAAM6J,EAAS,CAChBurB,SAAU,SAAS1b,GACfA,EAAI7Q,SAAS,sBAEjBstB,UAAW,OAGnB,UAAW91B,EAAEiK,WAAa,SAAU,CAEhC7F,EAAK0uB,MAAMtlB,GAASmhB,WACpB9xB,EAAEsB,IAAI6B,EAAEiK,SAAU,SAAS8oB,GACvB,IAAIpwB,EAAM3C,EAAE2/B,WAAa,EACzB,IAAIroB,EAAOyb,EAAKhzB,MAAM,MAAM4C,GAC5B,GAAI2U,EAAM,CACNlT,EAAKzE,MAAM,IAAMK,EAAE2/B,WAAa,MAAQroB,GAE5ClT,EAAK6uB,UACN,QAEP,GAAIjzB,EAAEoY,MAAO,CACT,IAAIA,EAAQvb,EAAE6Z,SAASc,gBAAgBxX,EAAEoY,OACzChU,EAAKuuB,KAAKva,EAAMrY,MAAM,OAAO9B,IAAI,SAAS2hC,GACtC,MAAO,cAAgBA,EAAMz6B,QAAQ2a,OAAQ,SAASgM,GAClD,MAAO,IAAMA,EAAM,gBAClB,MACNhxB,KAAK,MAAO,CACXi6B,SAAU,SAAS1b,GACfA,EAAI7Q,SAAS,0BAEjByf,WAAY,QAGpB,OAAO7jB,GAKXkyB,OAAQ,SAASuJ,GACb,IAAIx6B,EACJw6B,EAAS7oB,KAAK8oB,MAAMD,GACpB,GAAIz7B,EAAK27B,KAAM,CACX,GAAIF,EAASz7B,EAAK27B,KAAK,cAAgBF,EAAS,EAAG,CAC/Cz7B,EAAK27B,KAAK,YAAa,GAE3B16B,EAAMjB,EAAK27B,KAAK,aAChB37B,EAAK+1B,UAAU90B,EAAMw6B,OAClB,CACH,GAAIA,EAASz7B,EAAK+E,KAAK,cAAgB02B,EAAS,EAAG,CAC/Cz7B,EAAK+E,KAAK,YAAa,GAE3B9D,EAAMjB,EAAK+E,KAAK,aAChB/E,EAAK+1B,UAAU90B,EAAMw6B,GAEzB,OAAOz7B,GAMX40B,OAAQ,SAASgH,GACb,GAAI/G,GAAU,CACV,MAAM,IAAIh6B,MAAMtG,QAAQwhB,IAAUoX,cAAe,WAErD2K,GAAW,SAASP,IAChB,GAAIqE,EAAO,CACP,IAAI1Q,EAAQ0M,EAAOjxB,MACnB3G,EAAK+0B,UAAU/8B,UAAW,MAC1BgI,EAAKkrB,MAAM5zB,MAAM0I,EAAMkrB,QACpB,GAAI6F,GAAarqB,SAAW,GAAK1G,EAAKwmB,QAAS,CAClDxmB,EAAK40B,OAAO,UACT,CACH,MAAO7D,GAAarqB,OAAS,EAAG,CAG5B,GAAI1G,EAAKwmB,QAAS,CACdxmB,EAAK40B,OAAO,MAAMjuB,MAAMA,UACrB,CACH3G,EAAK2G,WAKrB,OAAO3G,GAOXwmB,MAAO,SAASoV,GACZ,OAAOxgC,GAAQrB,IAAIiG,EAAKs1B,YAAYsG,GAAS,WAMjD7G,UAAW,SAASvO,EAAOoV,GACvB,IAAI90B,EAAO9G,EAAKs1B,YAAYsG,GAAS,SACrC,UAAWpV,IAAU,YAAa,CAC9BprB,GAAQ6B,OAAO6J,OACZ,CACH1L,GAAQ4B,IAAI8J,EAAM0f,GAEtB,OAAOxmB,GAMX80B,UAAW,SAAS8G,GAChB,OAAO57B,EAAKwmB,MAAMoV,IAKtBlG,WAAY,SAASkG,GACjB,OAAOxgC,GAAQrB,IAAIiG,EAAKs1B,YAAYsG,GAAS,WAKjD90B,KAAM,WACF,OAAOiqB,GAAapsB,MAAMmC,MAK9BwuB,YAAa,SAASsG,GAClB,IAAI90B,GAAQsC,GAAStC,KAAOsC,GAAStC,KAAO,IAAM,IAC9C4wB,EACJ,GAAIkE,GAAS7K,GAAarqB,OAAS,EAAG,CAClC,IAAIm1B,EAAa9K,GAAal3B,IAAI,SAASiiC,GACvC,OAAOA,EAAMh1B,MAAQ,KACtB1P,MAAM,GAAGV,KAAK,KACjB,GAAImlC,EAAY,CACZ/0B,GAAQ,IAAM+0B,GAGtB,OAAO/0B,GAKXi1B,KAAM,SAAS32B,EAASyiB,EAASmU,GAC7B,IAAIC,EAAQ3jC,OAAOyvB,WACnB,IAAIgU,EAAO,MACX/7B,EAAKnK,KAAK,SAASkd,GACfgpB,EAAO,KACPE,EAAM9iC,QAAQ4Z,GACd,GAAIpY,YAAYktB,GAAU,CACtBA,EAAQ9U,GAEZ/S,EAAK2G,MACL,GAAIyC,GAASX,QAAS,CAClB0pB,GAAa1pB,UAAUV,WAE5B,CACCjB,KAAM,OACN2B,QAAS,MACTD,OAAQpD,GAAW,GACnB6mB,OAAQ,WACJ,IAAK8P,EAAM,CACPE,EAAMnT,SACN,GAAInuB,YAAYqhC,GAAS,CACrBA,SAKhB,GAAI5yB,GAASX,QAAS,CAClB0pB,GAAa1pB,UAAUT,UAE3B,OAAOi0B,EAAM/S,WAKjBrzB,KAAM,SAASq5B,EAAa/lB,GACxB4uB,GAAU,SAASR,IACfpuB,EAAUA,GAAW,GACrB,IAAIf,EAAW,CACX8zB,cAAe,OAEnB,IAAIC,EAAgB1jC,EAAEqE,OAAO,GAAIsL,EAAUe,GAC3C,IAAKgzB,EAAcr1B,MAAQ+F,EAAc,CAErCsvB,EAAcr1B,KAAO+F,EAAa/F,KAEtC,GAAIq1B,EAAc3zB,SAAWxQ,UAAW,CACpCmkC,EAAc3zB,QAAU2zB,EAAcr1B,MAAQ,KAAO,IAGzD,IAAInC,EAAMosB,GAAapsB,MACvB,GAAIA,EAAK,CACLA,EAAI0D,KAAO8pB,GAAa9pB,OAE5B,IAAI6tB,EAAazB,GACjB,SAASxuB,IACLysB,EAAW,SAAU,CAAC/tB,EAAKosB,GAAapsB,QACxC8wB,IAGJhF,EAAiBvB,EAAa/lB,EAAQ+hB,MAAO,SAAS7rB,GAElD0xB,GAAal7B,KAAK4C,EAAEqE,OAAO,GAAIuC,EAAK88B,IACpC,GAAIA,EAAcvQ,aAAe,KAAM,CACnC,GAAInzB,EAAE8B,QAAQ8E,EAAIusB,YAAa,CAC3BmF,GAAapsB,MAAMinB,WAAavsB,EAAIusB,gBACjC,IAAKvsB,EAAIusB,WAAY,CACxBmF,GAAapsB,MAAMinB,WAAa,OAGxC,GAAIuQ,EAAcjR,MAAO,CACrB,IAAI3vB,EACJ,IAAI0e,EAAOrkB,SAASumC,EAAcjR,OAClC,GAAIjR,IAAS,WAAY,CACrB1e,EAAQ4gC,EAAcD,cAAgBzjC,EAAEkQ,KAAO3I,EAAK2G,IACpD3G,EAAKkrB,MACDiR,EAAcjR,MACdiR,EAAcD,cACdj2B,EACA1K,QAED,GAAI3F,SAASs5B,KAAiB,UAC1BjV,IAAS,UAAYA,IAAS,UAAW,CAChD1e,EAAQ4gC,EAAcD,cAAgBzjC,EAAEkQ,KAAO3I,EAAK2G,IACpD3G,EAAKkrB,MACDgG,EACIhC,EACAiN,EAAcjR,OAElBiR,EAAcD,cACdj2B,EACA1K,QAGL,CACH0K,IAEJ,IAAKiwB,GAAcl2B,EAAKgH,UAAW,CAC/BhH,EAAK6uB,cAIjB,OAAO7uB,GAKX2G,IAAK,SAASoM,EAAQsE,GAClB,GAAItE,IAAW/a,UAAW,CACtBm7B,EAAapgB,GAEjB,IAAIyT,EAAQxmB,EAAKwmB,MAAM,MACvB,IAAI7hB,EACJ,GAAIosB,GAAarqB,SAAW,EAAG,CAC3B/B,EAAMosB,GAAapsB,MACnB,GAAIyE,GAAS8hB,MAAO,CAChB,IAAK7T,EAAQ,CACTqb,EAAW,QAAS,CAAC/tB,EAAK,OAE9BqwB,IACAtC,EAAW,cACR,CACH1yB,EAAKzE,MAAMwa,IAAUsX,mBAEtB,CACH,GAAI7G,EAAO,CACP0O,IAEJ,IAAIztB,EAAUspB,GAAapqB,MAC3BhC,EAAMosB,GAAapsB,MACnB8wB,IACA,IAAKpe,EAAQ,CACTqb,EAAW,QAAS,CAACjrB,EAAS9C,IAGlC,GAAIkwB,IAAY70B,EAAK04B,eAAiB3iB,IAAUmV,MAAQ,KAAM,CAC1D2J,GAAW,MAEf,GAAIl6B,YAAY8M,EAAQwkB,QAAS,CAC7B,IACIxkB,EAAQwkB,OAAOp3B,KAAKmL,EAAMA,GAC5B,MAAOpE,GACL6L,EAAQwkB,OAASxzB,EAAEkQ,KACnBwmB,EAAkBvzB,EAAG,WAI7BoE,EAAKk5B,SAASv0B,EAAI0D,MAEtB,OAAOrI,GAKXiX,OAAQ,SAASmlB,EAAgB/9B,GAC7B,UAAWA,IAAU,YAAa,CAC9B,UAAW+9B,IAAmB,SAAU,CACpC,OAAOhzB,GAASgzB,QACb,UAAWA,IAAmB,SAAU,CAC3C3jC,EAAEiB,KAAK0iC,EAAgB,SAAS3hC,EAAK4D,GACjC+K,GAAS3O,GAAO4D,SAGrB,CACH+K,GAASgzB,GAAkB/9B,EAC3B,GAAI+9B,EAAe5mC,MAAM,qBAAsB,CAC3C+Y,KAGR,OAAOvO,GAKXq8B,WAAY,SAASC,GACjB,IAAI7M,EAAO6M,EAAS/lC,cAAcoF,MAAM,KACxC,IAAIlB,EAAMg1B,EAAK9oB,MACf,IAAI41B,EAAO9M,EAAK9yB,QAAQ,WAAa,EACrC,IAAIojB,EAAQ0P,EAAK9yB,QAAQ,YAAc,EACvC,IAAI6/B,EAAM/M,EAAK9yB,QAAQ,UAAY,EACnC,IAAI8/B,EAAOhN,EAAK9yB,QAAQ,WAAa,EACrC,IAAIf,EAAInD,EAAE0hB,MAAM,UAAW,CACvBlO,QAASswB,EACTpwB,SAAU4T,EACV3T,OAAQowB,EACRtwB,QAASuwB,EACTtjB,MAAOujB,GAAkBjiC,GACzBA,IAAKA,IAET,IAAIid,EAAMjf,EAAEgD,SAASie,iBAAmB5hB,QACxC4f,EAAIvU,QAAQvH,GACZA,EAAInD,EAAE0hB,MAAM,YACZve,EAAEnB,IAAMA,EACRmB,EAAEud,MAAQvd,EAAEme,QAAU,EACtBrC,EAAIvU,QAAQvH,GACZ,OAAOoE,GAKXqM,OAAQ,SAASA,EAAQ/S,GACrB,GAAI5E,UAAUQ,SAAW,EAAG,CACxB,OAAOi9B,GAAa9lB,SAExB,UAAW/S,IAAO,YAAa,CAC3B,UAAW+S,IAAW,SAAU,CAC5B,OAAO8lB,GAAa9lB,OAAOA,QACxB,GAAI5T,EAAEuvB,cAAc3b,GAAS,CAEhCA,EAAS5T,EAAEc,KAAK8S,GAAU,GAAI,SAAS5R,EAAKnB,GACxC,IAAKge,GAAW7c,GAAM,CAClB,OAAOnB,EAAGyB,KAAKiF,GAEnB,OAAO,SAASpE,EAAG2b,GAEf,OAAOje,EAAGzE,KAAKmL,EAAMpE,EAAG,WACpB,OAAO0b,GAAW7c,GAAKmB,EAAG2b,QAItC4a,GAAa9lB,OAAOA,SAErB,UAAW/S,IAAO,WAAY,CACjC,IAAImB,EAAM4R,EACV,IAAKiL,GAAW7c,GAAM,CAClB03B,GAAa9lB,OAAO5R,EAAKnB,EAAGyB,KAAKiF,QAC9B,CACHmyB,GAAa9lB,OAAO5R,EAAK,SAASmB,EAAG2b,GACjC,OAAOje,EAAGzE,KAAKmL,EAAMpE,EAAG,WACpB,OAAO0b,GAAW7c,GAAKmB,EAAG2b,UAS9Cod,MAAO,WACH,OAAO5D,GAAarqB,QAKxBW,MAAO,WACHywB,GAAW,SAASP,IAChBv3B,EAAK6H,QACL,MAAOkpB,GAAarqB,OAAS,EAAG,CAC5BqqB,GAAapqB,MAEjB0uB,MAEJ,OAAOr1B,GAMX8H,MAAO,WACHgwB,GAAW,SAASP,IAChB,IAAIoF,EAAS38B,EAAKs1B,cAAgB,IAClC,IAAI/E,EAAQn1B,GAAQrB,IAAI4iC,EAAS,gBACjC,GAAIpM,EAAO,CACP93B,EAAEiB,KAAKwN,KAAKvS,MAAM47B,GAAQ,SAAShO,EAAGzb,GAClC1L,GAAQ6B,OAAO6J,EAAO,aACtB1L,GAAQ6B,OAAO6J,EAAO,UACtB1L,GAAQ6B,OAAO6J,EAAO,YAG9BqrB,GAAarqB,QACb1M,GAAQ6B,OAAO0/B,EAAS,kBAE5B,OAAO38B,GAOXyX,QAAS,WACLqgB,GAAW,SAASP,IAChBpF,GAAa1a,UAAUxa,SACvB+C,EAAKiD,QAAQ,UACb25B,GAAa35B,QAAQ,UAAUhG,SAC/BxE,EAAEgD,UAAU2H,OAAO,aAAepD,EAAKsJ,MACvC7Q,EAAEX,QAAQsL,OAAO,aAAepD,EAAKsJ,MACrCtJ,EAAKoD,OAAO,4CACZpD,EAAK0D,WAAW,YAAYkO,YAAY,YACpCxO,OAAO,aACX,GAAIgG,GAASQ,MAAO,CAChB5J,EAAKuV,IAAI,QAAS,IAEtB,GAAInM,GAASvE,OAAQ,CACjB7E,EAAKuV,IAAI,SAAU,IAEvB9c,EAAEX,QAAQkM,IAAI,OAAQ64B,IAClB74B,IAAI,QAAS84B,IACjB98B,EAAK8D,KAAK,kBAAkB7G,SAC5B+C,EAAKvC,WACL6hB,UAAUriB,OAAOy6B,GACjB,GAAIa,GAAqB,CACrB,GAAIA,GAAoB10B,UAAW,CAC/B00B,GAAoB10B,UAAU7D,EAAK,QAChC,CACHT,cAAcg5B,KAGtB,GAAIC,GAAmB,CACnBA,GAAkBuE,aAEtB,IAAKzd,UAAUpqB,SAAU,CACrBuD,EAAEX,QAAQkM,IAAI,cAElB3O,EAAO4H,SACPg+B,GAAQh+B,SACRk7B,GAAU,OAEd,OAAOn4B,GAGX82B,iBAAkB,WACd,IAAIkG,EACJ,GAAIh9B,EAAK27B,KAAM,CACXqB,EAAeh9B,EAAK27B,KAAK,oBACtB,CACHqB,EAAeh9B,EAAK+E,KAAK,gBAE7B/E,EAAK+1B,UAAUiH,GACf,OAAOh9B,GAMX66B,UAAW,WACP,GAAIzxB,GAASkiB,sBAAwB,EAAG,CACpC,OAAO,UACJ,CACH,IAAI2R,EAAeC,EAAYr4B,EAC/Bo4B,EAAgBj9B,EAAK,GAAGg9B,aACxBE,EAAal9B,EAAK+1B,YAClBlxB,EAAS7E,EAAKm9B,cACd,IAAIj9B,EAAQ+8B,EAAgB7zB,GAASkiB,mBACrC,OAAO4R,EAAar4B,EAAS3E,KAGtC,SAAS4G,EAAM6uB,GAEd,OAAO,WACH,GAAIwC,GAAS,CACT,IAAK/uB,GAASihB,iBAAkB,CAC5B,MAAM,IAAI5xB,EAAE6Z,SAASiS,UAAUxO,IAAU8X,kBAGjD,IACI,OAAO8H,EAAIr+B,MAAM0I,EAAM,GAAG5I,MAAME,MAAM5C,YACxC,MAAOkH,GAEL,GAAIkL,IAAS,QAAUA,IAAS,SAAU,CACtCqoB,EAAkBvzB,EAAGA,EAAEqe,MAAQ,WAAY,MAE/C,IAAK7Q,GAASihB,iBAAkB,CAC5B,MAAMzuB,QAOtB,IAAIwhC,GAAW,CACXC,EAAG,SACHC,EAAG,OACHC,EAAG,YACHC,EAAG,MACHC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,UACJC,GAAI,MACJC,GAAI,QACJC,GAAI,WACJC,GAAI,SACJC,GAAI,UACJC,GAAI,aACJC,GAAI,SACJC,GAAI,aACJC,GAAI,IACJC,GAAI,SACJC,GAAI,WACJC,GAAI,MACJC,GAAI,OACJC,GAAI,YACJC,GAAI,UACJC,GAAI,aACJC,GAAI,YACJC,GAAI,SACJC,GAAI,QACJC,GAAI,UACJC,GAAI,cACJC,GAAI,SACJC,GAAI,SACJC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,KACJC,GAAI,cACJC,IAAK,UACLC,IAAK,aACLC,IAAK,aACLC,IAAK,aACLC,IAAK,WACLC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,KAAM,KACZC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,OACLC,IAAK,WACLC,IAAK,OACLC,IAAK,QACLC,IAAK,QACLC,IAAK,WACLC,IAAK,OACLC,IAAK,WAGT,IAAKjsC,GAAI,EAAGA,GAAI,GAAIA,KAAK,CACrB8nC,GAAS,IAAM9nC,IAAK,IAAMA,GAG9B,IAAIksC,GAAS,GACb,IAAKlsC,GAAI,GAAIA,GAAI,GAAIA,KAAK,CACtBksC,GAASxrC,OAAOC,aAAaX,IAC7B8nC,GAAS9nC,IAAK,CAACksC,GAAO9pC,cAAe8pC,GAAOjrC,eAEhD,IAAImmC,GAAoB,GACxBllC,OAAOi4B,KAAK2N,IAAU52B,QAAQ,SAAS2S,GACnC,GAAIikB,GAASjkB,aAAkBve,MAAO,CAClCwiC,GAASjkB,GAAO3S,QAAQ,SAAS/L,GAC7BiiC,GAAkBjiC,EAAIlE,eAAiB4iB,QAExC,CACHujB,GAAkBU,GAASjkB,GAAO5iB,eAAiB4iB,KAQ3D,GAAI/P,GAAS6nB,uBAAyB,KAAM,CACxC7nB,GAASqiB,SAAW,MAExB,GAAIriB,GAASQ,MAAO,CAChB5J,EAAK4J,MAAMR,GAASQ,OAExB,GAAIR,GAASvE,OAAQ,CACjB7E,EAAK6E,OAAOuE,GAASvE,QAGzBpM,EAAEgD,UAAUV,KAAK,qBAAuBiF,EAAKsJ,KAAM,SAAS1N,EAAG+zB,GAC3D7B,SAASj4B,KAAK85B,KAElB,IAAIsL,GAAUxiC,EAAE,mCAAmC4L,SAASrE,GAC5D,IAAI48B,GAAenkC,EAAE,kCAAkC4L,SAASrE,GAChE,IAAIyzB,GAAOh7B,EAAE,gCAAgC4L,SAASrE,GACtD3K,EAASoD,EAAE,SAAS2L,SAAS,mBAAmBW,KAAK,OAAQ,OACxDV,SAAS42B,IACdj7B,EAAKoE,SAAS,YAEd,GAAIgF,GAAS8hB,OAASwH,EAAW,mBAAqB,MAAO,CACzD2F,GAAY,MAGhB,IAAIoJ,GACJ,UAAWtT,IAAqB,SAAU,CACtCsT,GAAmBtT,OAChB,GAAIA,aAA4BvzB,MAAO,CAE1C,IAAK,IAAItF,GAAI,EAAG6Y,GAAMggB,EAAiBj5B,OAAQI,GAAI6Y,KAAO7Y,GAAG,CACzD,UAAW64B,EAAiB74B,MAAO,SAAU,CACzCmsC,GAAmBtT,EAAiB74B,IACpC,QAIZ,IAAI8/B,GACJ,GAAIz6B,YAAYyO,GAAS8hB,OAAQ,CAC7BkK,GAAkBhsB,GAAS8hB,WACxB,GAAIuW,YACCr4B,GAAS8hB,QAAU,UAAY9hB,GAAS8hB,QAAU,MAAO,CACjEkK,GAAkBlE,EAAoBuQ,GAAkBr4B,GAAS8hB,OAErE5L,UAAUlZ,OAAOpG,GACjB,SAAS88B,KACL,GAAIxE,GAAa,CACbt4B,EAAKsB,SAGb,SAASu7B,KACLvE,GAActxB,GACdhH,EAAKgI,UAAUlE,KAAK,iBAAiBX,QAAQ,OAAQ,CAAC,OAI1D,SAASoM,GAAY3T,GACjBA,EAAIA,EAAEgf,cAIN,SAAS8mB,EAAQ5mC,EAAMmf,GACnB,OAAOnf,EAAKmf,KAAKtd,QAAQsd,MAAW,EAExC,GAAIre,EAAE+lC,cAAe,CACjB,GAAI3hC,EAAKgH,UAAW,CAChB,IAAI46B,EAAQhmC,EAAE+lC,cAAcC,MAC5B,GAAIA,EAAO,CACP,IAAK,IAAItsC,EAAI,EAAGA,EAAIssC,EAAM1sC,OAAQI,IAAK,CACnC,GAAIosC,EAAQE,EAAMtsC,GAAI,UAAY8T,GAASiiB,WAAY,CACnD,IAAIwW,EAAOD,EAAMtsC,GAAGwsC,YACpB,IAAIC,EAAMjqC,OAAOiqC,KAAOjqC,OAAOkqC,UAC/B,IAAInhC,EAASkhC,EAAIE,gBAAgBJ,GACjC7hC,EAAKuuB,KAAK,aAAe1tB,EAAS,MAAO,CAACupB,IAAK,YAC5C,GAAIsX,EAAQE,EAAMtsC,GAAI,cAAe,CACxCssC,EAAMtsC,GAAG4sC,YAAYliC,EAAKkN,eAG/B,GAAItR,EAAE+lC,cAAcQ,QAAS,CAChC,IAAIroC,EAAO8B,EAAE+lC,cAAcQ,QAAQ,cACnCniC,EAAKkN,OAAOpT,GAEhB,OAAO,QAInBrB,EAAEgD,UAAU0I,GAAG,kBAAoBnE,EAAKsJ,KAAMiG,IAC9C,IAAI+H,GAAa7e,EAAEqE,OACf,GACAuP,EACA5T,EAAEc,KAAK6P,GAASiD,QAAU,GAAI,SAAS5R,EAAKnB,GACxC,IAAK+S,EAAO5R,GAAM,CACd,OAAOnB,EAAGyB,KAAKiF,GAEnB,OAAO,SAASpE,EAAG2b,GAEf,OAAOje,EAAGzE,KAAKmL,EAAMpE,EAAG,WACpB,OAAOyQ,EAAO5R,GAAKmB,EAAG2b,SAKtCkZ,EAAiBtC,EAAkB/kB,GAAS8hB,MAAO,SAASkX,GACxD,GAAIh5B,GAASwiB,mBAAqBxiB,GAASwiB,aAAe,YACrDxiB,GAASwiB,WAAY,CAItBwW,EAAKxW,WAAa,WAEtBmF,GAAe,IAAItqB,MAAMhO,EAAEqE,OAAO,GAAIsM,GAAS6b,MAAO,CAClDne,KAAMsC,GAAStC,KACf0B,OAAQY,GAASZ,OACjBmR,SAAUvQ,GAASuQ,SACnBH,QAASpQ,GAASoQ,QAClBlB,OAAQlP,GAASi5B,SACjBpP,UAAW7pB,GAAS6pB,UACpBqP,WAAYl5B,GAASk5B,WACrB75B,QAASW,GAASX,QAClB4D,OAAQiL,IACT8qB,IAEHjQ,GAAe15B,EAAE,UAAU4L,SAAS42B,IAAS9yB,IAAI,CAC7Cc,SAAUG,GAASH,SACnBT,OAAQY,GAASZ,OACjBC,QAASW,GAASrC,OAAS,SAAWqC,GAASX,QAC/CmE,cAAexD,GAASwD,cACxBrE,YAAaa,GAASb,YACtBD,oBAAqBc,GAASd,oBAC9BsB,MAAO,OACP5C,QAAS,MACT8C,WAAYwf,GAAU1f,MACtB4P,QAASyd,EACT5qB,OAAQiL,GACRzO,aAAcO,GAASP,aACvBC,YAAaM,GAASN,YACtBC,kBAAmBK,GAASL,kBAC5BC,kBAAmBI,GAASJ,kBAC5B2Q,SAAU2d,EACVpuB,KAAME,GAASF,KACfR,iBAAkB,WACd,IAAIsX,EAAO,GAAG5oB,MAAMvC,KAAKH,WACzBohC,IACApD,EAAW,mBAAoB1S,IAEnCpX,gBAAiB,SAAS2B,GAGtB,GAAIytB,KAAcvE,GAAK7pB,QAAS,CAE5B5J,EAAKiD,UAETyvB,EAAW,kBAAmB,CAACnoB,IAC/B,IAAKurB,IAAuB,CACxB91B,EAAK82B,qBAGb/pB,SAAUA,IAEd,SAAS/E,EAAQpM,GACbA,EAAIA,EAAEgf,cACN,GAAIhf,EAAG,CAGH,IAAI4J,EAAO/J,SAAS8mC,iBAAiB3mC,EAAEgK,QAAShK,EAAE4mC,SAClD,IAAK/pC,EAAE+M,GAAMuF,QAAQ,aAAa7V,QAAU8K,EAAKgH,UAAW,CAGxDhH,EAAKgI,YAIjBhI,EAAKxC,QAAQ,IAAK,WACd/E,EAAEgD,UAAUV,KAAK,kBAAoBiF,EAAKsJ,KAAMtB,GAC5CjN,KAAK,wBAA0BiF,EAAKsJ,KAAMtB,KAElD,IAAIy6B,EAAOhqC,EAAEX,QAGb2D,SAASinC,iBAAiB,SAAU,WAChC1iC,EAAKgI,YAGT,GAAI0B,UAAW,CACX1J,EAAK2iC,MAAM,WACP,IAAKvK,GAAQ,CACT,IAAKp4B,EAAKgH,UAAW,CACjBhH,EAAKsB,QACL6wB,GAAapqB,aACV,CACH/H,EAAKgI,kBAId,CAEHy6B,EAAKt+B,GAAG,kBAAoBnE,EAAKsJ,KAAMwzB,IACnC34B,GAAG,iBAAmBnE,EAAKsJ,KAAMuzB,KAErC,WACI,IAAIriB,EAAQ,EACZ,IAAIC,EACJ,IAAI3T,EAAO,SAAW9G,EAAKsJ,KAC3B,IAAIsV,EAAW5e,EAAK8D,KAAK,iBACzB,SAAS6+B,IACL,GAAIloB,EAAQzX,GAAG,cACXyX,EAAQzX,GAAG,qBAAsB,CACjC,IAAImL,EAAMnO,EAAKozB,cAAcl+B,OAC7B8K,EAAK85B,aAAa3rB,QACf,GAAIsM,EAAQ1P,QAAQ,WAAW7V,OAAQ,CAC1C8K,EAAK85B,aAAa,GAEtB,IAAKlb,EAAS5b,GAAG,UAAW,CACxB4b,EAAStd,QAEb+F,IAEJ,SAASA,IACLmT,EAAQ,EACRC,EAAU,KAEd,IAAImoB,EAAkB,6BAClB,yBAEJ,IAAI1F,EACJl9B,EAAK8D,KAAK,iBAAiBK,GAAG,QAAS,WACnC,UAAW+4B,IAAe,YAAa,CACnCl9B,EAAK+1B,UAAUmH,MAEpB/4B,GAAG,OAAQ,WACV+4B,EAAal9B,EAAK+1B,cAEtB/1B,EAAK6iC,UAAU,SAASjnC,GACpB,IAAK2J,gBAAgB3J,EAAG63B,IAAO,CAC3BhZ,EAAUhiB,EAAEmD,EAAEsF,WAEnB4hC,QAAQ,WACP,GAAIroB,GAAWA,EAAQ1P,QAAQ63B,GAAiB1tC,OAAQ,CACpD,GAAI8R,GAAS,CACThH,EAAKgI,gBAEN,GAAI6S,sBAAwB,IAAMJ,EAAS,CAC9C,KAAMD,IAAU,EAAG,CACf,IAAK4d,GAAQ,CACT,IAAKpxB,GAAS,CACVhH,EAAKsB,YACF,CACH,IAAIyhC,EAAU35B,GAASP,aACvB7I,EAAKxC,QAAQulC,EAASj8B,EAAM67B,GAC5B,aAGL,CACH3iC,EAAKvC,SAASqJ,IAGtBO,MACD27B,SAAS,WACR37B,IACArH,EAAKvC,SAASqJ,MA5DtB,IA+DA,WACI,IAAIyC,EAAOvJ,EAAK8D,KAAK,iBACrB9D,EAAKmE,GAAG,uBAAwB,SAASvI,GACrC,GAAIif,sBAAwB,GAAI,CAC5B,IAAKpiB,EAAEmD,EAAEsF,QAAQ8B,GAAG,mCAAoC,CACpD,IAAKhD,EAAKgH,UAAW,CACjBhH,EAAK+H,SAET,IAAIrC,EAASysB,GAAazsB,SAC1B6D,EAAKgM,IAAI,CACL9P,KAAM7J,EAAEqnC,MAAQv9B,EAAOD,KAAO,GAC9Bd,IAAK/I,EAAEsnC,MAAQx9B,EAAOf,IAAM,GAC5BiF,MAAO,MACP/E,OAAQ,QAEZ,IAAK0E,EAAKvG,GAAG,UAAW,CACpBuG,EAAKjI,QAETtB,EAAKvC,SAAS,YACduC,EAAKxC,QAAQ,IAAK,WAAY,WAC1B,IAAI2lC,EAAQ,CACR19B,KAAM,GACNd,IAAK,GACLiF,MAAO,GACP/E,OAAQ,IAEZ,IAAKqR,2BAA4B,CAC7B,IAAID,EAAUjW,EAAK8D,KAAK,qBACnBoH,UAAU,WAAWhW,OAC1BiuC,EAAMx+B,IAAMsR,EAAU,GAAK,KAE/B1M,EAAKgM,IAAI4tB,KAEbnjC,EAAKvC,SAAS,aACduC,EAAK9C,UAAU,GAAI,YAAa,WAC5B,GAAIqM,EAAK,GAAGvH,YAAcuH,EAAK,GAAGlL,MAAO,CACrC,GAAIsgB,uBAAuBpV,EAAK,IAAK,CACjCuV,yBAAyBvV,EAAK,IAC9BxG,OACI/C,EAAK8D,KAAK,oBAAoB,GAC9B9D,EAAK8D,KAAK,yBAAyB,IAEvC9D,EAAKvC,SAAS,sBA1C1C,GAmDJuC,EAAKmE,GAAG,QAAS,IAAK,SAASvI,GAC3B,IAAIyH,EAAQ5K,EAAES,MACd,GAAImK,EAAM0H,QAAQ,cAAc7V,OAAQ,CACpC,IAAIkuC,EAAO//B,EAAM0B,KAAK,QACtB,GAAIq+B,EAAK5tC,MAAM,YAAa,CACxBoG,EAAEynC,iBACF7U,EAAW4U,IAKnB,GAAIp8B,GAAS,CACThH,EAAK8D,KAAK,iBAAiBxC,WAGnC,SAASgiC,IACL,IAAI15B,EAAQ0f,GAAU1f,MACtB0f,GAAYH,cAAcnpB,GAC1B,GAAI4J,IAAU0f,GAAU1f,MAAO,CAC3BuoB,GAAalb,OAAO,aAAcqS,GAAU1f,OAAOoO,WAG3DM,IACA,SAASA,IACL,GAAItY,EAAKgD,GAAG,YAAa,CACrB,IAAI4G,EAAQ6pB,GAAK7pB,QACjB,IAAI/E,EAAS4uB,GAAK5uB,SAElB,GAAIozB,KAAepzB,GAAUmzB,KAAcpuB,EAAO,CAC9C5J,EAAKsY,SAET2f,GAAapzB,EACbmzB,GAAYpuB,GAGpB,SAAS25B,IACLvjC,EAAKiD,QAAQ,UAAUA,QAAQqV,GAC/BskB,GAAa35B,QAAQ,UAAUA,QAAQ,WACnCqgC,IACAtjC,EAAKsY,WAGb,GAAItY,EAAKgD,GAAG,YAAa,CACrBugC,IAEJ,SAASC,IACL,GAAIjL,GAAqB,CACrB,GAAIA,GAAoB10B,UAAW,CAC/B00B,GAAoB10B,UAAU7D,EAAK,QAChC,CACHT,cAAcg5B,KAGtB,IAAIkL,EAAczjC,EAAKgH,UACvB,IAAIoR,EAAUpY,EAAKgD,GAAG,YACtB,GAAIoV,EAAS,CACTmrB,IAEJ,SAASG,IACL,GAAI1jC,EAAKgD,GAAG,cAAgBoV,EAAS,CACjCA,EAAU,KACVmrB,IACAD,IACAhrB,IACA,GAAImrB,EAAa,CACbzjC,EAAK+H,eAEN,GAAIqQ,IAAYpY,EAAKgD,GAAG,YAAa,CACxCoV,EAAU,MACVqrB,EAAchrC,EAAE6Z,SAASsT,WAAa5lB,GAAQA,EAAKgH,UACnDhH,EAAKgI,WAGb,GAAIlQ,OAAO6rC,qBAAsB,CAC7BpL,GAAsB,IAAIoL,qBAAqBD,EAAoB,CAC/DzrC,KAAMwD,SAASyG,OAEnBq2B,GAAoBr0B,QAAQlE,EAAK,QAC9B,CACHu4B,GAAsBp5B,YAAYukC,EAAoB,MAG9D,IAAIE,IAAW5jC,EAAK+K,QAAQ,QAAQ7V,OACpC,IAAI2uC,EAAgB/rC,OAAOgsC,kBAAoBhsC,OAAOisC,uBACtD,GAAIF,EAAe,CACfrL,GAAoB,IAAIqL,EAAc,WAClC,GAAI7jC,EAAK+K,QAAQ,QAAQ7V,OAAQ,CAC7B,IAAK0uC,EAAQ,CACT5jC,EAAK82B,mBACL,GAAIh/B,OAAO6rC,qBAAsB,CAC7BH,IAEJlrB,IAEJsrB,EAAS,UACN,GAAIA,EAAQ,CACfA,EAAS,SAGjBpL,GAAkBt0B,QAAQzI,SAASyG,KAAM,CAAC8hC,UAAW,OAEzD,GAAIJ,EAAQ,CAGRJ,IAEJ3L,GAAc1+B,UAEd,GAAI6N,IAAWhH,EAAKgD,GAAG,cAAgB0G,UAAW,CAC9C1J,EAAKsB,MAAMtJ,UAAW,UACnB,CACHgI,EAAKgI,UAIT,GAAIrN,YAAYy6B,IAAkB,CAC9Bp1B,EAAKkrB,MAAMkK,GAAiB,KAAMC,OAC/B,CACHA,IAIJ,SAAS4O,EAAU7lB,GACf,IAAI9L,EAAWgN,UAAUvlB,MAAMqkB,EAAK,IAEpC,GAAI9L,GAAYolB,IAAgBplB,EAAShJ,KAAM,CAC3C,IAAK8U,EAAK,GAAI,CACV6d,EAAM9iC,UACN,OAAO8iC,EAAM/S,eACV,GAAIuL,GAAQ,CACf,IAAIwH,EAAQxjC,EAAEsvB,WACdmM,EAAiBr+B,KAAK,WAClB,OAAOyc,EAASxb,KAAKsnB,EAAK,IAAI2I,KAAK,WAC/BzU,EAASyb,WAAW3P,EAAK,GAAI,KAAMA,EAAK,IACxC6d,EAAM9iC,cAGd,OAAO8iC,EAAM/S,cACV,CACH,OAAO5W,EAASxb,KAAKsnB,EAAK,IAAI2I,KAAK,WAC/BzU,EAASyb,WAAW3P,EAAK,GAAI,KAAMA,EAAK,QAMxD,GAAIhV,GAASgrB,SAAU,CACnB,GAAIL,SAASC,KAAM,CAEf1uB,WAAW,WACP,IACI,IAAI0uB,EAAOD,SAASC,KAAKjzB,QAAQ,KAAM,IAEvCitB,cAAgB9mB,KAAKvS,MAAMshC,mBAAmBjC,IAC9C,IAAI1+B,EAAI,GACR,SAAUw7B,IACN,IAAI1S,EAAO4P,cAAc14B,KACzB,GAAI8oB,EAAM,CACN6lB,EAAU7lB,GAAM2I,KAAK+J,OAClB,CACHlK,YAAc,OALtB,GAQF,MAAOhrB,WAIV,CACHgrB,YAAc,UAEf,CACHA,YAAc,MAKlB,WACI,IAAI7G,EAAQ,MACZtnB,EAAEgD,UAAUV,KAAK,oBAAsBiF,EAAKsJ,KAAM,SAAS1N,GACvD,GAAIA,EAAEuQ,SAAU,CACZ4T,EAAQ,QAEbhlB,KAAK,kBAAoBiF,EAAKsJ,KAAM,SAAS1N,GAE5C,GAAIA,EAAEuQ,UAAYvQ,EAAEud,QAAU,GAAI,CAC9B4G,EAAQ,SAMhB,SAASuiB,EAAWtoB,EAAOkqB,GACvB,IAAKnkB,EAAO,CACR,IAAImP,EAAc6B,GAAapsB,MAC/B,IAAItF,EACJ,GAAI1E,YAAYu0B,EAAYoT,YAAa,CACrCjjC,EAAM6vB,EAAYoT,WAAWtoB,EAAOkqB,EAAOlkC,QACxC,GAAIrF,YAAYyO,GAASk5B,YAAa,CACzCjjC,EAAM+J,GAASk5B,WAAWtoB,EAAOkqB,EAAOlkC,GAE5C,GAAIX,IAAQ,KAAM,CACd,OAEJ,GAAIi0B,KAAoBj0B,IAAQ,MAAO,CACnC2a,EAAMmqB,kBACNnqB,EAAMqpB,iBAEV,GAAIhkC,IAAQ,MAAO,CACf,OAAO,MAEX,GAAI6kC,EAAQ,EAAG,CACXlkC,EAAKkyB,QAAQ,QACV,CACHlyB,EAAKkyB,OAAO,MAIxB,GAAIz5B,EAAEuhB,MAAM0G,QAAQ4hB,WAAY,CAE5BtiC,EAAKmE,GAAG,aAAcm+B,OACnB,CAGH,IAAItoB,EACJ,IAAI/E,EAAMxZ,SAASghB,cAAc,OACjC,GAAI,YAAaxH,EAAK,CAClB+E,EAAQ,aACL,GAAIve,SAAS2oC,eAAiBpsC,UAAW,CAE5CgiB,EAAQ,iBACL,CAEHA,EAAQ,iBAEZ/E,EAAM,KACNjV,EAAKmE,GAAG6V,EAAO,SAASpe,GACpB,IAAIsoC,EACJ,GAAIlqB,IAAU,aAAc,CACxBkqB,GAAU,EAAI,GAAKtoC,EAAEgf,cAAcypB,eAChC,CACHH,EAAQtoC,EAAEgf,cAAc0pB,QAAU1oC,EAAEgf,cAAc2pB,OAEtDjC,EAAW1mC,GAAIsoC,OAlE3B,KAuEJlkC,EAAKwD,KAAK,WAAYxD,GACtB,OAAOA","sourcesContent":["/**@license\n *       __ _____                     ________                              __\n *      / // _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___  / /\n *  __ / // // // // // _  // _// // / / // _  // _//     // //  \\/ // _ \\/ /\n * /  / // // // // // ___// / / // / / // ___// / / / / // // /\\  // // / /__\n * \\___//____ \\\\___//____//_/ _\\_  / /_//____//_/ /_/ /_//_//_/ /_/ \\__\\_\\___/\n *           \\/              /____/                              version 2.0.1\n *\n * This file is part of jQuery Terminal. http://terminal.jcubic.pl\n *\n * Copyright (c) 2010-2018 Jakub Jankiewicz <http://jcubic.pl/me>\n * Released under the MIT license\n *\n * Contains:\n *\n * Storage plugin Distributed under the MIT License\n * modified to work from Data URIs that block storage and cookies in Chrome\n * Copyright (c) 2010 Dave Schindler\n *\n * jQuery Timers licenced with the WTFPL\n * <http://jquery.offput.ca/timers/>\n *\n * Cross-Browser Split 1.1.1\n * Copyright 2007-2012 Steven Levithan <stevenlevithan.com>\n * Available under the MIT License\n *\n * jQuery Caret\n * Copyright (c) 2009, Gideon Sireling\n * 3 clause BSD License\n *\n * sprintf.js\n * Copyright (c) 2007-2013 Alexandru Marasteanu <hello at alexei dot ro>\n * licensed under 3 clause BSD license\n *\n * emoji regex v7.0.1 by Mathias Bynens\n * MIT license\n *\n * Date: Sun, 18 Nov 2018 12:07:27 +0000\n */\n\n/* TODO:\n *\n * Debug interpreters names in LocalStorage\n *\n * TEST: login + promises/exec\n *       json-rpc/object + promises\n *\n * NOTE: json-rpc don't need promises and delegate resume/pause because only\n *       exec can call it and exec call interpreter that work with resume/pause\n */\n/* global location, jQuery, setTimeout, window, global, localStorage, sprintf,\n         setImmediate, IntersectionObserver, MutationObserver, ResizeObserver,\n         module, require, define, setInterval, clearInterval */\n/* eslint-disable */\n/* istanbul ignore next */\n(function(ctx) {\n    var sprintf = function() {\n        if (!sprintf.cache.hasOwnProperty(arguments[0])) {\n            sprintf.cache[arguments[0]] = sprintf.parse(arguments[0]);\n        }\n        return sprintf.format.call(null, sprintf.cache[arguments[0]], arguments);\n    };\n    sprintf.format = function(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, node_type = '', arg, output = [], i, k, match, pad, pad_character, pad_length;\n        for (i = 0; i < tree_length; i++) {\n            node_type = get_type(parse_tree[i]);\n            if (node_type === 'string') {\n                output.push(parse_tree[i]);\n            }\n            else if (node_type === 'array') {\n                match = parse_tree[i]; // convenience purposes only\n                if (match[2]) { // keyword argument\n                    arg = argv[cursor];\n                    for (k = 0; k < match[2].length; k++) {\n                        if (!arg.hasOwnProperty(match[2][k])) {\n                            throw(sprintf('[sprintf] property \"%s\" does not exist', match[2][k]));\n                        }\n                        arg = arg[match[2][k]];\n                    }\n                }\n                else if (match[1]) { // positional argument (explicit)\n                    arg = argv[match[1]];\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++];\n                }\n\n                if (/[^s]/.test(match[8]) && (get_type(arg) !== 'number')) {\n                    throw(sprintf('[sprintf] expecting number but found %s', get_type(arg)));\n                }\n                switch (match[8]) {\n                    case 'b': arg = arg.toString(2); break;\n                    case 'c': arg = String.fromCharCode(arg); break;\n                    case 'd': arg = parseInt(arg, 10); break;\n                    case 'e': arg = match[7] ? arg.toExponential(match[7]) : arg.toExponential(); break;\n                    case 'f': arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg); break;\n                    case 'o': arg = arg.toString(8); break;\n                    case 's': arg = ((arg = String(arg)) && match[7] ? arg.substring(0, match[7]) : arg); break;\n                    case 'u': arg = arg >>> 0; break;\n                    case 'x': arg = arg.toString(16); break;\n                    case 'X': arg = arg.toString(16).toUpperCase(); break;\n                }\n                arg = (/[def]/.test(match[8]) && match[3] && arg >= 0 ? ' +' + arg : arg);\n                pad_character = match[4] ? match[4] === '0' ? '0' : match[4].charAt(1) : ' ';\n                pad_length = match[6] - String(arg).length;\n                pad = match[6] ? str_repeat(pad_character, pad_length) : '';\n                output.push(match[5] ? arg + pad : pad + arg);\n            }\n        }\n        return output.join('');\n    };\n\n    sprintf.cache = {};\n\n    sprintf.parse = function(fmt) {\n        var _fmt = fmt, match = [], parse_tree = [], arg_names = 0;\n        while (_fmt) {\n            if ((match = /^[^\\x25]+/.exec(_fmt)) !== null) {\n                parse_tree.push(match[0]);\n            }\n            else if ((match = /^\\x25{2}/.exec(_fmt)) !== null) {\n                parse_tree.push('%');\n            }\n            else if ((match = /^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-fosuxX])/.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1;\n                    var field_list = [], replacement_field = match[2], field_match = [];\n                    if ((field_match = /^([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1]);\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = /^\\.([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1]);\n                            }\n                            else if ((field_match = /^\\[(\\d+)\\]/.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1]);\n                            }\n                            else {\n                                throw('[sprintf] huh?');\n                            }\n                        }\n                    }\n                    else {\n                        throw('[sprintf] huh?');\n                    }\n                    match[2] = field_list;\n                }\n                else {\n                    arg_names |= 2;\n                }\n                if (arg_names === 3) {\n                    throw('[sprintf] mixing positional and named placeholders is not (yet) supported');\n                }\n                parse_tree.push(match);\n            }\n            else {\n                throw('[sprintf] huh?');\n            }\n            _fmt = _fmt.substring(match[0].length);\n        }\n        return parse_tree;\n    };\n\n    var vsprintf = function(fmt, argv, _argv) {\n        _argv = argv.slice(0);\n        _argv.splice(0, 0, fmt);\n        return sprintf.apply(null, _argv);\n    };\n\n    /**\n     * helpers\n     */\n    function get_type(variable) {\n        return Object.prototype.toString.call(variable).slice(8, -1).toLowerCase();\n    }\n\n    function str_repeat(input, multiplier) {\n        for (var output = []; multiplier > 0; output[--multiplier] = input) {/* do nothing */}\n        return output.join('');\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    ctx.sprintf = sprintf;\n    ctx.vsprintf = vsprintf;\n})(typeof global !== \"undefined\" ? global : window);\n/* eslint-enable */\n// UMD taken from https://github.com/umdjs/umd\n(function(factory, undefined) {\n    var root = typeof window !== 'undefined' ? window : global;\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        // istanbul ignore next\n        define(['jquery', 'wcwidth'], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node/CommonJS\n        module.exports = function(root, jQuery, wcwidth) {\n            if (jQuery === undefined) {\n                // require('jQuery') returns a factory that requires window to\n                // build a jQuery instance, we normalize how we use modules\n                // that require this pattern but the window provided is a noop\n                // if it's defined (how jquery works)\n                if (window !== undefined) {\n                    jQuery = require('jquery');\n                } else {\n                    jQuery = require('jquery')(root);\n                }\n            }\n            if (wcwidth === undefined) {\n                wcwidth = require('wcwidth');\n            }\n            factory(jQuery, wcwidth);\n            return jQuery;\n        };\n    } else {\n        // Browser\n        // istanbul ignore next\n        factory(root.jQuery, root.wcwidth);\n    }\n})(function($, wcwidth, undefined) {\n    'use strict';\n    // -----------------------------------------------------------------------\n    // :: debug functions\n    // -----------------------------------------------------------------------\n    /* eslint-disable */\n    function debug(str) {\n        if (false) {\n            console.log(str);\n            //$.terminal.active().echo(str);\n        }\n    }\n    /* eslint-enable */\n    // -----------------------------------------------------------------------\n    // :: Replacemenet for jQuery 2 deferred objects\n    // -----------------------------------------------------------------------\n    function DelayQueue() {\n        var callbacks = $.Callbacks();\n        var resolved = false;\n        this.resolve = function() {\n            callbacks.fire();\n            resolved = true;\n        };\n        this.add = function(fn) {\n            if (resolved) {\n                fn();\n            } else {\n                callbacks.add(fn);\n            }\n        };\n    }\n    // -----------------------------------------------------------------------\n    // :: map object to object\n    // -----------------------------------------------------------------------\n    $.omap = function(o, fn) {\n        var result = {};\n        $.each(o, function(k, v) {\n            result[k] = fn.call(o, k, v);\n        });\n        return result;\n    };\n    $.fn.text_length = function() {\n        return this.map(function() {\n            return $(this).text().length;\n        }).get().reduce(function(a, b) {\n            return a + b;\n        }, 0);\n    };\n    // -----------------------------------------------------------------------\n    // :: Deep clone of objects and arrays\n    // -----------------------------------------------------------------------\n    var Clone = {\n        clone_object: function(object) {\n            var tmp = {};\n            if (typeof object === 'object') {\n                if ($.isArray(object)) {\n                    return this.clone_array(object);\n                } else if (object === null) {\n                    return object;\n                } else {\n                    for (var key in object) {\n                        if ($.isArray(object[key])) {\n                            tmp[key] = this.clone_array(object[key]);\n                        } else if (typeof object[key] === 'object') {\n                            tmp[key] = this.clone_object(object[key]);\n                        } else {\n                            tmp[key] = object[key];\n                        }\n                    }\n                }\n            }\n            return tmp;\n        },\n        clone_array: function(array) {\n            if (!is_function(Array.prototype.map)) {\n                throw new Error(\"Your browser don't support ES5 array map \" +\n                                'use es5-shim');\n            }\n            return array.slice(0).map(function(item) {\n                if (typeof item === 'object') {\n                    return this.clone_object(item);\n                } else {\n                    return item;\n                }\n            }.bind(this));\n        }\n    };\n    var clone = function(object) {\n        return Clone.clone_object(object);\n    };\n\n    /* eslint-disable */\n    // -----------------------------------------------------------------------\n    // :: Storage plugin\n    // -----------------------------------------------------------------------\n    var localStorage;\n    /* istanbul ignore next */\n    (function() {\n        var hasLS = function() {\n            try {\n                var testKey = 'test', storage = window.localStorage;\n                storage.setItem(testKey, '1');\n                storage.removeItem(testKey);\n                return true;\n            } catch (error) {\n                return false;\n            }\n        };\n        var hasCookies = function() {\n            try {\n                document.cookie.split(';');\n                return true;\n            } catch (e) {\n                return false;\n            }\n        };\n        // Private data\n        var isLS = hasLS();\n        // Private functions\n        function wls(n, v) {\n            var c;\n            if (typeof n === 'string' && typeof v === 'string') {\n                localStorage[n] = v;\n                return true;\n            } else if (typeof n === 'object' && typeof v === 'undefined') {\n                for (c in n) {\n                    if (n.hasOwnProperty(c)) {\n                        localStorage[c] = n[c];\n                    }\n                }\n                return true;\n            }\n            return false;\n        }\n        function wc(n, v) {\n            var dt, e, c;\n            dt = new Date();\n            dt.setTime(dt.getTime() + 31536000000);\n            e = '; expires=' + dt.toGMTString();\n            if (typeof n === 'string' && typeof v === 'string') {\n                document.cookie = n + '=' + v + e + '; path=/';\n                return true;\n            } else if (typeof n === 'object' && typeof v === 'undefined') {\n                for (c in n) {\n                    if (n.hasOwnProperty(c)) {\n                        document.cookie = c + '=' + n[c] + e + '; path=/';\n                    }\n                }\n                return true;\n            }\n            return false;\n        }\n        function rls(n) {\n            return localStorage[n];\n        }\n        function rc(n) {\n            var nn, ca, i, c;\n            nn = n + '=';\n            ca = document.cookie.split(';');\n            for (i = 0; i < ca.length; i++) {\n                c = ca[i];\n                while (c.charAt(0) === ' ') {\n                    c = c.substring(1, c.length);\n                }\n                if (c.indexOf(nn) === 0) {\n                    return c.substring(nn.length, c.length);\n                }\n            }\n            return null;\n        }\n        function dls(n) {\n            return delete localStorage[n];\n        }\n        function dc(n) {\n            return wc(n, '', -1);\n        }\n        /**\n         * Public API\n         * $.Storage.set(\"name\", \"value\")\n         * $.Storage.set({\"name1\":\"value1\", \"name2\":\"value2\", etc})\n         * $.Storage.get(\"name\")\n         * $.Storage.remove(\"name\")\n         */\n        if (!hasCookies() && !isLS) {\n            localStorage = {};\n            $.extend({\n                Storage: {\n                    set: wls,\n                    get: rls,\n                    remove: dls\n                }\n            });\n        } else {\n            if (isLS) {\n                localStorage = window.localStorage;\n            }\n            $.extend({\n                Storage: {\n                    set: isLS ? wls : wc,\n                    get: isLS ? rls : rc,\n                    remove: isLS ? dls : dc\n                }\n            });\n        }\n    })();\n    // -----------------------------------------------------------------------\n    // :: jQuery Timers\n    // -----------------------------------------------------------------------\n    var jQuery = $;\n    /* istanbul ignore next */\n    (function($) {\n        jQuery.fn.extend({\n            everyTime: function(interval, label, fn, times, belay) {\n                return this.each(function() {\n                    jQuery.timer.add(this, interval, label, fn, times, belay);\n                });\n            },\n            oneTime: function(interval, label, fn) {\n                return this.each(function() {\n                    jQuery.timer.add(this, interval, label, fn, 1);\n                });\n            },\n            stopTime: function(label, fn) {\n                return this.each(function() {\n                    jQuery.timer.remove(this, label, fn);\n                });\n            }\n        });\n\n        jQuery.extend({\n            timer: {\n                guid: 1,\n                global: {},\n                regex: /^([0-9]+)\\s*(.*s)?$/,\n                powers: {\n                    // Yeah this is major overkill...\n                    'ms': 1,\n                    'cs': 10,\n                    'ds': 100,\n                    's': 1000,\n                    'das': 10000,\n                    'hs': 100000,\n                    'ks': 1000000\n                },\n                timeParse: function(value) {\n                    if (value === undefined || value === null) {\n                        return null;\n                    }\n                    var result = this.regex.exec(jQuery.trim(value.toString()));\n                    if (result[2]) {\n                        var num = parseInt(result[1], 10);\n                        var mult = this.powers[result[2]] || 1;\n                        return num * mult;\n                    } else {\n                        return value;\n                    }\n                },\n                add: function(element, interval, label, fn, times, belay) {\n                    var counter = 0;\n\n                    if (jQuery.isFunction(label)) {\n                        if (!times) {\n                            times = fn;\n                        }\n                        fn = label;\n                        label = interval;\n                    }\n\n                    interval = jQuery.timer.timeParse(interval);\n\n                    if (typeof interval !== 'number' ||\n                        isNaN(interval) ||\n                        interval <= 0) {\n                        return;\n                    }\n                    if (times && times.constructor !== Number) {\n                        belay = !!times;\n                        times = 0;\n                    }\n\n                    times = times || 0;\n                    belay = belay || false;\n\n                    if (!element.$timers) {\n                        element.$timers = {};\n                    }\n                    if (!element.$timers[label]) {\n                        element.$timers[label] = {};\n                    }\n                    fn.$timerID = fn.$timerID || this.guid++;\n\n                    var handler = function() {\n                        if (belay && handler.inProgress) {\n                            return;\n                        }\n                        handler.inProgress = true;\n                        if ((++counter > times && times !== 0) ||\n                            fn.call(element, counter) === false) {\n                            jQuery.timer.remove(element, label, fn);\n                        }\n                        handler.inProgress = false;\n                    };\n\n                    handler.$timerID = fn.$timerID;\n\n                    if (!element.$timers[label][fn.$timerID]) {\n                        element.$timers[label][fn.$timerID] = window.setInterval(handler, interval);\n                    }\n\n                    if (!this.global[label]) {\n                        this.global[label] = [];\n                    }\n                    this.global[label].push(element);\n\n                },\n                remove: function(element, label, fn) {\n                    var timers = element.$timers, ret;\n\n                    if (timers) {\n\n                        if (!label) {\n                            for (var lab in timers) {\n                                if (timers.hasOwnProperty(lab)) {\n                                    this.remove(element, lab, fn);\n                                }\n                            }\n                        } else if (timers[label]) {\n                            if (fn) {\n                                if (fn.$timerID) {\n                                    window.clearInterval(timers[label][fn.$timerID]);\n                                    delete timers[label][fn.$timerID];\n                                }\n                            } else {\n                                for (var _fn in timers[label]) {\n                                    if (timers[label].hasOwnProperty(_fn)) {\n                                        window.clearInterval(timers[label][_fn]);\n                                        delete timers[label][_fn];\n                                    }\n                                }\n                            }\n\n                            for (ret in timers[label]) {\n                                if (timers[label].hasOwnProperty(ret)) {\n                                    break;\n                                }\n                            }\n                            if (!ret) {\n                                ret = null;\n                                delete timers[label];\n                            }\n                        }\n\n                        for (ret in timers) {\n                            if (timers.hasOwnProperty(ret)) {\n                                break;\n                            }\n                        }\n                        if (!ret) {\n                            element.$timers = null;\n                        }\n                    }\n                }\n            }\n        });\n        if (/(msie) ([\\w.]+)/.exec(navigator.userAgent.toLowerCase())) {\n            $(window).one('unload', function() {\n                var global = jQuery.timer.global;\n                for (var label in global) {\n                    if (global.hasOwnProperty(label)) {\n                        var els = global[label], i = els.length;\n                        while (--i) {\n                            jQuery.timer.remove(els[i], label);\n                        }\n                    }\n                }\n            });\n        }\n    })(jQuery);\n    // -----------------------------------------------------------------------\n    // :: CROSS BROWSER SPLIT\n    // -----------------------------------------------------------------------\n    /* istanbul ignore next */\n    (function(undef) {\n\n        // prevent double include\n\n        if (!String.prototype.split.toString().match(/\\[native/)) {\n            return;\n        }\n\n        var nativeSplit = String.prototype.split,\n        compliantExecNpcg = /()??/.exec(\"\")[1] === undef, // NPCG: nonparticipating capturing group\n        self;\n\n        self = function(str, separator, limit) {\n            // If `separator` is not a regex, use `nativeSplit`\n            if (Object.prototype.toString.call(separator) !== \"[object RegExp]\") {\n                return nativeSplit.call(str, separator, limit);\n            }\n            var output = [],\n            flags = (separator.ignoreCase ? \"i\" : \"\") +\n                (separator.multiline  ? \"m\" : \"\") +\n                (separator.extended   ? \"x\" : \"\") + // Proposed for ES6\n                (separator.sticky     ? \"y\" : \"\"), // Firefox 3+\n                lastLastIndex = 0,\n            // Make `global` and avoid `lastIndex` issues by working with a copy\n            separator2, match, lastIndex, lastLength;\n            separator = new RegExp(separator.source, flags + \"g\");\n            str += \"\"; // Type-convert\n            if (!compliantExecNpcg) {\n                // Doesn't need flags gy, but they don't hurt\n                separator2 = new RegExp(\"^\" + separator.source + \"$(?!\\\\s)\", flags);\n            }\n            /* Values for `limit`, per the spec:\n             * If undefined: 4294967295 // Math.pow(2, 32) - 1\n             * If 0, Infinity, or NaN: 0\n             * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\n             * If negative number: 4294967296 - Math.floor(Math.abs(limit))\n             * If other: Type-convert, then use the above rules\n             */\n            // ? Math.pow(2, 32) - 1 : ToUint32(limit)\n            limit = limit === undef ? -1 >>> 0 : limit >>> 0;\n            while (match = separator.exec(str)) {\n                    // `separator.lastIndex` is not reliable cross-browser\n                    lastIndex = match.index + match[0].length;\n                    if (lastIndex > lastLastIndex) {\n                        output.push(str.slice(lastLastIndex, match.index));\n                        // Fix browsers whose `exec` methods don't consistently return `undefined` for\n                        // nonparticipating capturing groups\n                        if (!compliantExecNpcg && match.length > 1) {\n                            match[0].replace(separator2, function() {\n                                for (var i = 1; i < arguments.length - 2; i++) {\n                                    if (arguments[i] === undef) {\n                                        match[i] = undef;\n                                    }\n                                }\n                            });\n                        }\n                        if (match.length > 1 && match.index < str.length) {\n                            Array.prototype.push.apply(output, match.slice(1));\n                        }\n                        lastLength = match[0].length;\n                        lastLastIndex = lastIndex;\n                        if (output.length >= limit) {\n                            break;\n                        }\n                    }\n                    if (separator.lastIndex === match.index) {\n                        separator.lastIndex++; // Avoid an infinite loop\n                    }\n                }\n            if (lastLastIndex === str.length) {\n                if (lastLength || !separator.test(\"\")) {\n                    output.push(\"\");\n                }\n            } else {\n                output.push(str.slice(lastLastIndex));\n            }\n            return output.length > limit ? output.slice(0, limit) : output;\n        };\n\n        // For convenience\n        String.prototype.split = function(separator, limit) {\n            return self(this, separator, limit);\n        };\n\n        return self;\n\n    })();\n    // -----------------------------------------------------------------------\n    // :: jQuery Caret\n    // -----------------------------------------------------------------------\n    /* istanbul ignore next */\n    $.fn.caret = function(pos) {\n        var target = this[0];\n        var isContentEditable = target.contentEditable === 'true';\n        //get\n        if (arguments.length === 0) {\n            //HTML5\n            if (window.getSelection) {\n                //contenteditable\n                if (isContentEditable) {\n                    target.focus();\n                    var range1 = window.getSelection().getRangeAt(0),\n                    range2 = range1.cloneRange();\n                    range2.selectNodeContents(target);\n                    range2.setEnd(range1.endContainer, range1.endOffset);\n                    return range2.toString().length;\n                }\n                //textarea\n                return target.selectionStart;\n            }\n            //IE<9\n            if (document.selection) {\n                target.focus();\n                //contenteditable\n                if (isContentEditable) {\n                    var range1 = document.selection.createRange(),\n                    range2 = document.body.createTextRange();\n                    range2.moveToElementText(target);\n                    range2.setEndPoint('EndToEnd', range1);\n                    return range2.text.length;\n                }\n                //textarea\n                var pos = 0,\n                range = target.createTextRange(),\n                range2 = document.selection.createRange().duplicate(),\n                bookmark = range2.getBookmark();\n                range.moveToBookmark(bookmark);\n                while (range.moveStart('character', -1) !== 0) pos++;\n                return pos;\n            }\n            //not supported\n            return 0;\n        }\n        //set\n        if (pos === -1)\n            pos = this[isContentEditable? 'text' : 'val']().length;\n        //HTML5\n        if (window.getSelection) {\n            //contenteditable\n            if (isContentEditable) {\n                target.focus();\n                window.getSelection().collapse(target.firstChild, pos);\n            }\n            //textarea\n            else\n                target.setSelectionRange(pos, pos);\n        }\n        //IE<9\n        else if (document.body.createTextRange) {\n            var range = document.body.createTextRange();\n            range.moveToElementText(target);\n            range.moveStart('character', pos);\n            range.collapse(true);\n            range.select();\n        }\n        if (!isContentEditable && !this.is(':focus')) {\n            target.focus();\n        }\n        return pos;\n    };\n    /* eslint-enable */\n    // -----------------------------------------------------------------------\n    // :: Cross-browser resize element plugin using sentinel iframe or\n    // :: resizeObserver\n    // -----------------------------------------------------------------------\n    $.fn.resizer = function(callback) {\n        var trigger = arguments.length === 0;\n        var unbind = arguments[0] === \"unbind\";\n        if (!trigger && !unbind && !is_function(callback)) {\n            throw new Error('Invalid argument, it need to a function or string ' +\n                            '\"unbind\" or no arguments.');\n        }\n        if (unbind) {\n            callback = is_function(arguments[1]) ? arguments[1] : null;\n        }\n        return this.each(function() {\n            var $this = $(this);\n            var iframe;\n            var callbacks;\n            function resize_handler() {\n                callbacks.fire();\n            }\n            if (trigger || unbind) {\n                callbacks = $this.data('callbacks');\n                if (trigger) {\n                    callbacks && callbacks.fire();\n                } else {\n                    if (callback && callbacks) {\n                        callbacks.remove(callback);\n                        if (!callbacks.has()) {\n                            callbacks = null;\n                        }\n                    } else {\n                        callbacks = null;\n                    }\n                    if (!callbacks) {\n                        $this.removeData('callbacks');\n                        if (window.ResizeObserver) {\n                            var observer = $this.data('observer');\n                            if (observer) {\n                                observer.unobserve(this);\n                                $this.removeData('observer');\n                            }\n                        } else {\n                            iframe = $this.find('> iframe');\n                            if (iframe.length) {\n                                // just in case of memory leaks in IE\n                                $(iframe[0].contentWindow).off('resize').remove();\n                                iframe.remove();\n                            } else if ($this.is('body')) {\n                                $(window).off('resize.resizer');\n                            }\n                        }\n                    }\n                }\n            } else if ($this.data('callbacks')) {\n                $(this).data('callbacks').add(callback);\n            } else {\n                callbacks = $.Callbacks();\n                callbacks.add(callback);\n                $this.data('callbacks', callbacks);\n                var resizer;\n                var first = true;\n                if (window.ResizeObserver) {\n                    resizer = new ResizeObserver(function() {\n                        if (!first) {\n                            resize_handler();\n                        }\n                        first = false;\n                    });\n                    resizer.observe(this);\n                    $this.data('observer', resizer);\n                } else if ($this.is('body')) {\n                    $(window).on('resize.resizer', resize_handler);\n                } else {\n                    iframe = $('<iframe/>').addClass('resizer').appendTo(this)[0];\n\n                    $(iframe.contentWindow).on('resize', resize_handler);\n                }\n            }\n        });\n    };\n    // -----------------------------------------------------------------------\n    // :: based on https://github.com/zeusdeux/isInViewport\n    // :: work only vertically and on dom elements\n    // -----------------------------------------------------------------------\n    $.fn.isFullyInViewport = function(container) {\n        var box = this[0].getBoundingClientRect();\n        var viewport = container[0].getBoundingClientRect();\n        var top = box.top - viewport.top;\n        var bottom = box.bottom - viewport.top;\n        var height = container.height();\n        return bottom > 0 && top <= height;\n    };\n    // -----------------------------------------------------------------------\n    // :: hide elements from screen readers\n    // -----------------------------------------------------------------------\n    function a11y_hide(element) {\n        element.attr({\n            role: 'presentation',\n            'aria-hidden': 'true'\n        });\n    }\n    // ---------------------------------------------------------------------\n    // :: alert only first exception of type\n    // ---------------------------------------------------------------------\n    var excepctions = [];\n    function alert_exception(label, e) {\n        var message = (label ? label + ': ' : '') + exception_message(e);\n        if (excepctions.indexOf(message) === -1) {\n            excepctions.push(message);\n            setTimeout(function() {\n                throw e;\n            }, 0);\n            //alert(message + (e.stack ? '\\n' + e.stack : ''));\n        }\n    }\n    // ---------------------------------------------------------------------\n    // :; detect if mouse event happen on scrollbar\n    // ---------------------------------------------------------------------\n    function scrollbar_event(e, node) {\n        var left = node.offset().left;\n        return node.outerWidth() <= e.clientX - left;\n    }\n    // ---------------------------------------------------------------------\n    // :: Return exception message as string\n    // ---------------------------------------------------------------------\n    function exception_message(e) {\n        if (typeof e === 'string') {\n            return e;\n        } else if (typeof e.fileName === 'string') {\n            return e.fileName + ': ' + e.message;\n        } else {\n            return e.message;\n        }\n    }\n    // -----------------------------------------------------------------------\n    // :: CYCLE DATA STRUCTURE\n    // -----------------------------------------------------------------------\n    function Cycle() {\n        var data = [].slice.call(arguments);\n        var pos = 0;\n        $.extend(this, {\n            get: function() {\n                return data;\n            },\n            index: function() {\n                return pos;\n            },\n            rotate: function(skip, init) {\n                if (init === undefined) {\n                    init = pos;\n                } else if (init === pos) {\n                    return;\n                }\n                if (!skip) {\n                    var defined = data.filter(function(item) {\n                        return typeof item !== 'undefined';\n                    });\n                    if (!defined.length) {\n                        return;\n                    }\n                }\n                if (!data.length) {\n                    return;\n                }\n                if (data.length === 1) {\n                    return data[0];\n                } else {\n                    if (pos === data.length - 1) {\n                        pos = 0;\n                    } else {\n                        ++pos;\n                    }\n                    if (typeof data[pos] !== 'undefined') {\n                        return data[pos];\n                    } else {\n                        return this.rotate(true, init);\n                    }\n                }\n            },\n            length: function() {\n                return data.length;\n            },\n            remove: function(index) {\n                delete data[index];\n            },\n            set: function(item) {\n                for (var i = data.length; i--;) {\n                    if (data[i] === item) {\n                        pos = i;\n                        return;\n                    }\n                }\n                this.append(item);\n                pos = data.length - 1;\n            },\n            front: function() {\n                if (data.length) {\n                    var index = pos;\n                    var restart = false;\n                    while (!data[index]) {\n                        index++;\n                        if (index > data.length) {\n                            if (restart) {\n                                break;\n                            }\n                            index = 0;\n                            restart = true;\n                        }\n                    }\n                    return data[index];\n                }\n            },\n            map: function(fn) {\n                return data.map(function(item, i) {\n                    if (typeof item !== 'undefined') {\n                        return fn(item, i);\n                    }\n                    return null;\n                }).filter(Boolean);\n            },\n            forEach: function(fn) {\n                return data.forEach(function(item, i) {\n                    if (typeof item !== 'undefined') {\n                        fn(item, i);\n                    }\n                });\n            },\n            append: function(item) {\n                data.push(item);\n            }\n        });\n    }\n    // -----------------------------------------------------------------------\n    // :: STACK DATA STRUCTURE\n    // -----------------------------------------------------------------------\n    function Stack(init) {\n        var data = init instanceof Array ? init : init ? [init] : [];\n        $.extend(this, {\n            data: function() {\n                return data;\n            },\n            map: function(fn) {\n                return $.map(data, fn);\n            },\n            size: function() {\n                return data.length;\n            },\n            pop: function() {\n                if (data.length === 0) {\n                    return null;\n                } else {\n                    var value = data[data.length - 1];\n                    data = data.slice(0, data.length - 1);\n                    return value;\n                }\n            },\n            push: function(value) {\n                data = data.concat([value]);\n                return value;\n            },\n            top: function() {\n                return data.length > 0 ? data[data.length - 1] : null;\n            },\n            clone: function() {\n                return new Stack(data.slice(0));\n            }\n        });\n    }\n    // -------------------------------------------------------------------------\n    // :: HISTORY CLASS\n    // -------------------------------------------------------------------------\n    function History(name, size, memory) {\n        var enabled = true;\n        var storage_key = '';\n        if (typeof name === 'string' && name !== '') {\n            storage_key = name + '_';\n        }\n        storage_key += 'commands';\n        var data;\n        if (memory) {\n            data = [];\n        } else {\n            data = $.Storage.get(storage_key);\n            data = data ? JSON.parse(data) : [];\n        }\n        var pos = data.length - 1;\n        $.extend(this, {\n            append: function(item) {\n                if (enabled) {\n                    if (data[data.length - 1] !== item) {\n                        data.push(item);\n                        if (size && data.length > size) {\n                            data = data.slice(-size);\n                        }\n                        pos = data.length - 1;\n                        if (!memory) {\n                            $.Storage.set(storage_key, JSON.stringify(data));\n                        }\n                    }\n                }\n            },\n            set: function(new_data) {\n                if (new_data instanceof Array) {\n                    data = new_data;\n                    if (!memory) {\n                        $.Storage.set(storage_key, JSON.stringify(data));\n                    }\n                }\n            },\n            data: function() {\n                return data;\n            },\n            reset: function() {\n                pos = data.length - 1;\n            },\n            last: function() {\n                return data[data.length - 1];\n            },\n            end: function() {\n                return pos === data.length - 1;\n            },\n            position: function() {\n                return pos;\n            },\n            current: function() {\n                return data[pos];\n            },\n            next: function() {\n                var old = pos;\n                if (pos < data.length - 1) {\n                    ++pos;\n                }\n                if (old !== pos) {\n                    return data[pos];\n                }\n            },\n            previous: function() {\n                var old = pos;\n                if (pos > 0) {\n                    --pos;\n                }\n                if (old !== pos) {\n                    return data[pos];\n                }\n            },\n            clear: function() {\n                data = [];\n                this.purge();\n            },\n            enabled: function() {\n                return enabled;\n            },\n            enable: function() {\n                enabled = true;\n            },\n            purge: function() {\n                if (!memory) {\n                    $.Storage.remove(storage_key);\n                }\n            },\n            disable: function() {\n                enabled = false;\n            },\n            toggle: function(value) {\n                if (typeof value === 'undefined') {\n                    enabled = !enabled;\n                } else {\n                    enabled = value;\n                }\n            }\n        });\n    }\n    // -------------------------------------------------------------------------\n    // :: COMMAND LINE PLUGIN\n    // -------------------------------------------------------------------------\n    var cmd_index = 0;\n    $.cmd = {\n        defaults: {\n            mask: false,\n            caseSensitiveSearch: true,\n            historySize: 60,\n            prompt: '> ',\n            enabled: true,\n            history: true,\n            onPositionChange: $.noop,\n            onCommandChange: $.noop,\n            clickTimeout: 200,\n            holdTimeout: 400,\n            holdRepeatTimeout: 200,\n            repeatTimeoutKeys: ['HOLD+BACKSPACE'],\n            tabindex: 1,\n            tabs: 4\n        }\n    };\n    $.fn.cmd = function(options) {\n        var settings = $.extend({}, $.cmd.defaults, options);\n        var self = this;\n        var maybe_data = self.data('cmd');\n        if (maybe_data) {\n            return maybe_data;\n        }\n        var id = cmd_index++;\n        self.addClass('cmd');\n        self.append('<span class=\"prompt\"></span>');\n        self.append('<div class=\"cursor-line\">' +\n                    '<span></span>' +\n                    '<span class=\"cursor\"><span><span>&nbsp;</span></span></span>' +\n                    '<span></span>' +\n                    '</div>');\n        // a11y: don't read command it's in textarea that's in focus\n        a11y_hide(self.find('.cursor-line'));\n        // on mobile the only way to hide textarea on desktop it's needed because\n        // textarea show up after focus\n        //self.append('<span class=\"mask\"></mask>');\n        var clip = $('<textarea>').attr({\n            autocapitalize: 'off',\n            spellcheck: 'false',\n            tabindex: settings.tabindex\n        }).addClass('clipboard').appendTo(self);\n        if (!is_mobile) {\n            clip.val(' ');\n        }\n        if (settings.width) {\n            self.width(settings.width);\n        }\n        var num_chars; // calculated by resize\n        var char_width;\n        var last_rendered_prompt;\n        var prompt_last_line;\n        var prompt_len;\n        var prompt_node = self.find('.prompt');\n        var reverse_search = false;\n        var rev_search_str = '';\n        var reverse_search_position = null;\n        var backup_prompt;\n        var command = '';\n        var last_command;\n        // text from selection using CTRL+SHIFT+C (as in Xterm)\n        var kill_text = ''; // text from command that kill part of the command\n        var position = 0;\n        var prompt;\n        var enabled;\n        var formatted_position = 0;\n        var name, history;\n        var cursor = self.find('.cursor');\n        var animation;\n        var restart_animation;\n        var paste_count = 0;\n        function get_char_pos(e) {\n            var node = $(e.target);\n            if (node.is('span')) {\n                node = node.closest('[data-text]');\n                return node.index() +\n                    node.parent('span').prevAll().find('[data-text]').length +\n                    node.closest('[role=\"presentation\"]')\n                        .prevUntil('.prompt').find('[data-text]').length;\n            } else if (node.is('div[role=\"presentation\"]')) {\n                var last = !node.nextUntil('textarea').length;\n                return node.find('span[data-text]').length +\n                    node.prevUntil('.prompt').find('span[data-text]').length -\n                    (last ? 0 : 1);\n            }\n        }\n        // IE mapping\n        var key_mapping = {\n            'SPACEBAR': ' ',\n            'UP': 'ARROWUP',\n            'DOWN': 'ARROWDOWN',\n            'LEFT': 'ARROWLEFT',\n            'RIGHT': 'ARROWRIGHT',\n            'DEL': 'DELETE',\n            'MULTIPLY': '*',\n            'DIVIDE': '/',\n            'SUBTRACT': '-',\n            'ADD': '+'\n        };\n        function get_key(e) {\n            if (e.key) {\n                var key = e.key.toUpperCase();\n                if (key_mapping[key]) {\n                    key = key_mapping[key];\n                }\n                if (key === 'CONTROL') {\n                    return 'CTRL';\n                } else {\n                    var combo = [];\n                    if (e.ctrlKey) {\n                        combo.push('CTRL');\n                    }\n                    if (e.metaKey && key !== 'META') {\n                        combo.push('META');\n                    }\n                    if (e.shiftKey && key !== 'SHIFT') {\n                        combo.push('SHIFT');\n                    }\n                    if (e.altKey && key !== 'ALT') {\n                        combo.push('ALT');\n                    }\n                    if (combo.length && key === ' ') {\n                        key = 'SPACEBAR';\n                    }\n                    if (e.key) {\n                        combo.push(key);\n                    }\n                    return combo.join('+');\n                }\n            }\n        }\n        var keymap;\n        var default_keymap = {\n            'ALT+D': delete_word(true),\n            'HOLD+DELETE': delete_word(false),\n            'HOLD+SHIFT+DELETE': delete_word(false),\n            'ENTER': function() {\n                if (history && command && !settings.mask &&\n                    ((is_function(settings.historyFilter) &&\n                      settings.historyFilter(command)) ||\n                     (settings.historyFilter instanceof RegExp &&\n                      command.match(settings.historyFilter)) ||\n                     !settings.historyFilter)) {\n                    history.append(command);\n                }\n                var tmp = command;\n                history.reset();\n\n                // for next input event on firefox/android with google keyboard\n                prev_command = '';\n                no_keydown = true;\n\n                self.set('');\n                if (settings.commands) {\n                    settings.commands.call(self, tmp);\n                }\n                if (is_function(prompt)) {\n                    draw_prompt();\n                }\n                clip.val('');\n                return false;\n            },\n            'SHIFT+ENTER': function() {\n                self.insert('\\n');\n                return true;\n            },\n            'BACKSPACE': backspace_key,\n            'SHIFT+BACKSPACE': backspace_key,\n            'TAB': function() {\n                self.insert('\\t');\n            },\n            'CTRL+D': function() {\n                self['delete'](1);\n                return false;\n            },\n            'DELETE': function() {\n                self['delete'](1);\n                return true;\n            },\n            'ARROWUP': prev_history,\n            'CTRL+P': prev_history,\n            'ARROWDOWN': next_history,\n            'CTRL+N': next_history,\n            'ARROWLEFT': left,\n            'HOLD+ARROWLEFT': left,\n            'CTRL+B': left,\n            'CTRL+ARROWLEFT': function() {\n                // jump to one character after last space before prevoius word\n                var len = position - 1;\n                var pos = 0;\n                if (command[len] === ' ') {\n                    --len;\n                }\n                for (var i = len; i > 0; --i) {\n                    if (command[i] === ' ' && command[i + 1] !== ' ') {\n                        pos = i + 1;\n                        break;\n                    } else if (command[i] === '\\n' &&\n                               command[i + 1] !== '\\n') {\n                        pos = i;\n                        break;\n                    }\n                }\n                self.position(pos);\n            },\n            'CTRL+R': function() {\n                if (reverse_search) {\n                    reverse_history_search(true);\n                } else {\n                    backup_prompt = prompt;\n                    draw_reverse_prompt();\n                    last_command = command;\n                    self.set('');\n                    redraw();\n                    reverse_search = true;\n                }\n                return false;\n            },\n            'CTRL+G': function() {\n                if (reverse_search) {\n                    prompt = backup_prompt;\n                    draw_prompt();\n                    self.set(last_command);\n                    redraw();\n                    reverse_search = false;\n                    rev_search_str = '';\n                    return false;\n                }\n            },\n            'ARROWRIGHT': right,\n            'HOLD+ARROWRIGHT': right,\n            'CTRL+F': right,\n            'CTRL+ARROWRIGHT': function() {\n                // jump to beginning or end of the word\n                if (command[position] === ' ') {\n                    ++position;\n                }\n                var re = /\\S[\\n\\s]{2,}|[\\n\\s]+\\S?/;\n                var match = command.slice(position).match(re);\n                if (!match || match[0].match(/^\\s+$/)) {\n                    self.position(text(command).length);\n                } else if (match[0][0] !== ' ') {\n                    position += match.index + 1;\n                } else {\n                    position += match.index + match[0].length - 1;\n                    if (match[0][match[0].length - 1] !== ' ') {\n                        --position;\n                    }\n                }\n                redraw();\n            },\n            'F12': return_true, // Allow Firebug\n            'END': end,\n            'CTRL+E': end,\n            'HOME': home,\n            'CTRL+A': home,\n            'SHIFT+INSERT': paste_event,\n            'CTRL+SHIFT+T': return_true, // open closed tab\n            'CTRL+W': delete_word_backward(true),\n            'HOLD+BACKSPACE': delete_word_backward(false),\n            'HOLD+SHIFT+BACKSPACE': delete_word_backward(false),\n            'CTRL+H': function() {\n                if (command !== '' && position > 0) {\n                    self['delete'](-1);\n                }\n                return false;\n            },\n            'CTRL+X': return_true,\n            'CTRL+C': return_true,\n            'CTRL+T': return_true,\n            'CTRL+Y': function() {\n                if (kill_text !== '') {\n                    self.insert(kill_text);\n                }\n            },\n            'CTRL+V': paste_event,\n            'META+V': paste_event,\n            'CTRL+K': function() {\n                var len = text(command).length;\n                if (len > position) {\n                    kill_text = self['delete'](len - position);\n                    text_to_clipboard(self, kill_text);\n                }\n                return false;\n            },\n            'CTRL+U': function() {\n                if (command !== '' && position !== 0) {\n                    kill_text = self['delete'](-position);\n                    text_to_clipboard(self, kill_text);\n                }\n                return false;\n            },\n            'CTRL+TAB': function() {\n                return false;\n            },\n            'META+`': return_true, // CMD+` switch browser window on Mac\n            'META+R': return_true, // CMD+R page reload in Chrome Mac\n            'META+L': return_true // CLD+L jump into Ominbox on Chrome Mac\n        };\n        // -------------------------------------------------------------------------------\n        function delete_word(clipboard) {\n            return function delete_word() {\n                var re = / *[^ ]+ *(?= )|[^ ]+$/;\n                var substring = command.slice(position);\n                var m = substring.match(re);\n                if (m) {\n                    kill_text = m[0];\n                    if (clipboard) {\n                        text_to_clipboard(self, kill_text);\n                    }\n                }\n                self.set(\n                    command.slice(0, position) +\n                        command.slice(position).replace(re, ''),\n                    true\n                );\n                // chrome jump to address bar\n                return false;\n            };\n        }\n        // -------------------------------------------------------------------------------\n        function delete_word_backward(clipboard) {\n            return function delete_word_backward() {\n                // don't work in Chromium (can't prevent close tab)\n                if (command !== '' && position !== 0) {\n                    var m = command.slice(0, position).match(/([^ ]+ *$)/);\n                    if (m[0].length) {\n                        kill_text = self['delete'](-m[0].length);\n                        if (clipboard) {\n                            text_to_clipboard(self, kill_text);\n                        }\n                    }\n                }\n                return false;\n            };\n        }\n        // -------------------------------------------------------------------------------\n        function return_true() {\n            return true;\n        }\n        // -------------------------------------------------------------------------------\n        function paste_event() {\n            clip.val('');\n            paste_count = 0;\n            if (self.isenabled() && !clip.is(':focus')) {\n                clip.trigger('focus', [true]);\n            }\n            clip.one('input', paste);\n            return true;\n        }\n        // -------------------------------------------------------------------------------\n        function prev_history() {\n            if (first_up_history) {\n                last_command = command;\n                self.set(history.current());\n            } else {\n                self.set(history.previous());\n            }\n            first_up_history = false;\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function next_history() {\n            self.set(history.end() ? last_command : history.next());\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function backspace_key() {\n            if (reverse_search) {\n                rev_search_str = rev_search_str.slice(0, -1);\n                draw_reverse_prompt();\n            } else if (command !== '' && position > 0) {\n                self['delete'](-1);\n            }\n            // for next input after naitve backspace\n            // we need timeout because we don't want it to trigger\n            // for current input but next one\n            self.oneTime(1, function() {\n                no_keydown = true;\n            });\n        }\n        // -------------------------------------------------------------------------------\n        function left() {\n            if (position > 0) {\n                self.position(-1, true);\n                redraw();\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function right() {\n            if (position < text(command).length) {\n                self.position(1, true);\n            }\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function home() {\n            self.position(0);\n        }\n        // -------------------------------------------------------------------------------\n        function end() {\n            self.position(text(command).length);\n        }\n        // -------------------------------------------------------------------------------\n        function mobile_focus() {\n            //if (is_touch) {\n            var focus = clip.is(':focus');\n            if (enabled) {\n                if (!focus) {\n                    //clip.trigger('focus', [true]);\n                }\n                self.oneTime(10, function() {\n                    if (!clip.is(':focus') && enabled) {\n                        clip.trigger('focus', [true]);\n                    }\n                });\n            } else if (focus && (is_mobile || !enabled)) {\n                clip.trigger('blur', [true]);\n            }\n        }\n        // -------------------------------------------------------------------------------\n        // fix for .cursor span animation that should only be applied when\n        // animation is equal to terminal-blink\n        // -------------------------------------------------------------------------------\n        function fix_cursor() {\n            if (animation_supported) {\n                var style = window.getComputedStyle(cursor[0]);\n                var animationName = style.getPropertyValue('--animation');\n                animationName = animationName.replace(/^\\s*|\\s*$/g, '');\n                var _class = self.attr('class');\n                if (_class.match(/-animation/)) {\n                    _class = _class.replace(/[a-z]+-animation/g, '');\n                }\n                if (animationName && !animationName.match(/blink/)) {\n                    var className = animationName.replace(/terminal-/, '') + '-animation';\n                    if (!_class.match(className)) {\n                        _class += ' ' + className;\n                    }\n                }\n                if (_class !== self.attr('class')) {\n                    self.attr('class', _class);\n                }\n            }\n        }\n        // -------------------------------------------------------------------------------\n        // on mobile you can't delete character if input is empty (event\n        // will not fire) so we fake text entry, we could just put dummy\n        // data but we put real command and position\n        // -------------------------------------------------------------------------------\n        function fix_textarea(position_only) {\n            if (!self.isenabled()) {\n                return;\n            }\n            // delay worked while experimenting\n            self.oneTime(10, function() {\n                // we use space before command to show select all context menu\n                // idea taken from CodeMirror\n                if (!is_mobile && clip.val() !== command && !position_only) {\n                    clip.val(' ' + command);\n                }\n                if (enabled) {\n                    self.oneTime(10, function() {\n                        try {\n                            // we check first to improve performance\n                            if (!is_mobile && clip.caret() !== position + 1) {\n                                clip.caret(position + 1);\n                            }\n                        } catch (e) {\n                            // firefox throw NS_ERROR_FAILURE ignore\n                        }\n                    });\n                }\n            });\n        }\n        // -------------------------------------------------------------------------------\n        // terminal animation don't work on android because they animate\n        // 2 properties\n        // -------------------------------------------------------------------------------\n        if (animation_supported && !is_android) {\n            animation = function(toggle) {\n                if (toggle) {\n                    cursor.addClass('blink');\n                } else {\n                    cursor.removeClass('blink');\n                }\n            };\n            restart_animation = function() {\n                var new_cursor = cursor.clone();\n                new_cursor.insertBefore(cursor);\n                cursor.remove();\n                cursor = new_cursor;\n            };\n        } else {\n            var animating = false;\n            animation = function(toggle) {\n                if (toggle && !animating) {\n                    animating = true;\n                    cursor.addClass('inverted blink');\n                    self.everyTime(500, 'blink', blink);\n                } else if (animating && !toggle) {\n                    animating = false;\n                    self.stopTime('blink', blink);\n                    cursor.removeClass('inverted blink');\n                }\n            };\n            restart_animation = function() {\n                animation(false);\n                animation(true);\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: Blinking cursor function\n        // ---------------------------------------------------------------------\n        function blink() {\n            cursor.toggleClass('inverted');\n        }\n        // ---------------------------------------------------------------------\n        // :: Set prompt for reverse search\n        // ---------------------------------------------------------------------\n        function draw_reverse_prompt() {\n            prompt = '(reverse-i-search)`' + rev_search_str + \"': \";\n            draw_prompt();\n        }\n        // ---------------------------------------------------------------------\n        // :: Disable reverse search\n        // ---------------------------------------------------------------------\n        function clear_reverse_state() {\n            prompt = backup_prompt;\n            reverse_search = false;\n            reverse_search_position = null;\n            rev_search_str = '';\n        }\n        // ---------------------------------------------------------------------\n        // :: Search through command line history. If next is not defined or\n        // :: false it searches for the first item from the end. If true it\n        // :: search for the next item\n        // ---------------------------------------------------------------------\n        function reverse_history_search(next) {\n            var history_data = history.data();\n            var regex, save_string;\n            var len = history_data.length;\n            if (next && reverse_search_position > 0) {\n                len -= reverse_search_position;\n            }\n            if (rev_search_str.length > 0) {\n                for (var j = rev_search_str.length; j > 0; j--) {\n                    save_string = $.terminal.escape_regex(rev_search_str.substring(0, j));\n                    if (settings.caseSensitiveSearch) {\n                        regex = new RegExp(save_string);\n                    } else {\n                        regex = new RegExp(save_string, 'i');\n                    }\n                    for (var i = len; i--;) {\n                        if (regex.test(history_data[i])) {\n                            reverse_search_position = history_data.length - i;\n                            self.position(history_data[i].indexOf(save_string));\n                            self.set(history_data[i], true);\n                            redraw();\n                            if (rev_search_str.length !== j) {\n                                rev_search_str = rev_search_str.substring(0, j);\n                                draw_reverse_prompt();\n                            }\n                            return;\n                        }\n                    }\n                }\n            }\n            rev_search_str = ''; // clear if not found any\n        }\n        // ---------------------------------------------------------------------\n        // :: calculate width of hte character\n        // ---------------------------------------------------------------------\n        function get_char_width() {\n            var $prompt = self.find('.prompt');\n            var html = $prompt.html();\n            $prompt.html('<span>&nbsp;</span>');\n            var width = $prompt.find('span')[0].getBoundingClientRect().width;\n            $prompt.html(html);\n            return width;\n        }\n        // ---------------------------------------------------------------------\n        // :: return number of characters in command line\n        // ---------------------------------------------------------------------\n        function get_num_chars(char_width) {\n            var width = self.width();\n            return Math.floor(width / char_width);\n        }\n        // ---------------------------------------------------------------------\n        // :: Split String that fit into command line where first line need to\n        // :: fit next to prompt (need to have less characters)\n        // ---------------------------------------------------------------------\n        function get_splitted_command_line(string) {\n            function split(string) {\n                return $.terminal.split_equal(string, num_chars);\n            }\n            function skip_empty(array) {\n                // we remove lines that are leftovers after adding space at the end\n                return array.filter(function(line) {\n                    return !$.terminal.strip(line).match(/^ $/);\n                });\n            }\n            var line = prompt_node.find('.line');\n            var prompt;\n            if (line.length) {\n                prompt = line.nextUntil('.line').text();\n            } else {\n                prompt = prompt_node.text();\n            }\n            prompt = $.terminal.escape_brackets(prompt);\n            var re = new RegExp('^' + $.terminal.escape_regex(prompt));\n            var array;\n            if (string.match(/\\n/)) {\n                var tmp = string.split('\\n');\n                var first_len = num_chars - prompt_len - 1;\n                for (var i = 0; i < tmp.length - 1; ++i) {\n                    tmp[i] += ' ';\n                }\n                // split first line\n                if (strlen(tmp[0]) > first_len) {\n                    array = split(prompt + tmp[0]);\n                    array[0] = array[0].replace(re, '');\n                    array = skip_empty(array);\n                } else {\n                    array = [tmp[0]];\n                }\n                // process rest of the lines\n                for (i = 1; i < tmp.length; ++i) {\n                    if (strlen(tmp[i]) > num_chars) {\n                        var splitted = split(tmp[i]);\n                        if (i < tmp.length - 1) {\n                            splitted = skip_empty(splitted);\n                        }\n                        array = array.concat(splitted);\n                    } else {\n                        array.push(tmp[i]);\n                    }\n                }\n            } else {\n                array = split(prompt + string, num_chars);\n                array[0] = array[0].replace(re, '');\n            }\n            // fix issue with cursor that was cut off #379\n            if (array.length > 1 && array[array.length - 1].length === num_chars) {\n                array.push('');\n            }\n            return array;\n        }\n        // ---------------------------------------------------------------------\n        // :: use custom formatting\n        // ---------------------------------------------------------------------\n        function formatting(string, skip_formatted_position) {\n            // we don't want to format command when user type formatting in\n            try {\n                string = $.terminal.escape_formatting(string);\n                var options = $.extend({}, settings, {\n                    unixFormattingEscapeBrackets: true,\n                    position: position\n                });\n                var formatted = $.terminal.apply_formatters(string, options);\n                var output = formatted[0];\n                var max = $.terminal.length(output);\n                if (!skip_formatted_position) {\n                    formatted_position = formatted[1];\n                    // fix issue with nested formatting where max length\n                    // is checked before nested_formatting flatten formatting\n                    if (formatted_position > max) {\n                        formatted_position = max;\n                    }\n                }\n                output = $.terminal.normalize(output);\n                return output;\n            } catch (e) {\n                alert_exception('[Formatting]', e.stack);\n                return string;\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: format and encode the string\n        // ---------------------------------------------------------------------\n        function format(string, before) {\n            var encoded = $.terminal.encode(wrap(string), {\n                tabs: settings.tabs,\n                before: before\n            });\n            string = $.terminal.format(encoded, {\n                char_width: settings.char_width\n            });\n            var re = /(<span[^>]+data-text[^>]+>)(.*?)(<\\/span>)/g;\n            return string.replace(re, '$1<span>$2</span>$3');\n        }\n        // ---------------------------------------------------------------------\n        // :: function create new string with all characters in it's own\n        // :: formatting - it will only have style if the input is formatting\n        // :: this function is not very usefull so it's not in $.terminal\n        // ---------------------------------------------------------------------\n        function wrap(string) {\n            function formatting(string) {\n                if ($.terminal.is_formatting(string)) {\n                    if (string.match(/\\\\]$/)) {\n                        string = string.replace(/\\\\]/g, '\\\\\\\\]');\n                    }\n                } else {\n                    if (string.match(/\\\\$/)) {\n                        string += '\\\\';\n                    }\n                    string = '[[;;]' + string + ']';\n                }\n                return string;\n            }\n            var len = length(string);\n            if (len === 1) {\n                return formatting(string);\n            }\n            var result = [];\n            // len - 1 break the command line $.terminal.substring will return\n            // empty string for out of bound indexes\n            for (var i = 0; i < len; ++i) {\n                var text = $.terminal.substring(string, i, i + 1);\n                result.push(formatting(text));\n            }\n            return result.join('');\n        }\n        // ---------------------------------------------------------------------\n        // :: shortcut helpers\n        // ---------------------------------------------------------------------\n        function length(str) {\n            return $.terminal.length(str);\n        }\n        // ---------------------------------------------------------------------\n        function substring(str, start, end) {\n            return $.terminal.substring(str, start, end);\n        }\n        // ---------------------------------------------------------------------\n        // :: Function that displays the command line. Split long lines and\n        // :: place cursor in the right place\n        // ---------------------------------------------------------------------\n        var redraw = (function() {\n            var before = cursor.prev();\n            var after = cursor.next();\n            var cursor_line = cursor.parent();\n            // -----------------------------------------------------------------\n            // :: Draw line with the cursor\n            // -----------------------------------------------------------------\n            function draw_cursor_line(string, options) {\n                var settings = $.extend({\n                    prompt: '',\n                    last: false\n                }, options);\n                var position = settings.position;\n                var len = length(string);\n                var prompt = settings.prompt;\n                if (ch_unit_bug) {\n                    cursor.width(char_width);\n                }\n                var c;\n                if (position === len) {\n                    before.html(format(string));\n                    cursor.html('<span><span>&nbsp;</span></span>');\n                    after.html('');\n                } else if (position === 0) {\n                    before.html('');\n                    c = substring(string, 0, 1);\n                    cursor.html(format(c));\n                    after.html(format(substring(string, 1), prompt + c));\n                } else {\n                    var before_str = $.terminal.substring(string, 0, position);\n                    before.html(format(before_str, prompt));\n                    c = substring(string, position, position + 1);\n                    var c_before = (prompt + before_str).replace(/^.*\\t/, '');\n                    cursor.html(format(c, c_before));\n                    if (position === len - 1) {\n                        after.html('');\n                    } else {\n                        if (c.match(/\\t/)) {\n                            c_before = '';\n                        } else {\n                            c_before += c;\n                        }\n                        after.html(format(substring(string, position + 1), c_before));\n                    }\n                }\n                // fix for command line selection\n                var noselect = settings.position === (settings.last ? len : len - 1);\n                cursor.toggleClass('noselect', noselect);\n                // fix for animation when changing --animation dynamically\n                fix_cursor();\n                var cursor_len = $.terminal.length(cursor.text());\n                if (cursor_len > 1) {\n                    var node = cursor.find('[data-text]')[0];\n                    node.style.setProperty('--length', cursor_len);\n                }\n                // synchronize css animations (it's not that important because if user\n                // will change animation she should disable animation on span, but it\n                // looks nicer until she disable that inner animation)\n                restart_animation();\n            }\n            function div(string, before) {\n                return '<div role=\"presentation\" aria-hidden=\"true\">' +\n                    format(string, before || '') +\n                    '</div>';\n            }\n            // -----------------------------------------------------------------\n            // :: Display lines after the cursor\n            // -----------------------------------------------------------------\n            function lines_after(lines) {\n                var last_ins = cursor_line;\n                $.each(lines, function(i, line) {\n                    last_ins = $(div(line)).insertAfter(last_ins);\n                });\n            }\n            // -----------------------------------------------------------------\n            // :: Display lines before the cursor\n            // -----------------------------------------------------------------\n            function lines_before(lines) {\n                $.each(lines, function(i, line) {\n                    cursor_line.before(div(line, i === 0 ? prompt_last_line : ''));\n                });\n            }\n            // -----------------------------------------------------------------\n            // :: Redraw function\n            // -----------------------------------------------------------------\n            return function() {\n                var string;\n                switch (typeof settings.mask) {\n                    case 'boolean':\n                        string = settings.mask ? command.replace(/./g, '*') : command;\n                        break;\n                    case 'string':\n                        string = command.replace(/./g, settings.mask);\n                        break;\n                }\n                var formatted = formatting(string);\n                var pos;\n                if (length(formatted) === text(string).length) {\n                    pos = position;\n                } else {\n                    pos = formatted_position;\n                }\n                var i;\n                self.find('div:not(.cursor-line,.clipboard-wrapper)').remove();\n                self.css('visibility', 'hidden');\n                before.html('');\n                // long line\n                if (strlen(text(formatted)) > num_chars - prompt_len - 1 ||\n                    formatted.match(/\\n/)) {\n                    var tabs = formatted.match(/\\t/g);\n                    var original_string = formatted;\n                    //quick tabulation hack\n                    if (tabs) {\n                        formatted = formatted.replace(/\\t/g, '\\x00\\x00\\x00\\x00');\n                    }\n                    var array = get_splitted_command_line(formatted);\n                    if (tabs) {\n                        array = $.map(array, function(line) {\n                            return line.replace(/\\x00\\x00\\x00\\x00/g, '\\t');\n                        });\n                    }\n                    var first_len = length(array[0]);\n                    //cursor in first line\n                    if (first_len === 0 && array.length === 1) {\n                        // skip empty line\n                    } else if (pos < first_len) {\n                        draw_cursor_line(array[0], {\n                            position: pos,\n                            prompt: prompt_last_line\n                        });\n                        lines_after(array.slice(1));\n                    } else if (pos === first_len) {\n                        // first char acter of second line\n                        cursor_line.before(div(array[0], prompt_last_line));\n                        draw_cursor_line(array[1] || '', {position: 0});\n                        if (array.length > 1) {\n                            lines_after(array.slice(2));\n                        }\n                    } else {\n                        var last = array.slice(-1)[0];\n                        var len = length(original_string);\n                        var from_last = len - pos;\n                        var last_len = length(last);\n                        var new_pos = 0;\n                        if (from_last === -1) {\n                            from_last = 0;\n                        }\n                        if (from_last <= last_len) { // in last line\n                            lines_before(array.slice(0, -1));\n                            if (last_len === from_last) {\n                                new_pos = 0;\n                            } else {\n                                new_pos = last_len - from_last;\n                            }\n                            draw_cursor_line(last, {\n                                position: new_pos,\n                                last: true\n                            });\n                        } else {\n                            // more lines, cursor in the middle\n                            var line_index;\n                            var current;\n                            new_pos = pos;\n                            for (i = 0; i < array.length; ++i) {\n                                var current_len = $.terminal.length(array[i]);\n                                if (new_pos > current_len) {\n                                    new_pos -= current_len;\n                                } else {\n                                    break;\n                                }\n                            }\n                            current = array[i];\n                            line_index = i;\n                            // cursor on first character in line\n                            if (new_pos === length(current)) {\n                                new_pos = 0;\n                                current = array[++line_index];\n                                if (current === undefined) {\n                                    //should never happen\n                                    var msg = $.terminal.defaults.strings.redrawError;\n                                    throw new Error(msg);\n                                }\n                            }\n                            draw_cursor_line(current, {\n                                position: new_pos\n                            });\n                            lines_before(array.slice(0, line_index));\n                            lines_after(array.slice(line_index + 1));\n                        }\n                    }\n                    self.find('.cursor-line ~ div:last-of-type').append('<span></span>');\n                } else if (formatted === '') {\n                    before.html('');\n                    cursor.html('<span><span>&nbsp;</span></span>');\n                    after.html('');\n                } else {\n                    draw_cursor_line(formatted, {position: pos});\n                }\n                var in_line = cursor_line.prevUntil('.prompt').length;\n                if (is_css_variables_supported) {\n                    self[0].style.setProperty('--cursor-line', in_line);\n                } else {\n                    clip.css('top', in_line * 14 + 'px');\n                }\n                self.css('visibility', '');\n            };\n        })();\n        // ---------------------------------------------------------------------\n        // :: find position that match display position for commands that\n        // :: change length by formatters\n        // ---------------------------------------------------------------------\n        var find_position = (function() {\n            function cmp(search_pos, pos) {\n                var opts = $.extend({}, settings, {\n                    position: pos\n                });\n                var guess = $.terminal.apply_formatters(command, opts)[1];\n                if (guess === search_pos) {\n                    return 0;\n                } else if (guess < search_pos) {\n                    return 1;\n                } else {\n                    return -1;\n                }\n            }\n            return function(string, formatted_position) {\n                if (formatted_position === 0) {\n                    return 0;\n                }\n                string = text(string);\n                var codepoint_len = string.length;\n                var pos = binary_search(0, codepoint_len, formatted_position, cmp);\n                var chars = $.terminal.split_characters(string);\n                if (codepoint_len > chars.length) {\n                    var len = 0;\n                    for (var i = 0; i < chars.length; ++i) {\n                        len += chars[i].length;\n                        if (len >= pos) {\n                            return len;\n                        }\n                    }\n                }\n                return pos;\n            };\n        })();\n        // ---------------------------------------------------------------------\n        // :: Draw prompt that can be a function or a string\n        // ---------------------------------------------------------------------\n        var draw_prompt = (function() {\n            function set(prompt) {\n                prompt = $.terminal.apply_formatters(prompt, {});\n                prompt = $.terminal.normalize(prompt);\n                prompt = crlf(prompt);\n                last_rendered_prompt = prompt;\n                var lines = $.terminal.split_equal(prompt, num_chars);\n                var options = {\n                    char_width: settings.char_width\n                };\n                prompt_last_line = lines[lines.length - 1];\n                var encoded_last_line = $.terminal.encode(lines[lines.length - 1], {\n                    tabs: settings.tabs\n                });\n                var last_line = $.terminal.format(encoded_last_line, options);\n                var formatted = lines.slice(0, -1).map(function(line) {\n                    line = $.terminal.encode(line, {\n                        tabs: settings.tabs\n                    });\n                    return '<span class=\"line\">' +\n                        $.terminal.format(line, options) +\n                        '</span>';\n                }).concat([last_line]).join('\\n');\n                // update prompt if changed\n                if (prompt_node.html() !== formatted) {\n                    prompt_node.html(formatted);\n                    prompt_len = strlen(text(encoded_last_line));\n                }\n            }\n            return function() {\n                switch (typeof prompt) {\n                    case 'string':\n                        set(prompt);\n                        break;\n                    case 'function':\n                        prompt.call(self, set);\n                        break;\n                }\n            };\n        })();\n        // ---------------------------------------------------------------------\n        // :: Paste content to terminal using hidden textarea\n        // ---------------------------------------------------------------------\n        function paste() {\n            if (paste_count++ > 0) {\n                return;\n            }\n            if (self.isenabled()) {\n                //wait until Browser insert text to textarea\n                self.oneTime(100, function() {\n                    self.insert(clip.val());\n                    clip.val(command);\n                    fix_textarea();\n                });\n            }\n        }\n        // ---------------------------------------------------------------------\n        function fire_change_command() {\n            if (is_function(settings.onCommandChange)) {\n                settings.onCommandChange.call(self, command);\n            }\n        }\n        // ---------------------------------------------------------------------\n        function clean(string) {\n            return string.replace(/((?!\\\\).)\\\\(?:&#93;|])/g, '$1&#93;');\n        }\n        // ---------------------------------------------------------------------\n        // :: Command Line Methods\n        // ---------------------------------------------------------------------\n        $.extend(self, {\n            option: function(name, value) {\n                if (typeof value === 'undefined') {\n                    return settings[name];\n                } else {\n                    settings[name] = value;\n                }\n                return self;\n            },\n            name: function(string) {\n                if (string !== undefined) {\n                    name = string;\n                    var enabled = history && history.enabled() || !history;\n                    history = new History(\n                        name,\n                        settings.historySize,\n                        settings.history === 'memory'\n                    );\n                    // disable new history if old was disabled\n                    if (!enabled) {\n                        history.disable();\n                    }\n                    return self;\n                } else {\n                    return name;\n                }\n            },\n            purge: function() {\n                history.clear();\n                return self;\n            },\n            history: function() {\n                return history;\n            },\n            'delete': function(n, stay) {\n                var removed, string;\n                if (n === 0) {\n                    return \"\";\n                } else if (n < 0) {\n                    if (position > 0) {\n                        // this may look weird but if n is negative we need\n                        // to use +\n                        removed = command.slice(0, position).slice(n);\n                        string = text(command);\n                        string = string.slice(0, position + n) +\n                            string.slice(position, string.length);\n                        if (!stay) {\n                            self.position(position + n);\n                        }\n                    }\n                } else if (command !== '') {\n                    string = text(command);\n                    if (position < string.length) {\n                        removed = string.slice(position).slice(0, n);\n                        string = string.slice(0, position) +\n                            string.slice(position + n, string.length);\n                    }\n                }\n                if (removed) {\n                    command = clean(string);\n                }\n                redraw();\n                fix_textarea();\n                fire_change_command();\n                return removed;\n            },\n            set: function(string, stay, silent) {\n                if (string !== undefined) {\n                    command = clean(string);\n                    if (!stay) {\n                        self.position(text(command).length);\n                    }\n                    redraw();\n                    fix_textarea();\n                    if (!silent) {\n                        fire_change_command();\n                    }\n                }\n                return self;\n            },\n            keymap: function(new_keymap, value) {\n                function wrap(key, fn) {\n                    var original = default_keymap[key];\n                    if (is_function(original)) {\n                        original = original.bind(self);\n                    }\n                    return function(e) {\n                        // new keymap function will get default as 2nd argument\n                        return fn.call(self, e, original);\n                    };\n                }\n                if (typeof new_keymap === 'undefined') {\n                    return keymap;\n                } else if (typeof new_keymap === 'string') {\n                    if (typeof value === 'undefined') {\n                        if (keymap[new_keymap]) {\n                            return keymap[new_keymap];\n                        } else if (default_keymap[new_keymap]) {\n                            return default_keymap[new_keymap];\n                        }\n                    } else {\n                        keymap[new_keymap] = wrap(new_keymap, value);\n                    }\n                } else {\n                    keymap = $.extend(\n                        {},\n                        keymap ? keymap : default_keymap,\n                        $.omap(new_keymap || {}, wrap)\n                    );\n                    return self;\n                }\n            },\n            insert: function(string, stay) {\n                var bare_command = text(command);\n                var len = text(string).length;\n                if (position === bare_command.length) {\n                    string = bare_command + string;\n                } else if (position === 0) {\n                    string = string + bare_command;\n                } else {\n                    string = bare_command.slice(0, position) +\n                        string + bare_command.slice(position);\n                }\n                command = clean(string);\n                if (!stay) {\n                    self.position(len, true, true);\n                } else {\n                    fix_textarea();\n                }\n                redraw();\n                fix_textarea();\n                fire_change_command();\n                return self;\n            },\n            get: function() {\n                return command;\n            },\n            commands: function(commands) {\n                if (commands) {\n                    settings.commands = commands;\n                    return self;\n                } else {\n                    return commands;\n                }\n            },\n            destroy: function() {\n                doc.unbind('keypress.cmd', keypress_event);\n                doc.unbind('keydown.cmd', keydown_event);\n                doc.unbind('input.cmd', input_event);\n                self.stopTime('blink', blink);\n                self.find('.cursor').next().remove().end().prev().remove().\n                    end().remove();\n                self.find('.prompt, .clipboard').remove();\n                self.removeClass('cmd').removeData('cmd').off('.cmd');\n                return self;\n            },\n            prompt: function(user_prompt) {\n                if (user_prompt === true) {\n                    return last_rendered_prompt;\n                } else if (user_prompt === undefined) {\n                    return prompt;\n                } else {\n                    if (typeof user_prompt === 'string' ||\n                        typeof user_prompt === 'function') {\n                        prompt = user_prompt;\n                    } else {\n                        throw new Error('prompt must be a function or string');\n                    }\n                    draw_prompt();\n                    // we could check if command is longer then numchars-new\n                    // prompt\n                    redraw();\n                    return self;\n                }\n            },\n            kill_text: function() {\n                return kill_text;\n            },\n            position: function(n, relative, silent) {\n                if (typeof n === 'number') {\n                    var pos = position;\n                    var len = text(command).length;\n                    if (relative) {\n                        position += n;\n                    } else if (n < 0) {\n                        position = 0;\n                    } else if (n > len) {\n                        position = len;\n                    } else {\n                        position = n;\n                    }\n                    if (pos !== position && !silent) {\n                        redraw();\n                        if (is_function(settings.onPositionChange)) {\n                            settings.onPositionChange(position, formatted_position);\n                        }\n                        fix_textarea(true);\n                    }\n                    return self;\n                } else {\n                    return position;\n                }\n            },\n            refresh: function() {\n                draw_prompt();\n                redraw();\n                return self;\n            },\n            // if formatter change length of the strings (like emoji demo) we need to keep\n            // track of two different positions one for command and one for display\n            display_position: function(n, relative) {\n                if (n === undefined) {\n                    return formatted_position;\n                } else {\n                    var string = formatting(command, true);\n                    var len = length(string);\n                    var command_len = text(command).length;\n                    var new_formatted_pos;\n                    if (relative) {\n                        new_formatted_pos = formatted_position + n;\n                    } else if (n > len) {\n                        new_formatted_pos = len;\n                    } else {\n                        new_formatted_pos = n;\n                    }\n                    if (text(string).length === length(command)) {\n                        formatted_position = new_formatted_pos;\n                        return self.position(new_formatted_pos);\n                    }\n                    if (len === new_formatted_pos) {\n                        formatted_position = new_formatted_pos;\n                        return self.position(command_len);\n                    }\n                    var pos = find_position(command, new_formatted_pos);\n                    if (pos !== -1) {\n                        formatted_position = new_formatted_pos;\n                        self.position(pos);\n                    }\n                    return self;\n                }\n            },\n            visible: (function() {\n                var visible = self.visible;\n                return function() {\n                    visible.apply(self, []);\n                    redraw();\n                    draw_prompt();\n                    return self;\n                };\n            })(),\n            show: (function() {\n                var show = self.show;\n                return function() {\n                    show.apply(self, []);\n                    redraw();\n                    draw_prompt();\n                    return self;\n                };\n            })(),\n            resize: function(num) {\n                char_width = get_char_width();\n                if (num) {\n                    num_chars = num;\n                } else {\n                    num_chars = get_num_chars(char_width);\n                }\n                redraw();\n                draw_prompt();\n                return self;\n            },\n            enable: function() {\n                if (!enabled) {\n                    enabled = true;\n                    self.addClass('enabled');\n                    try {\n                        if (clip.is(':not(:focus)')) {\n                            clip.focus();\n                        }\n                        clip.caret(position);\n                    } catch (e) {\n                        // firefox throw NS_ERROR_FAILURE ignore\n                    }\n                    animation(true);\n                    if (is_function(prompt)) {\n                        draw_prompt();\n                    }\n                    fix_cursor();\n                    fix_textarea();\n                }\n                mobile_focus();\n                return self;\n            },\n            isenabled: function() {\n                return enabled;\n            },\n            disable: function(focus) {\n                enabled = false;\n                self.removeClass('enabled');\n                animation(false);\n                if (!focus) {\n                    mobile_focus();\n                }\n                return self;\n            },\n            mask: function(new_mask) {\n                if (typeof new_mask === 'undefined') {\n                    return settings.mask;\n                } else {\n                    settings.mask = new_mask;\n                    redraw();\n                    return self;\n                }\n            }\n        });\n        //debug_object(self, 'cmd')('display_position');\n        // ---------------------------------------------------------------------\n        // :: INIT\n        // ---------------------------------------------------------------------\n        self.name(settings.name || settings.prompt || '');\n        if (typeof settings.prompt === 'string') {\n            prompt = settings.prompt;\n        } else {\n            prompt = '> ';\n        }\n        draw_prompt();\n        if (settings.enabled === true) {\n            self.enable();\n        }\n        if (!settings.history) {\n            history.disable();\n        }\n        var first_up_history = true;\n        // prevent_keypress - hack for Android that was inserting characters on\n        // backspace\n        var prevent_keypress = false;\n        var dead_key = false;\n        var single_key = false;\n        var no_keypress = false;\n        var no_key = false;\n        var no_keydown = true;\n        var backspace = false;\n        var process = false;\n        var hold = false;\n        var hold_pause = false;\n        var skip_insert;\n        // we hold text before keydown to fix backspace for Android/Chrome/SwiftKey\n        // keyboard that generate keycode 229 for all keys #296\n        var prev_command = '';\n        // ---------------------------------------------------------------------\n        // :: Keydown Event Handler\n        // ---------------------------------------------------------------------\n        function is_backspace(e) {\n            return e.key.toUpperCase() === 'BACKSPACE' || e.which === 8;\n        }\n        // ---------------------------------------------------------------------\n        function is_single(e) {\n            return e.key && e.key.length === 1 && !e.ctrlKey;\n        }\n        // ---------------------------------------------------------------------\n        function clear_reverse_search_key(e) {\n            // arrows / Home / End / ENTER\n            return e.which === 35 || e.which === 36 ||\n                e.which === 37 || e.which === 38 ||\n                e.which === 39 || e.which === 40 ||\n                e.which === 13 || e.which === 27;\n        }\n        // ---------------------------------------------------------------------\n        function keydown_event(e) {\n            debug('keydown \"' + e.key + '\" ' + e.fake + ' ' + e.which);\n            process = (e.key || '').toLowerCase() === 'process' || e.which === 0;\n            var result;\n            dead_key = no_keypress && single_key && !is_backspace(e);\n            // special keys don't trigger keypress fix #293\n            try {\n                if (!e.fake) {\n                    single_key = is_single(e);\n                    // chrome on android support key property but it's \"Unidentified\"\n                    no_key = String(e.key).toLowerCase() === 'unidentified';\n                    backspace = is_backspace(e);\n                }\n            } catch (exception) {}\n            // keydown created in input will have text already inserted and we\n            // want text before input\n            if (e.key === \"Unidentified\") {\n                no_keydown = true;\n                // android swift keyboard have always which == 229 we will triger proper\n                // event in input with e.fake == true\n                return;\n            }\n            if (!e.fake) {\n                no_keypress = true;\n                no_keydown = false;\n            }\n            // Meta+V did bind input but it didin't happen because terminal paste\n            // prevent native insert action\n            clip.off('input', paste);\n            var key = get_key(e);\n            if (is_function(settings.keydown)) {\n                result = settings.keydown.call(self, e);\n                if (result !== undefined) {\n                    //prevent_keypress = true;\n                    if (!result) {\n                        skip_insert = true;\n                    }\n                    return result;\n                }\n            }\n            if (enabled) {\n                self.oneTime(settings.holdTimeout, 'hold', function() {\n                    hold = true;\n                });\n                if (hold) {\n                    key = 'HOLD+' + key;\n                    if (hold_pause) {\n                        return;\n                    }\n                    if (settings.holdRepeatTimeout > 0 &&\n                        key.indexOf(settings.repeatTimeoutKeys) !== -1) {\n                        hold_pause = true;\n                        self.oneTime(settings.holdRepeatTimeout, 'delay', function() {\n                            hold_pause = false;\n                        });\n                    }\n                }\n                restart_animation();\n                // CTRL+V don't fire keypress in IE11\n                skip_insert = ['CTRL+V', 'META+V'].indexOf(key) !== -1;\n                if (e.which !== 38 && !(e.which === 80 && e.ctrlKey)) {\n                    first_up_history = true;\n                }\n                if (reverse_search && clear_reverse_search_key(e)) {\n                    clear_reverse_state();\n                    draw_prompt();\n                    if (e.which === 27) { // ESC\n                        self.set('');\n                    }\n                    redraw();\n                    if (e.which === 13) {\n                        keydown_event.call(this, e);\n                    }\n                } else if (is_function(keymap[key])) {\n                    result = keymap[key](e);\n                    if (result === true) {\n                        return;\n                    }\n                    if (result !== undefined) {\n                        return result;\n                    }\n                } else if (e.altKey) {\n                    return;\n                } else {\n                    prevent_keypress = false;\n                    return;\n                }\n                // this will prevent for instance backspace to go back one page\n                //prevent_keypress = true;\n                //e.preventDefault();\n            }\n        }\n        function clear_hold() {\n            self.stopTime('hold');\n            hold_pause = hold = false;\n        }\n        var doc = $(document.documentElement || window);\n        self.keymap(settings.keymap || {});\n        function keypress_event(e) {\n            debug('keypress \"' + e.key + '\" ' + e.fake);\n            clear_hold();\n            var result;\n            if (!e.fake) {\n                no_keypress = false;\n            }\n            if ((e.ctrlKey || e.metaKey) && !e.altKey) {\n                return;\n            }\n            if (prevent_keypress) {\n                return;\n            }\n            if (is_function(settings.keypress)) {\n                result = settings.keypress.call(self, e);\n                if (result !== undefined) {\n                    if (!result) {\n                        skip_insert = true;\n                    }\n                    return result;\n                }\n            }\n            if (enabled) {\n                if (e.fake) {\n                    // event created in input, we prevent inserting text\n                    // in different interpreter when keydown called pop\n                    return;\n                }\n                // key polyfill is not correct for keypress\n                // https://github.com/cvan/keyboardevent-key-polyfill/issues/15\n                var key;\n                if (is_key_native || e.fake) {\n                    key = e.key;\n                    // fixing IE inconsistency #362\n                    var normalized = key.toUpperCase();\n                    if (key_mapping[normalized]) {\n                        key = key_mapping[normalized];\n                    }\n                }\n                if (!key || no_key) {\n                    key = String.fromCharCode(e.which);\n                }\n                if ($.inArray(e.which, [13, 0, 8]) > -1) {\n                    if (e.keyCode === 123) { // for F12 which === 0\n                        return;\n                    }\n                    return false;\n                    // which === 100 - d\n                } else if (key && (!e.ctrlKey || (e.ctrlKey && e.ctrlKey)) &&\n                           (!(e.altKey && e.which === 100) || e.altKey) &&\n                           !dead_key) {\n                    // dead_key are handled by input event\n                    if (reverse_search) {\n                        rev_search_str += key;\n                        reverse_history_search();\n                        draw_reverse_prompt();\n                    } else if (key.length === 1) {\n                        self.insert(key);\n                    }\n                }\n            }\n        }\n        function event(type, chr, which) {\n            var event = $.Event(type);\n            event.which = which;\n            event.key = chr;\n            event.fake = true;\n            doc.trigger(event);\n        }\n        function input_event() {\n            debug('input ' + no_keydown + ' || ' + process + ' ((' + no_keypress +\n                  ' || ' + dead_key + ') && !' + skip_insert + ' && (' + single_key +\n                  ' || ' + no_key + ') && !' + backspace + ')');\n            // correct for fake space used for select all context menu hack\n            var val = clip.val();\n            if (!is_mobile) {\n                val = val.replace(/^ /, '');\n            }\n            // Some Androids don't fire keypress - #39\n            // if there is dead_key we also need to grab real character #158\n            // Firefox/Android with google keyboard don't fire keydown and keyup #319\n            if ((no_keydown || process || ((no_keypress || dead_key) && !skip_insert &&\n                                          (single_key || no_key) && !backspace)) &&\n                val !== command) {\n                var pos = position;\n                // backspace is set in keydown if no keydown we need to get new one\n                if (no_keydown) {\n                    var cmd = prev_command;\n                    backspace = cmd.substring(0, cmd.length - 1).length === val.length;\n                }\n                if (reverse_search) {\n                    rev_search_str = val;\n                    reverse_history_search();\n                    draw_reverse_prompt();\n                } else {\n                    var chr = val.substring(position);\n                    if (chr.length === 1 || backspace) {\n                        // we trigger events so keypress and keydown callback work\n                        if (no_keydown) {\n                            var keycode;\n                            if (backspace) {\n                                keycode = 8;\n                            } else {\n                                keycode = chr.toUpperCase().charCodeAt(0);\n                            }\n                            event('keydown', backspace ? 'Backspace' : chr, keycode);\n                        }\n                        if (no_keypress && !backspace) {\n                            event('keypress', chr, chr.charCodeAt(0));\n                        }\n                    }\n                    if (backspace) {\n                        prev_command = command;\n                        return;\n                    }\n                    // if user return false in keydown we don't want to insert text\n                    if (skip_insert) {\n                        skip_insert = false;\n                        return;\n                    }\n                    self.set(val);\n                }\n                if (backspace) {\n                    self.position(pos - 1);\n                } else {\n                    // user enter more then one character if click on complete word\n                    // on android\n                    self.position(pos + Math.abs(val.length - prev_command.length));\n                }\n            }\n            prev_command = command;\n            skip_insert = false;\n            no_keydown = true;\n        }\n        doc.bind('keypress.cmd', keypress_event).bind('keydown.cmd', keydown_event)\n            .bind('keyup.cmd', clear_hold).bind('input.cmd', input_event);\n        (function() {\n            var was_down = false;\n            var count = 0;\n            self.on('mousedown.cmd', function() {\n                was_down = true;\n            }).on('mouseup.cmd', function(e) {\n                function trigger() {\n                    var $target = $(e.target);\n                    if (!$target.is('.prompt') && down) {\n                        if (enabled) {\n                            if ($target.is('.cmd')) {\n                                self.position(text(command).length);\n                            } else {\n                                self.display_position(get_char_pos(e));\n                            }\n                        }\n                    }\n                    count = 0;\n                }\n                // we get button from event for testing normally it's on originalEvent\n                var button;\n                if (e.originalEvent === undefined) {\n                    button = e.button;\n                } else {\n                    button = e.originalEvent.button;\n                }\n                if (button === 0 && get_selected_text() === '') {\n                    var name = 'click_' + id;\n                    if (++count === 1) {\n                        var down = was_down;\n                        if (enabled) {\n                            if (settings.clickTimeout === 0) {\n                                trigger();\n                            } else {\n                                self.oneTime(settings.clickTimeout, name, trigger);\n                            }\n                        } else {\n                            count = 0;\n                        }\n                    } else {\n                        self.stopTime(name);\n                        count = 0;\n                    }\n                }\n                was_down = false;\n            });\n        })();\n        self.data('cmd', self);\n        if (!('KeyboardEvent' in window && 'key' in window.KeyboardEvent.prototype)) {\n            setTimeout(function() {\n                throw new Error('key event property not supported try https://github.' +\n                                'com/inexorabletash/polyfill/blob/master/keyboard.js');\n            }, 0);\n        }\n        return self;\n    }; // cmd plugin\n    // -------------------------------------------------------------------------\n    /* eslint-disable */\n    // regex that match single character at begining and folowing combine character\n    // https://en.wikipedia.org/wiki/Combining_character\n    var combine_chr_re = /^(.(?:[\\u0300-\\u036F]|[\\u1AB0-\\u1abE]|[\\u1DC0-\\u1DF9]|[\\u1DFB-\\u1DFF]|[\\u20D0-\\u20F0]|[\\uFE20-\\uFE2F])+)/;\n    // source: https://mathiasbynens.be/notes/javascript-unicode\n    var astral_symbols_re = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // source: https://github.com/mathiasbynens/emoji-regex\n    var emoji_re = /^(\\uD83C\\uDFF4(?:\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74)\\uDB40\\uDC7F|\\u200D\\u2620\\uFE0F)|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC68(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3]))|\\uD83D\\uDC69\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\uD83D\\uDC68(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83D\\uDC69\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC68(?:\\u200D(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDD1-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDEEB\\uDEEC\\uDEF4-\\uDEF9]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD70\\uDD73-\\uDD76\\uDD7A\\uDD7C-\\uDDA2\\uDDB0-\\uDDB9\\uDDC0-\\uDDC2\\uDDD0-\\uDDFF])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEF9]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD70\\uDD73-\\uDD76\\uDD7A\\uDD7C-\\uDDA2\\uDDB0-\\uDDB9\\uDDC0-\\uDDC2\\uDDD0-\\uDDFF])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC69\\uDC6E\\uDC70-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3D\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDD1-\\uDDDD]))/;\n    // https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\n    var mobile_re = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i;\n    var tablet_re = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i;\n    var format_split_re = /(\\[\\[[!gbiuso]*;[^;]*;[^\\]]*\\](?:[^\\]]*[^\\\\](\\\\\\\\)*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]?)/i;\n    var format_parts_re = /\\[\\[([!gbiuso]*);([^;]*);([^;\\]]*);?([^;\\]]*);?([^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]?/gi;\n    var format_re = /\\[\\[([!gbiuso]*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]?/gi;\n    var format_exist_re = /\\[\\[([!gbiuso]*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]/gi;\n    var format_full_re = /^\\[\\[([!gbiuso]*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]$/gi;\n    var color_hex_re = /^#([0-9a-f]{3}|[0-9a-f]{6})$/i;\n    var url_re = /(\\bhttps?:\\/\\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\\s\"'<>\\][)])+)/gi;\n    var url_nf_re = /\\b(?![^\\s[\\]]*])(https?:\\/\\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\\s\"'<>\\][)])+)/gi;\n    var email_re = /((([^<>('\")[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,})))/g;\n    var command_re = /((?:\"[^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*'|\\/[^\\/\\\\]*(?:\\\\[\\S\\s][^\\/\\\\]*)*\\/[gimsuy]*(?=\\s|$)|(?:\\\\\\s|\\S))+)(?=\\s|$)/gi;\n    var extended_command_re = /^\\s*((terminal|cmd)::([a-z_]+)\\(([\\s\\S]*)\\))\\s*$/;\n    var format_begin_re = /(\\[\\[[!gbiuso]*;[^;]*;[^\\]]*\\])/i;\n    var format_start_re = /^(\\[\\[[!gbiuso]*;[^;]*;[^\\]]*\\])/i;\n    var format_end_re = /\\[\\[[!gbiuso]*;[^;]*;[^\\]]*\\]?$/i;\n    var format_exec_re = /(\\[\\[(?:[^\\][]|\\\\\\])+\\]\\])/;\n    var float_re = /^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?$/;\n    var re_re = /^\\/((?:\\\\\\/|[^/]|\\[[^\\]]*\\/[^\\]]*\\])+)\\/([gimsuy]*)$/;\n    var string_re = /(\"(?:[^\"\\\\]|\\\\(?:\\\\\\\\)*\"|\\\\\\\\)*\"|'(?:[^'\\\\]|\\\\(?:\\\\\\\\)*'|\\\\\\\\)*')/;\n    var unclosed_strings_re = /^(?=((?:[^\"']+|\"[^\"\\\\]*(?:\\\\[^][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[^][^'\\\\]*)*')*))\\1./;\n    /* eslint-enable */\n    // -------------------------------------------------------------------------\n    // :: TOOLS\n    // -------------------------------------------------------------------------\n    // taken from https://hacks.mozilla.org/2011/09/detecting-and-generating-\n    // css-animations-in-javascript/\n    var animation_supported = (function() {\n        var animation = false,\n            domPrefixes = 'Webkit Moz O ms Khtml'.split(' '),\n            elm = document.createElement('div');\n        if (elm.style.animationName) {\n            animation = true;\n        }\n        if (animation === false) {\n            for (var i = 0; i < domPrefixes.length; i++) {\n                var name = domPrefixes[i] + 'AnimationName';\n                if (elm.style[name] !== undefined) {\n                    animation = true;\n                    break;\n                }\n            }\n        }\n        elm = null;\n        return animation;\n    })();\n    // -------------------------------------------------------------------------\n    var is_ch_unit_supported = (function() {\n        var agent = window.navigator.userAgent;\n        if (agent.match(/MSIE|Trident/) && !agent.match(/IEMobile/)) {\n            return false;\n        }\n        var div = document.createElement('div');\n        div.style.width = '1ch';\n        return div.style.width === '1ch';\n    })();\n    // -------------------------------------------------------------------------\n    var is_css_variables_supported = window.CSS && window.CSS.supports &&\n            window.CSS.supports('--fake-var', 0);\n    // -------------------------------------------------------------------------\n    var is_android = navigator.userAgent.toLowerCase().indexOf('android') !== -1;\n    // -------------------------------------------------------------------------\n    var is_key_native = (function is_key_native() {\n        if (!('KeyboardEvent' in window && 'key' in window.KeyboardEvent.prototype)) {\n            return false;\n        }\n        var proto = window.KeyboardEvent.prototype;\n        var get = Object.getOwnPropertyDescriptor(proto, 'key').get;\n        return get.toString().match(/\\[native code\\]/);\n    })();\n    // -------------------------------------------------------------------------\n    var is_mobile = (function(a) {\n        var check = false;\n        if (mobile_re.test(a) || tablet_re.test(a.substr(0, 4))) {\n            check = true;\n        }\n        return check;\n    })(navigator.userAgent || navigator.vendor || window.opera);\n\n    // -------------------------------------------------------------------------\n    // IE ch unit bug detection - better that UserAgent that can be changed\n    var ch_unit_bug = false;\n    $(function() {\n        function width(e) {\n            return e[0].getBoundingClientRect().width;\n        }\n        var base = '<span style=\"font-family: monospace;visibility:hidden;';\n        var ch = $(base + 'width:1ch;overflow: hidden\">&nbsp;</span>').appendTo('body');\n        var space = $(base + '\">&nbsp;</span>').appendTo('body');\n        ch_unit_bug = width(ch) !== width(space);\n        ch.remove();\n        space.remove();\n    });\n\n    // -------------------------------------------------------------------------\n    var strlen = (function() {\n        if (typeof wcwidth === 'undefined') {\n            return function(string) {\n                return $.terminal.length(string);\n            };\n        } else {\n            return wcwidth;\n        }\n    })();\n    // -------------------------------------------------------------------------\n    function bare_text(string) {\n        if (!string.match(/&/)) {\n            return string;\n        }\n        return $('<span>' + safe(string) + '</span>').text();\n    }\n    // -------------------------------------------------------------------------\n    function text(string) {\n        return bare_text($.terminal.strip(string));\n    }\n    // -------------------------------------------------------------------------\n    function safe(string) {\n        if (!string.match(/[<>&]/)) {\n            return string;\n        }\n        return string.replace(/&(?![^;]+;)/g, '&amp;')\n            .replace(/>/g, '&gt;').replace(/</g, '&lt;');\n    }\n    // -------------------------------------------------------------------------\n    function crlf(string) {\n        return string.replace(/\\r/g, '');\n    }\n    // -------------------------------------------------------------------------\n    // :: function that return character from beginning of the string\n    // :: counting emoji, suroggate pairs and combine characters\n    // -------------------------------------------------------------------------\n    function get_next_character(string) {\n        var match_emoji = string.match(emoji_re);\n        if (match_emoji) {\n            return match_emoji[1];\n        } else if (string.substring(0, 2).replace(astral_symbols_re, '_') === 1) {\n            if (string.substring(1).match(combine_chr_re)) {\n                return string.substring(0, 3);\n            }\n            return string.substring(0, 2);\n        } else {\n            var match_combo = string.match(combine_chr_re);\n            if (match_combo) {\n                return match_combo[1];\n            }\n            return string[0];\n        }\n    }\n    // -------------------------------------------------------------------------\n    // normalize position for counting emoji and extra chars\n    // -------------------------------------------------------------------------\n    function normalize_position(string, position) {\n        if (position === 0) {\n            return position;\n        }\n        string = $.terminal.strip(string);\n        var result = $.terminal.split_characters(string).reduce(function(acc, chr) {\n            if (typeof acc === 'number') {\n                return acc;\n            }\n            var length = acc.length + chr.length;\n            if (length >= position) {\n                return acc.position + 1;\n            }\n            return {\n                position: acc.position + 1,\n                length: length\n            };\n        }, {position: 0, length: 0});\n        if (typeof result === 'number') {\n            return result;\n        } else {\n            return result.position;\n        }\n    }\n    // -------------------------------------------------------------------------\n    function char_width_prop(len, options) {\n        if (is_ch_unit_supported) {\n            return 'width: ' + len + 'ch';\n        } else if (!is_css_variables_supported) {\n            if (options.char_width) {\n                return 'width: ' + (options.char_width * len) + 'px';\n            }\n        } else {\n            return '--length: ' + len;\n        }\n        return '';\n    }\n    // -------------------------------------------------------------------------\n    function extra_css(text, options) {\n        if (typeof wcwidth !== 'undefined') {\n            var bare = bare_text(text);\n            var len = strlen(bare);\n            if (len !== $.terminal.length(bare)) {\n                return char_width_prop(len, options);\n            }\n        }\n        return '';\n    }\n    // -------------------------------------------------------------------------\n    function wide_characters(text, options) {\n        if (typeof wcwidth !== 'undefined') {\n            var bare = bare_text(text);\n            var chars = $.terminal.split_characters(bare);\n            if (chars.length === 1) {\n                return text;\n            }\n            var specs = chars.map(function(chr) {\n                return {len: strlen(chr), chr: chr};\n            }).reduce(function(arr, spec) {\n                var last = arr[arr.length - 1];\n                if (last) {\n                    if (last.len !== spec.len) {\n                        return arr.concat([{\n                            sum: spec.len,\n                            len: spec.len,\n                            str: spec.chr\n                        }]);\n                    } else {\n                        arr.pop();\n                        return arr.concat([{\n                            sum: last.sum + spec.len,\n                            len: last.len,\n                            str: last.str + spec.chr\n                        }]);\n                    }\n                }\n                return [{\n                    sum: spec.len,\n                    str: spec.chr,\n                    len: spec.len\n                }];\n            }, []);\n            return specs.map(function(spec) {\n                if (spec.len === 1) {\n                    return spec.str;\n                }\n                var style = char_width_prop(spec.sum, options);\n                if (spec.sum === chars.length || !style.length) {\n                    return '<span>' + spec.str + '</span>';\n                } else {\n                    return '<span style=\"' + style + '\">' + spec.str + '</span>';\n                }\n            }).join('');\n        }\n        return text;\n    }\n    // ---------------------------------------------------------------------\n    // :: Binary search utility\n    // ---------------------------------------------------------------------\n    function binary_search(start, end, search_pos, compare_fn) {\n        var len = end - start;\n        var mid = start + Math.floor(len / 2);\n        var cmp = compare_fn(search_pos, mid);\n        if (cmp === 0) {\n            return mid;\n        } else if (cmp > 0 && len > 1) {\n            return binary_search(\n                mid,\n                end,\n                search_pos,\n                compare_fn\n            );\n        } else if (cmp < 0 && len > 1) {\n            return binary_search(\n                start,\n                mid,\n                search_pos,\n                compare_fn\n            );\n        } else {\n            return -1;\n        }\n    }\n    // ---------------------------------------------------------------------\n    // :: Cross-Browser selection utils\n    // ---------------------------------------------------------------------\n    var get_selected_text = (function() {\n        if (window.getSelection || document.getSelection) {\n            return function() {\n                var selection = (window.getSelection || document.getSelection)();\n                if (selection.text) {\n                    return selection.text;\n                } else {\n                    return selection.toString();\n                }\n            };\n        } else if (document.selection && document.selection.type !== \"Control\") {\n            return function() {\n                return document.selection.createRange().text;\n            };\n        }\n        return function() {\n            return '';\n        };\n    })();\n    // ---------------------------------------------------------------------\n    // :: try to copy given DOM element text to clipboard\n    // -----------------------------------------------------------------------\n    function text_to_clipboard(container, text) {\n        var $div = $('<div>' + text.replace(/\\n/, '<br/>') + '<div>');\n        $div.appendTo('body');\n        select_all($div[0]);\n        try {\n            document.execCommand('copy');\n        } catch (e) {}\n        $div.remove();\n    }\n    // ---------------------------------------------------------------------\n    var get_textarea_selection = (function() {\n        var textarea = document.createElement('textarea');\n        var selectionStart = 'selectionStart' in textarea;\n        textarea = null;\n        if (selectionStart) {\n            return function(textarea) {\n                var length = textarea.selectionEnd - textarea.selectionStart;\n                return textarea.value.substr(textarea.selectionStart, length);\n            };\n        } else if (document.selection) {\n            return function() {\n                var range = document.selection.createRange();\n                return range.text();\n            };\n        } else {\n            return function() {\n                return '';\n            };\n        }\n    })();\n    // ---------------------------------------------------------------------\n    function clear_textarea_selection(textarea) {\n        textarea.selectionStart = textarea.selectionEnd = 0;\n    }\n    // ---------------------------------------------------------------------\n    // :: return string that are common in all elements of the array\n    // ---------------------------------------------------------------------\n    function common_string(string, array, matchCase) {\n        if (!array.length) {\n            return '';\n        }\n        var type = string_case(string);\n        var result = [];\n        for (var j = string.length; j < array[0].length; ++j) {\n            var push = false;\n            var candidate = array[0].charAt(j),\n                candidateLower = candidate.toLowerCase();\n            for (var i = 1; i < array.length; ++i) {\n                push = true;\n                var current = array[i].charAt(j),\n                    currentLower = current.toLowerCase();\n                if (candidate !== current) {\n                    if (matchCase || type === 'mixed') {\n                        push = false;\n                        break;\n                    } else if (candidateLower === currentLower) {\n                        if (type === 'lower') {\n                            candidate = candidate.toLowerCase();\n                        } else if (type === 'upper') {\n                            candidate = candidate.toUpperCase();\n                        } else {\n                            push = false;\n                            break;\n                        }\n                    } else {\n                        push = false;\n                        break;\n                    }\n                }\n            }\n            if (push) {\n                result.push(candidate);\n            } else {\n                break;\n            }\n        }\n        return string + result.join('');\n    }\n    // ---------------------------------------------------------------------\n    function trigger_terminal_change(next) {\n        terminals.forEach(function(term) {\n            term.settings().onTerminalChange.call(term, next);\n        });\n    }\n    // ---------------------------------------------------------------------\n    var select = (function() {\n        if (window.getSelection) {\n            var selection = window.getSelection();\n            if (selection.setBaseAndExtent) {\n                return function(start, end) {\n                    var selection = window.getSelection();\n                    selection.setBaseAndExtent(start, 0, end, 1);\n                };\n            } else {\n                return function(start, end) {\n                    var selection = window.getSelection();\n                    var range = document.createRange();\n                    range.setStart(start, 0);\n                    range.setEnd(end, end.childNodes.length);\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                };\n            }\n        } else {\n            return $.noop;\n        }\n    })();\n    // ---------------------------------------------------------------------\n    function select_all(element) {\n        if (window.getSelection) {\n            var selection = window.getSelection();\n            if (selection.setBaseAndExtent) {\n                selection.setBaseAndExtent(element, 0, element, 1);\n            } else if (document.createRange) {\n                var range = document.createRange();\n                range.selectNodeContents(element);\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n        }\n    }\n    // -------------------------------------------------------------------------\n    function process_command(string, fn) {\n        var array = string.match(command_re) || [];\n        if (array.length) {\n            var name = array.shift();\n            var args = $.map(array, function(arg) {\n                if (arg.match(/^[\"']/)) {\n                    arg = arg.replace(/\\n/g, '\\\\u0000\\\\u0000\\\\u0000\\\\u0000');\n                    arg = fn(arg);\n                    return arg.replace(/\\x00\\x00\\x00\\x00/g, '\\n');\n                }\n                return fn(arg);\n            });\n            var quotes = $.map(array, function(arg) {\n                var m = arg.match(/^(['\"]).*\\1$/);\n                return m && m[1] || '';\n            });\n            var rest = string.substring(name.length).trim();\n            return {\n                command: string,\n                name: name,\n                args: args,\n                args_quotes: quotes,\n                rest: rest\n            };\n        } else {\n            return {\n                command: string,\n                name: '',\n                args: [],\n                args_quotes: quotes,\n                rest: ''\n            };\n        }\n    }\n    // -------------------------------------------------------------------------\n    $.terminal = {\n        version: '2.0.1',\n        date: 'Sun, 18 Nov 2018 12:07:27 +0000',\n        // colors from http://www.w3.org/wiki/CSS/Properties/color/keywords\n        color_names: [\n            'transparent', 'currentcolor', 'black', 'silver', 'gray', 'white',\n            'maroon', 'red', 'purple', 'fuchsia', 'green', 'lime', 'olive',\n            'yellow', 'navy', 'blue', 'teal', 'aqua', 'aliceblue',\n            'antiquewhite', 'aqua', 'aquamarine', 'azure', 'beige', 'bisque',\n            'black', 'blanchedalmond', 'blue', 'blueviolet', 'brown',\n            'burlywood', 'cadetblue', 'chartreuse', 'chocolate', 'coral',\n            'cornflowerblue', 'cornsilk', 'crimson', 'cyan', 'darkblue',\n            'darkcyan', 'darkgoldenrod', 'darkgray', 'darkgreen', 'darkgrey',\n            'darkkhaki', 'darkmagenta', 'darkolivegreen', 'darkorange',\n            'darkorchid', 'darkred', 'darksalmon', 'darkseagreen',\n            'darkslateblue', 'darkslategray', 'darkslategrey', 'darkturquoise',\n            'darkviolet', 'deeppink', 'deepskyblue', 'dimgray', 'dimgrey',\n            'dodgerblue', 'firebrick', 'floralwhite', 'forestgreen', 'fuchsia',\n            'gainsboro', 'ghostwhite', 'gold', 'goldenrod', 'gray', 'green',\n            'greenyellow', 'grey', 'honeydew', 'hotpink', 'indianred', 'indigo',\n            'ivory', 'khaki', 'lavender', 'lavenderblush', 'lawngreen',\n            'lemonchiffon', 'lightblue', 'lightcoral', 'lightcyan',\n            'lightgoldenrodyellow', 'lightgray', 'lightgreen', 'lightgrey',\n            'lightpink', 'lightsalmon', 'lightseagreen', 'lightskyblue',\n            'lightslategray', 'lightslategrey', 'lightsteelblue', 'lightyellow',\n            'lime', 'limegreen', 'linen', 'magenta', 'maroon',\n            'mediumaquamarine', 'mediumblue', 'mediumorchid', 'mediumpurple',\n            'mediumseagreen', 'mediumslateblue', 'mediumspringgreen',\n            'mediumturquoise', 'mediumvioletred', 'midnightblue', 'mintcream',\n            'mistyrose', 'moccasin', 'navajowhite', 'navy', 'oldlace', 'olive',\n            'olivedrab', 'orange', 'orangered', 'orchid', 'palegoldenrod',\n            'palegreen', 'paleturquoise', 'palevioletred', 'papayawhip',\n            'peachpuff', 'peru', 'pink', 'plum', 'powderblue', 'purple', 'red',\n            'rosybrown', 'royalblue', 'saddlebrown', 'salmon', 'sandybrown',\n            'seagreen', 'seashell', 'sienna', 'silver', 'skyblue', 'slateblue',\n            'slategray', 'slategrey', 'snow', 'springgreen', 'steelblue', 'tan',\n            'teal', 'thistle', 'tomato', 'turquoise', 'violet', 'wheat',\n            'white', 'whitesmoke', 'yellow', 'yellowgreen'],\n        // for unit tests\n        Cycle: Cycle,\n        History: History,\n        Stack: Stack,\n        // ---------------------------------------------------------------------\n        // :: Validate html color (it can be name or hex)\n        // ---------------------------------------------------------------------\n        valid_color: function valid_color(color) {\n            if (color.match(color_hex_re)) {\n                return true;\n            } else {\n                return $.inArray(color.toLowerCase(), $.terminal.color_names) !== -1;\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: function check if given string contain invalid strings\n        // ---------------------------------------------------------------------\n        unclosed_strings: function unclosed_strings(string) {\n            return !!string.match(unclosed_strings_re);\n        },\n        // ---------------------------------------------------------------------\n        // :: Escape all special regex characters, so it can be use as regex to\n        // :: match exact string that contain those characters\n        // ---------------------------------------------------------------------\n        escape_regex: function escape_regex(str) {\n            if (typeof str === 'string') {\n                var special = /([-\\\\^$[\\]()+{}?*.|])/g;\n                return str.replace(special, '\\\\$1');\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: test if string contain formatting\n        // ---------------------------------------------------------------------\n        have_formatting: function have_formatting(str) {\n            return typeof str === 'string' && !!str.match(format_exist_re);\n        },\n        is_formatting: function is_formatting(str) {\n            return typeof str === 'string' && !!str.match(format_full_re);\n        },\n        // ---------------------------------------------------------------------\n        // :: return array of formatting and text between them\n        // ---------------------------------------------------------------------\n        format_split: function format_split(str) {\n            return str.split(format_split_re).filter(Boolean);\n        },\n        // ---------------------------------------------------------------------\n        // :: replace that return position after replace for working with\n        // :: replacement that change length of the string\n        // :: source https://stackoverflow.com/a/46756077/387194\n        // ---------------------------------------------------------------------\n        tracking_replace: function tracking_replace(string, rex, replacement, position) {\n            function substring(string, start, end) {\n                return string.substring(start, end);\n            }\n            function length(string) {\n                return $.terminal.strip(string).length;\n            }\n            var new_string = \"\";\n            var match;\n            var index = 0;\n            var rep_string;\n            var new_position = position;\n            var start;\n            rex.lastIndex = 0; // Just to be sure\n            while ((match = rex.exec(string))) {\n                // if regex don't have g flag lastIndex will not work\n                if (rex.global) {\n                    // Add any of the original string we just skipped\n                    var last_index = length(substring(string, 0, rex.lastIndex));\n                    start = last_index - length(match[0]);\n                } else {\n                    start = match.index;\n                    last_index = start + length(match[0]);\n                }\n                if (index < start) {\n                    new_string += substring(string, index, start);\n                }\n                index = last_index;\n                // Build the replacement string. This just handles $$ and $n,\n                // you may want to add handling for $`, $', and $&.\n                if (typeof replacement === 'function') {\n                    rep_string = replacement.apply(null, match);\n                } else {\n                    rep_string = replacement.replace(/\\$(\\$|\\d)/g, function(m, c0) {\n                        if (c0 === \"$\") {\n                            return \"$\";\n                        }\n                        return match[c0];\n                    });\n                }\n                // Add on the replacement\n                new_string += rep_string;\n                // If the position is affected...\n                if (start < position) {\n                    // ... update it:\n                    if (last_index < position) {\n                        // It's after the replacement, move it\n                        new_position = Math.max(\n                            0,\n                            new_position +\n                            length(rep_string) -\n                            length(match[0])\n                        );\n                    } else {\n                        // It's *in* the replacement, put it just after\n                        new_position += length(rep_string) - (position - start);\n                    }\n                }\n                // If the regular expression doesn't have the g flag, break here so\n                // we do just one replacement (and so we don't have an endless loop!)\n                if (!rex.global) {\n                    break;\n                }\n            }\n            // Add on any trailing text in the string\n            if (index < length(string)) {\n                new_string += substring(string, index);\n            }\n            // Return the string and the updated position\n            if (string === new_string) {\n                return [string, position];\n            }\n            return [new_string, new_position];\n        },\n        // ---------------------------------------------------------------------\n        // :: helper function used by substring and split_equal it loop over\n        // :: string and execute callback with text count and other data\n        // ---------------------------------------------------------------------\n        iterate_formatting: function iterate_formatting(string, callback) {\n            function is_space(i) {\n                return string.substring(i - 6, i) === '&nbsp;' ||\n                    string.substring(i - 1, i).match(/\\s/);\n            }\n            // ----------------------------------------------------------------\n            var entity_re = /^(&(?:[a-z\\d]+|#\\d+|#x[a-f\\d]+);)/i;\n            function match_entity(index) {\n                return string.substring(index).match(entity_re);\n            }\n            // ----------------------------------------------------------------\n            function is_open_formatting(i) {\n                return string[i] === '[' && string[i + 1] === '[';\n            }\n            // ----------------------------------------------------------------\n            function is_escape_bracket(i) {\n                return string[i] === '\\\\' && string[i + 1] === ']';\n            }\n            // ----------------------------------------------------------------\n            function is_text(i) {\n                return not_formatting && (string[i] !== ']' || !have_formatting)\n                    && !opening;\n            }\n            // ----------------------------------------------------------------\n            var have_formatting = $.terminal.have_formatting(string);\n            var formatting = '';\n            var in_text = false;\n            var count = 0;\n            var match;\n            var space = -1;\n            var prev_space;\n            var length = 0;\n            var offset = 0;\n            for (var i = 0; i < string.length; i++) {\n                var substring = string.substring(i);\n                match = substring.match(format_start_re);\n                if (match) {\n                    formatting = match[1];\n                    in_text = false;\n                } else if (formatting) {\n                    if (string[i] === ']') {\n                        if (in_text) {\n                            formatting = '';\n                            in_text = false;\n                        } else {\n                            in_text = true;\n                        }\n                    }\n                } else {\n                    in_text = true;\n                }\n                var not_formatting = (formatting && in_text) || !formatting;\n                var opening = is_open_formatting(i);\n                if (is_space(i) && (not_formatting || opening)) {\n                    if (space === -1 && prev_space !== i || space !== -1) {\n                        space = i;\n                    }\n                }\n                var braket = string[i].match(/[[\\]]/);\n                if (not_formatting) {\n                    // treat entity as one character\n                    if (string[i] === '&') {\n                        match = match_entity(i);\n                        if (match) {\n                            i += match[1].length - 2; // 2 because continue adds 1 to i\n                            continue;\n                        }\n                        ++count;\n                        ++length;\n                    } else if (is_escape_bracket(i)) {\n                        // escape \\] and \\\\ counts as one character\n                        ++count;\n                        ++length;\n                        offset = 1;\n                        i += 1;\n                    } else if (!braket || !have_formatting) {\n                        ++count;\n                        ++length;\n                    }\n                }\n                if (is_text(i)) {\n                    if (strlen(string[i]) === 2) {\n                        length++;\n                    }\n                    var data = {\n                        count: count,\n                        index: i - offset,\n                        formatting: formatting,\n                        length: length,\n                        text: in_text,\n                        size: offset + 1,\n                        space: space\n                    };\n                    var ret = callback(data);\n                    if (ret === false) {\n                        break;\n                    } else if (ret) {\n                        if (ret.count !== undefined) {\n                            count = ret.count;\n                        }\n                        if (ret.length !== undefined) {\n                            length = ret.length;\n                        }\n                        if (ret.space !== undefined) {\n                            prev_space = space;\n                            space = ret.space;\n                        }\n                        if (ret.index !== undefined) {\n                            i = ret.index;\n                            continue;\n                        }\n                    }\n                } else if (i === string.length - 1) {\n                    callback({\n                        count: count + 1,\n                        index: i,\n                        formatting: formatting,\n                        length: 0,\n                        text: in_text,\n                        space: space\n                    });\n                }\n                // handle emoji, suroggate pairs and combine characters\n                var char = get_next_character(substring);\n                if (char.length > 1) {\n                    i += char.length - 1;\n                }\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: formatting aware substring function\n        // ---------------------------------------------------------------------\n        substring: function substring(string, start_index, end_index) {\n            var chars = $.terminal.split_characters(text(string));\n            if (!chars.slice(start_index, end_index).length) {\n                return '';\n            }\n            var start = 0;\n            var end;\n            var start_formatting = '';\n            var end_formatting = '';\n            var prev_index;\n            var re = /(&[^;]+);$/;\n            var offset = 1;\n            $.terminal.iterate_formatting(string, function(data) {\n                var m;\n                if (start_index && data.count === start_index + 1) {\n                    start = data.index;\n                    // correct index for html entity\n                    m = string.substring(0, start + 1).match(re);\n                    if (m) {\n                        start -= m[1].length;\n                    }\n                    if (data.formatting) {\n                        start_formatting = data.formatting;\n                    }\n                }\n                if (end_index && data.count === end_index) {\n                    end_formatting = data.formatting;\n                    prev_index = data.index;\n                    offset = data.size;\n                }\n                if (data.count === end_index + 1) {\n                    end = data.index;\n                    m = string.substring(0, end + 1).match(re);\n                    if (m) {\n                        end -= m[1].length;\n                    }\n                    if (data.formatting) {\n                        end = prev_index + offset;\n                    }\n                }\n            });\n            if (start_index && !start) {\n                return '';\n            }\n            if (end === undefined) {\n                end = string.length;\n            }\n            string = start_formatting + string.substring(start, end);\n            if (end_formatting) {\n                string = string.replace(/(\\[\\[^\\]]+)?\\]$/, '');\n                string += ']';\n            }\n            return string;\n        },\n        // ---------------------------------------------------------------------\n        // :: add format text as 5th paramter to formatting it's used for\n        // :: data attribute in format function\n        // ---------------------------------------------------------------------\n        normalize: function normalize(string) {\n            return string.replace(format_re, function(_, format, text) {\n                if (text === '') {\n                    return '';\n                }\n                function safe(string) {\n                    return string.replace(/\\\\\\]/g, '&#93;').replace(/\\n/g, '\\\\n')\n                        .replace(/&nbsp;/g, ' ');\n                }\n                format = safe(format);\n                var semicolons = format.match(/;/g).length;\n                // missing semicolons\n                if (semicolons >= 4) {\n                    var args = format.split(/;/);\n                    var start = args.slice(0, 4).join(';');\n                    var arg = args.slice(4).join(';');\n                    return '[[' + start + ';' + (arg || text) + ']' + text + ']';\n                } else if (semicolons === 2) {\n                    semicolons = ';;';\n                } else if (semicolons === 3) {\n                    semicolons = ';';\n                } else {\n                    semicolons = '';\n                }\n                // return '[[' + format + ']' + text + ']';\n                // closing braket will break formatting so we need to escape\n                // those using html entity equvalent\n                return '[[' + format + semicolons + safe(text) + ']' + text + ']';\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :: split text into lines with equal length so each line can be\n        // :: rendered separately (text formatting can be longer then a line).\n        // ---------------------------------------------------------------------\n        split_equal: function split_equal(str, length, keep_words) {\n            var prev_format = '';\n            var result = [];\n            var array = $.terminal.normalize(str).split(/\\n/g);\n            for (var i = 0, len = array.length; i < len; ++i) {\n                if (array[i] === '') {\n                    result.push('');\n                    continue;\n                }\n                var line = array[i];\n                var first_index = 0;\n                var output;\n                var line_length = line.length;\n                var chars = $.terminal.split_characters(text(line));\n                var last_char = chars[chars.length - 1];\n                var end_index = line_length - (last_char ? last_char.length : 1);\n                var last_bracket = !!line.match(/\\[\\[[^\\]]+\\](?:[^\\][]|\\\\\\])+\\]$/);\n                if (last_bracket) {\n                    end_index -= 1;\n                }\n                $.terminal.iterate_formatting(line, function(data) {\n                    var last_iteraction = data.index === end_index;\n                    var chr, substring;\n                    if (data.length >= length || last_iteraction ||\n                        (data.length === length - 1 &&\n                         strlen(line[data.index + 1]) === 2)) {\n                        var can_break = false;\n                        if (keep_words && data.space !== -1) {\n                            // replace html entities with characters\n                            var stripped = text(line.substring(data.space));\n                            // real length, not counting formatting\n                            var text_len = stripped.length;\n                            var limit = data.index + length + 1;\n                            stripped = stripped.substring(0, limit);\n                            if (stripped.match(/\\s|&nbsp;/) || limit > text_len) {\n                                can_break = true;\n                            }\n                        }\n                        // if words is true we split at last space and make next loop\n                        // continue where the space where located\n                        var new_index;\n                        if (keep_words && data.space !== -1 &&\n                            data.index !== line_length - 1 && can_break) {\n                            output = line.substring(first_index, data.space);\n                            new_index = data.space - 1;\n                        } else {\n                            substring = line.substring(data.index);\n                            chr = get_next_character(substring);\n                            output = line.substring(first_index, data.index) + chr;\n                            if (last_iteraction && last_bracket && chr !== ']') {\n                                output += ']';\n                            }\n                            new_index = data.index + chr.length - 1;\n                        }\n                        if (keep_words) {\n                            output = output.replace(/^(&nbsp;|\\s)+|(&nbsp;|\\s)+$/g, '');\n                        }\n                        first_index = (new_index || data.index) + 1;\n                        if (prev_format) {\n                            var closed_formatting = output.match(/^[^\\]]*\\]/);\n                            output = prev_format + output;\n                            if (closed_formatting) {\n                                prev_format = '';\n                            }\n                        }\n                        var matched = output.match(format_re);\n                        if (matched) {\n                            var last = matched[matched.length - 1];\n                            if (last[last.length - 1] !== ']') {\n                                prev_format = last.match(format_begin_re)[1];\n                                output += ']';\n                            } else if (output.match(format_end_re)) {\n                                output = output.replace(format_end_re, '');\n                                prev_format = last.match(format_begin_re)[1];\n                            }\n                        }\n                        result.push(output);\n                        // modify loop by returing new data\n                        return {index: new_index, length: 0, space: -1};\n                    }\n                });\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: Escape & that's not part of entity\n        // ---------------------------------------------------------------------\n        amp: function amp(str) {\n            return str.replace(/&(?!#[0-9]+;|[a-zA-Z]+;)/g, '&amp;');\n        },\n        // ---------------------------------------------------------------------\n        // :: Encode formating as html for insertion into DOM\n        // ---------------------------------------------------------------------\n        encode: function encode(str, options) {\n            var settings = $.extend({\n                tabs: 4,\n                before: ''\n            }, options);\n            return $.terminal.amp(str).replace(/</g, '&lt;').replace(/>/g, '&gt;')\n                .replace(/ /g, '&nbsp;').split('\\n').map(function(line) {\n                    var splitted = line.split(/((?:\\[\\[[^\\]]+\\])?\\t(?:\\])?)/);\n                    splitted = splitted.filter(Boolean);\n                    return splitted.map(function(str, i) {\n                        if (str.match(/\\t/)) {\n                            return str.replace(/\\t([^\\t]*)$/, function(_, end) {\n                                if (i !== 0 && splitted[i - 1].match(/\\t\\]?$/)) {\n                                    var sp = new Array(settings.tabs + 1).join('&nbsp;');\n                                    return sp + end;\n                                } else {\n                                    var before = splitted.slice(i - 1, i).join('');\n                                    if (settings.before && i <= 1) {\n                                        before = settings.before + before;\n                                    }\n                                    var len = $.terminal.length(before);\n                                    var chars = settings.tabs - (len % settings.tabs);\n                                    if (chars === 0) {\n                                        chars = 4;\n                                    }\n                                    return new Array(chars + 1).join('&nbsp;') + end;\n                                }\n                            });\n                        }\n                        return str;\n                    }).join('');\n                }).join('\\n');\n        },\n        // -----------------------------------------------------------------------\n        // :: Default formatter that allow for nested formatting, example:\n        // :: [[;;#000]hello [[;#f00;]red] world]\n        // -----------------------------------------------------------------------\n        nested_formatting: function nested_formatting(string) {\n            if (!$.terminal.have_formatting(string)) {\n                return string;\n            }\n            var stack = [];\n            var re = /((?:\\[\\[(?:[^\\][]|\\\\\\])+\\])?(?:[^\\][]|\\\\\\])*\\]?)/;\n            var format_re = /(\\[\\[(?:[^\\][]|\\\\\\])+\\])[\\s\\S]*/;\n            return string.split(re).filter(Boolean).map(function(string) {\n                if (string.match(/^\\[\\[/)) {\n                    if (!$.terminal.is_formatting(string)) {\n                        string += ']';\n                        stack.push(string.replace(format_re, '$1'));\n                    }\n                } else {\n                    var pop = false;\n                    if (string.match(/\\]/)) {\n                        pop = true;\n                    }\n                    if (stack.length) {\n                        string = stack[stack.length - 1] + string;\n                    }\n                    if (pop) {\n                        stack.pop();\n                    } else if (stack.length) {\n                        string += ']';\n                    }\n                }\n                return string;\n            }).join('');\n        },\n        // ---------------------------------------------------------------------\n        // :: safe function that will render text as it is\n        // ---------------------------------------------------------------------\n        escape_formatting: function escape_formatting(string) {\n            return $.terminal.escape_brackets(string);\n        },\n        // ---------------------------------------------------------------------\n        // :: apply custom formatters only to text\n        // ---------------------------------------------------------------------\n        apply_formatters: function apply_formatters(string, settings) {\n            if (string === \"\") {\n                if (typeof settings.position === 'number') {\n                    return [\"\", settings.position];\n                } else {\n                    return \"\";\n                }\n            }\n            function test_lengths(formatter, index, ret, string) {\n                if (!formatter.__no_warn__ &&\n                    $.terminal.length(ret) !== $.terminal.length(string)) {\n                    warn('Your formatter[' + index + '] change length of the string, ' +\n                         'you should use [regex, replacement] formatter or function ' +\n                         ' that return [replacement, position] instead');\n                }\n            }\n            var formatters = $.terminal.defaults.formatters;\n            settings = settings || {};\n            var i = 0;\n            function apply_function_formatter(formatter, input) {\n                var options = $.extend({}, settings, {\n                    position: input[1]\n                });\n                var ret = formatter(input[0], options);\n                if (typeof ret === 'string') {\n                    test_lengths(formatter, i - 1, ret, input[0]);\n                    if (typeof ret === 'string') {\n                        return [ret, options.position];\n                    }\n                    return input;\n                } else if (ret instanceof Array && ret.length === 2) {\n                    return ret;\n                } else {\n                    return input;\n                }\n            }\n            var input;\n            if (typeof settings.position === 'number') {\n                input = [string, settings.position];\n            } else {\n                input = [string, 0];\n            }\n            try {\n                var result = formatters.reduce(function(input, formatter) {\n                    i++;\n                    // __meta__ is for safe formatter that can handle formatters\n                    // inside formatters. for other usage we use format_split so one\n                    // formatter don't mess with formatter that was previous\n                    // on the list\n                    if (typeof formatter === 'function' && formatter.__meta__) {\n                        return apply_function_formatter(formatter, input);\n                    } else {\n                        var length = 0;\n                        var found_position = false;\n                        var splitted = $.terminal.format_split(input[0]);\n                        var partials = splitted.map(function(string) {\n                            var position;\n                            var this_len = text(string).length;\n                            // first position that match is used for this partial\n                            if (input[1] <= length + this_len && !found_position) {\n                                position = input[1] - length;\n                                found_position = true;\n                            } else {\n                                // -1 indicate that we will not track position because it\n                                // was in one of the previous parial strings\n                                position = -1;\n                            }\n                            // length is used to correct position after replace\n                            var length_before = length;\n                            var result;\n                            length += this_len;\n                            if ($.terminal.is_formatting(string)) {\n                                return [string, -1];\n                            } else {\n                                if (formatter instanceof Array) {\n                                    var options = formatter[2] || {};\n                                    result = [string, position < 0 ? 0 : position];\n                                    if (result[0].match(formatter[0])) {\n                                        if (options.loop) {\n                                            while (result[0].match(formatter[0])) {\n                                                result = $.terminal.tracking_replace(\n                                                    result[0],\n                                                    formatter[0],\n                                                    formatter[1],\n                                                    result[1]\n                                                );\n                                            }\n                                        } else {\n                                            result = $.terminal.tracking_replace(\n                                                result[0],\n                                                formatter[0],\n                                                formatter[1],\n                                                result[1]\n                                            );\n                                        }\n                                    }\n                                    if (position < 0) {\n                                        return [result[0], -1];\n                                    }\n                                } else if (typeof formatter === 'function') {\n                                    result = apply_function_formatter(formatter, [\n                                        string, position\n                                    ]);\n                                }\n                                if (typeof result !== 'undefined') {\n                                    // correct position becuase it's relative\n                                    // to partial and we need global for whole string\n                                    if (result[1] !== -1) {\n                                        result[1] += length_before;\n                                    }\n                                    return result;\n                                }\n                                return [string, -1];\n                            }\n                        });\n                        var position_partial = partials.filter(function(partial) {\n                            return partial[1] !== -1;\n                        })[0];\n                        var string = partials.map(function(partial) {\n                            return partial[0];\n                        }).join('');\n                        var position;\n                        if (typeof position_partial === 'undefined') {\n                            position = input[1];\n                        } else {\n                            position = position_partial[1];\n                        }\n                        // to make sure that output position is not outside the string\n                        var max = text(string).length;\n                        if (position > max) {\n                            position = max;\n                        }\n                        if (string === input[0]) {\n                            return input;\n                        }\n                        return [string, position];\n                    }\n                }, input);\n                if (typeof settings.position === 'number') {\n                    var codepoint_len = $.terminal.strip(result[0]).length;\n                    if ($.terminal.length(result[0]) < codepoint_len) {\n                        var position = result[1];\n                        position = normalize_position(result[0], position);\n                        var max = $.terminal.length(result[0]);\n                        if (position > max) {\n                            position = max;\n                        }\n                        result[1] = position;\n                    }\n                    return result;\n                } else {\n                    return result[0];\n                }\n            } catch (e) {\n                var msg = 'Error in formatter [' + (i - 1) + ']';\n                formatters.splice(i - 1);\n                throw new $.terminal.Exception('formatting', msg, e.stack);\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: Replace terminal formatting with html\n        // ---------------------------------------------------------------------\n        format: function format(str, options) {\n            function safe_text(string) {\n                if (string.match(/\\\\]/)) {\n                    string = string.replace(/(\\\\+)]/g, function(_, slashes) {\n                        if (slashes.length % 2 === 1) {\n                            return ']';\n                        } else {\n                            return slashes.replace(/../, '\\\\');\n                        }\n                    });\n                }\n                return safe(string);\n            }\n            var settings = $.extend({}, {\n                linksNoReferrer: false,\n                linksNoFollow: false,\n                anyLinks: false\n            }, options || {});\n            if (typeof str === 'string') {\n                // support for formating foo[[u;;]bar]baz[[b;#fff;]quux]zzz\n                var splitted = $.terminal.format_split(str);\n                str = $.map(splitted, function(text) {\n                    if (text === '') {\n                        return text;\n                    } else if ($.terminal.is_formatting(text)) {\n                        // fix &nbsp; inside formatting because encode is called\n                        // before format\n                        text = text.replace(/\\[\\[[^\\]]+\\]/, function(text) {\n                            return text.replace(/&nbsp;/g, ' ');\n                        });\n                        return text.replace(format_parts_re, function(\n                            s,\n                            style,\n                            color,\n                            background,\n                            _class,\n                            data_text,\n                            text\n                        ) {\n                            if (text === '') {\n                                return ''; //'<span>&nbsp;</span>';\n                            }\n                            text = safe_text(text);\n                            var style_str = '';\n                            if (style.indexOf('b') !== -1) {\n                                style_str += 'font-weight:bold;';\n                            }\n                            var text_decoration = [];\n                            if (style.indexOf('u') !== -1) {\n                                text_decoration.push('underline');\n                            }\n                            if (style.indexOf('s') !== -1) {\n                                text_decoration.push('line-through');\n                            }\n                            if (style.indexOf('o') !== -1) {\n                                text_decoration.push('overline');\n                            }\n                            if (text_decoration.length) {\n                                style_str += 'text-decoration:' +\n                                    text_decoration.join(' ') + ';';\n                            }\n                            if (style.indexOf('i') !== -1) {\n                                style_str += 'font-style:italic;';\n                            }\n                            if ($.terminal.valid_color(color)) {\n                                style_str += 'color:' + color + ';' +\n                                    '--color:' + color + ';';\n                                if (style.indexOf('g') !== -1) {\n                                    style_str += 'text-shadow:0 0 5px ' + color + ';';\n                                }\n                            }\n                            if ($.terminal.valid_color(background)) {\n                                style_str += 'background-color:' + background + ';';\n                            }\n                            var data;\n                            if (data_text === '') {\n                                data = text;\n                            } else {\n                                data = data_text.replace(/&#93;/g, ']')\n                                    .replace(/>/g, '&gt;').replace(/</g, '&lt;');\n                            }\n                            var extra = extra_css(text, options);\n                            if (extra) {\n                                text = wide_characters(text, options);\n                                style_str += extra;\n                            }\n                            var result;\n                            if (style.indexOf('!') !== -1) {\n                                if (data.match(email_re)) {\n                                    result = '<a href=\"mailto:' + data + '\"';\n                                } else {\n                                    if (!settings.anyLinks &&\n                                        !data.match(/^((https?|ftp):\\/\\/|\\.{0,2}\\/)/)) {\n                                        data = '';\n                                    }\n                                    result = '<a target=\"_blank\"';\n                                    if (data) {\n                                        result += ' href=\"' + data + '\"';\n                                    }\n                                    var rel = [\"noopener\"];\n                                    if (settings.linksNoReferrer) {\n                                        rel.unshift(\"noreferrer\");\n                                    }\n                                    if (settings.linksNoFollow) {\n                                        rel.unshift(\"nofollow\");\n                                    }\n                                    result += ' rel=\"' + rel.join(' ') + '\"';\n                                }\n                                // make focus to terminal textarea that will enable\n                                // terminal when pressing tab and terminal is disabled\n                                result += ' tabindex=\"1000\"';\n                            } else {\n                                result = '<span';\n                            }\n                            if (style_str !== '') {\n                                result += ' style=\"' + style_str + '\"';\n                            }\n                            if (_class !== '') {\n                                result += ' class=\"' + _class + '\"';\n                            }\n                            if (style.indexOf('!') !== -1) {\n                                result += '>' + text + '</a>';\n                            } else {\n                                result += ' data-text=\"' +\n                                    data.replace(/\"/g, '&quote;') + '\">' +\n                                    text + '</span>';\n                            }\n                            return result;\n                        });\n                    } else {\n                        text = safe_text(text);\n                        var extra = extra_css(text, options);\n                        if (extra.length) {\n                            text = wide_characters(text, options);\n                            return '<span style=\"' + extra + '\">' + text + '</span>';\n                        } else {\n                            return '<span>' + text + '</span>';\n                        }\n                    }\n                }).join('');\n                return str.replace(/<span><br\\s*\\/?><\\/span>/gi, '<br/>');\n            } else {\n                return '';\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: Replace brackets with html entities\n        // ---------------------------------------------------------------------\n        escape_brackets: function escape_brackets(string) {\n            return string.replace(/\\[/g, '&#91;').replace(/\\]/g, '&#93;');\n        },\n        // ---------------------------------------------------------------------\n        // :: complmentary function\n        // ---------------------------------------------------------------------\n        unescape_brackets: function unescape_brackets(string) {\n            return string.replace(/&#91;/g, '[').replace(/&#93;/g, ']');\n        },\n        // ---------------------------------------------------------------------\n        // :: return number of characters without formatting\n        // ---------------------------------------------------------------------\n        length: function(string) {\n            return $.terminal.split_characters(text(string)).length;\n        },\n        // ---------------------------------------------------------------------\n        // :: split characters handling emoji, surogate pairs and combine chars\n        // ---------------------------------------------------------------------\n        split_characters: function split_characters(string) {\n            var result = [];\n            while (string.length) {\n                var chr = get_next_character(string);\n                string = string.substring(chr.length);\n                result.push(chr);\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: return string where array items are in columns padded spaces\n        // :: after adding align tabs arr.join('\\t\\t') looks much better\n        // ---------------------------------------------------------------------\n        columns: function(array, cols, space) {\n            var no_formatting = array.map(function(string) {\n                return $.terminal.strip(string);\n            });\n            var lengths = no_formatting.map(function(string) {\n                return strlen(string);\n            });\n            if (typeof space === 'undefined') {\n                space = 4;\n            }\n            var length = Math.max.apply(null, lengths) + space;\n            // we need value - 1 because index starts from 0\n            var column_limit = Math.floor(cols / length) - 1;\n            if (column_limit < 1) {\n                return array.join('\\n');\n            }\n            var lines = [];\n            for (var i = 0, len = array.length; i < len; i += column_limit) {\n                var line = array.slice(i, i + column_limit);\n                var last = line.pop();\n                lines.push(line.reduce(function(acc, string) {\n                    var stripped = $.terminal.strip(string);\n                    var pad = new Array(length - stripped.length + 1).join(' ');\n                    acc.push(string + pad);\n                    return acc;\n                }, []).join('') + last);\n            }\n            return lines.join('\\n');\n        },\n        // ---------------------------------------------------------------------\n        // :: Remove formatting from text\n        // ---------------------------------------------------------------------\n        strip: function strip(str) {\n            str = str.replace(format_parts_re, '$6');\n            return str.replace(/\\\\([[\\]])/g, function(whole, bracket) {\n                return bracket;\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :: Return active terminal\n        // ---------------------------------------------------------------------\n        active: function active() {\n            return terminals.front();\n        },\n        // ---------------------------------------------------------------------\n        // :: Implmentation detail id is always length of terminals Cycle\n        // ---------------------------------------------------------------------\n        last_id: function last_id() {\n            var len = terminals.length();\n            return len - 1;\n        },\n        // ---------------------------------------------------------------------\n        // :: Function that works with strings like 'asd' 'asd\\' asd' \"asd asd\"\n        // :: asd\\ 123 -n -b / [^ ]+ / /\\s+/ asd\\ a it creates a regex and\n        // :: numbers and replaces escape characters in double quotes\n        // :: if strict is set to false it only strips single and double quotes\n        // :: and escapes spaces\n        // ---------------------------------------------------------------------\n        parse_argument: function parse_argument(arg, strict) {\n            function parse_string(string) {\n                // split string to string literals and non-strings\n                return string.split(string_re).map(function(string) {\n                    // remove quotes if before are even number of slashes\n                    // we don't remove slases becuase they are handled by JSON.parse\n                    if (string.match(/^['\"]/)) {\n                        // fixing regex to match empty string is not worth it\n                        if (string === '\"\"' || string === \"''\") {\n                            return '';\n                        }\n                        var quote = string[0];\n                        var re = new RegExp(\"(^|(?:\\\\\\\\(?:\\\\\\\\)*)?)\" + quote, \"g\");\n                        string = string.replace(re, \"$1\");\n                    }\n                    string = '\"' + string + '\"';\n                    // use build in function to parse rest of escaped characters\n                    return JSON.parse(string);\n                }).join('');\n            }\n            if (strict === false) {\n                if (arg[0] === \"'\" && arg[arg.length - 1] === \"'\") {\n                    return arg.replace(/^'|'$/g, '');\n                } else if (arg[0] === '\"' && arg[arg.length - 1] === '\"') {\n                    return arg.replace(/^\"|\"$/g, '').replace(/\\\\([\" ])/g, '$1');\n                } else if (arg.match(/\\/.*\\/[gimy]*$/)) {\n                    return arg;\n                } else if (arg.match(/['\"]]/)) {\n                    // part of arg is in quote\n                    return parse_string(arg);\n                } else {\n                    return arg.replace(/\\\\ /g, ' ');\n                }\n            }\n            var regex = arg.match(re_re);\n            if (regex) {\n                return new RegExp(regex[1], regex[2]);\n            } else if (arg.match(/['\"]/)) {\n                return parse_string(arg);\n            } else if (arg.match(/^-?[0-9]+$/)) {\n                return parseInt(arg, 10);\n            } else if (arg.match(float_re)) {\n                return parseFloat(arg);\n            } else {\n                return arg.replace(/\\\\(['\"() ])/g, '$1');\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: function split and parse arguments\n        // ---------------------------------------------------------------------\n        parse_arguments: function parse_arguments(string) {\n            return $.map(string.match(command_re) || [], $.terminal.parse_argument);\n        },\n        // ---------------------------------------------------------------------\n        // :: Function split and strips single and double quotes\n        // :: and escapes spaces\n        // ---------------------------------------------------------------------\n        split_arguments: function split_arguments(string) {\n            return $.map(string.match(command_re) || [], function(arg) {\n                return $.terminal.parse_argument(arg, false);\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :: Function that returns an object {name,args}. Arguments are parsed\n        // :: using the function parse_arguments\n        // ---------------------------------------------------------------------\n        parse_command: function parse_command(string) {\n            return process_command(string, $.terminal.parse_argument);\n        },\n        // ---------------------------------------------------------------------\n        // :: Same as parse_command but arguments are parsed using split_arguments\n        // ---------------------------------------------------------------------\n        split_command: function split_command(string) {\n            return process_command(string, function(arg) {\n                return $.terminal.parse_argument(arg, false);\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :; function that parse arguments like yargs library\n        // ---------------------------------------------------------------------\n        parse_options: function parse_options(arg, options) {\n            var settings = $.extend({}, {\n                boolean: []\n            }, options);\n            if (typeof arg === 'string') {\n                return parse_options($.terminal.split_arguments(arg), options);\n            }\n            var result = {\n                _: []\n            };\n            function token(value) {\n                this.value = value;\n            }\n            var rest = arg.reduce(function(acc, arg) {\n                if (typeof arg !== 'string') {\n                    arg = String(arg);\n                }\n                if (arg.match(/^-/) && acc instanceof token) {\n                    result[acc.value] = true;\n                }\n                if (arg.match(/^--/)) {\n                    var name = arg.replace(/^--/, '');\n                    if (settings.boolean.indexOf(name) === -1) {\n                        return new token(name);\n                    } else {\n                        result[name] = true;\n                    }\n                } else if (arg.match(/^-/)) {\n                    var single = arg.replace(/^-/, '').split('');\n                    if (settings.boolean.indexOf(single.slice(-1)[0]) === -1) {\n                        var last = single.pop();\n                    }\n                    single.forEach(function(single) {\n                        result[single] = true;\n                    });\n                    if (last) {\n                        return new token(last);\n                    }\n                } else if (acc instanceof token) {\n                    result[acc.value] = arg;\n                } else if (arg) {\n                    result._.push(arg);\n                }\n                return null;\n            }, null);\n            if (rest instanceof token) {\n                result[rest.value] = true;\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: function executed for each text inside [{ .... }]\n        // ---------------------------------------------------------------------\n        extended_command: function extended_command(term, string, options) {\n            var settings = $.extend({\n                invokeMethods: false\n            }, options);\n            try {\n                change_hash = false;\n                var m = string.match(extended_command_re);\n                if (m) {\n                    if (!settings.invokeMethods) {\n                        warn('To invoke terminal or cmd methods you need to enable ' +\n                             'invokeMethods option');\n                        return;\n                    }\n                    string = m[1];\n                    var obj = m[2] === 'terminal' ? term : term.cmd();\n                    var fn = m[3];\n                    try {\n                        var args = eval('[' + m[4] + ']');\n                        if (!obj[fn]) {\n                            term.error('Unknow function ' + fn);\n                        } else {\n                            obj[fn].apply(term, args);\n                        }\n                    } catch (e) {\n                        term.error('Invalid invocation in ' +\n                                   $.terminal.escape_brackets(string));\n                    }\n                } else {\n                    term.exec(string, true).done(function() {\n                        change_hash = true;\n                    });\n                }\n            } catch (e) {\n                // error is process in exec\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: ES6 iterator for a given string that handle emoji and formatting\n        // ---------------------------------------------------------------------\n        iterator: function(string) {\n            function formatting(string) {\n                if ($.terminal.is_formatting(string)) {\n                    if (string.match(/\\]\\\\\\]/)) {\n                        string = string.replace(/\\]\\\\\\]/g, ']\\\\\\\\]');\n                    }\n                }\n                return string;\n            }\n            if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n                var len = $.terminal.length(string);\n                var i = 0;\n                var obj = {};\n                obj[Symbol.iterator] = function() {\n                    return {\n                        next: function() {\n                            if (i < len) {\n                                var text = $.terminal.substring(string, i, i + 1);\n                                i++;\n                                return {\n                                    value: formatting(text)\n                                };\n                            } else {\n                                return {\n                                    done: true\n                                };\n                            }\n                        }\n                    };\n                };\n                return obj;\n            }\n        },\n        // ---------------------------------------------------------------------\n        formatter: new (function() {\n            try {\n                this[Symbol.split] = function(string) {\n                    return $.terminal.format_split(string);\n                };\n                this[Symbol.match] = function(string) {\n                    return string.match(format_re);\n                };\n                this[Symbol.replace] = function(string, replacer) {\n                    return string.replace(format_parts_re, replacer);\n                };\n                this[Symbol.search] = function(string) {\n                    return string.search(format_re);\n                };\n            } catch (e) {\n            }\n        })(),\n        // ---------------------------------------------------------------------\n        // :: helper function that add formatter before nested_formatting\n        // ---------------------------------------------------------------------\n        new_formatter: function(formatter) {\n            var formatters = $.terminal.defaults.formatters;\n            for (var i = 0; i < formatters.length; ++i) {\n                if (formatters[i] === $.terminal.nested_formatting) {\n                    formatters.splice(i, 0, formatter);\n                    return;\n                }\n            }\n            formatters.push(formatter);\n        }\n    };\n    // -------------------------------------------------------------------------\n    $.terminal.Exception = function Terminal_Exception(type, message, stack) {\n        if (arguments.length === 1) {\n            this.message = arguments[0];\n            this.type = 'TERMINAL';\n        } else {\n            this.type = type;\n            this.message = message;\n            if (stack) {\n                this.stack = stack;\n            }\n        }\n    };\n    $.terminal.Exception.prototype = new Error();\n    $.terminal.Exception.prototype.toString = function() {\n        return this.message + '\\n' + this.stack;\n    };\n    // -----------------------------------------------------------------------\n    // Helper plugins and functions\n    // -----------------------------------------------------------------------\n    $.fn.visible = function() {\n        return this.css('visibility', 'visible');\n    };\n    $.fn.hidden = function() {\n        return this.css('visibility', 'hidden');\n    };\n    // -----------------------------------------------------------------------\n    var warnings = [];\n    function warn(msg) {\n        msg = '[jQuery Terminal] ' + msg;\n        if (warnings.indexOf(msg) === -1) {\n            warnings.push(msg);\n            /* eslint-disable */\n            if (console) {\n                if (console.warn) {\n                    console.warn(msg);\n                } else if (console.log) {\n                    console.log(msg);\n                }\n                /* eslint-enable */\n            } else {\n                // prevent catching in outer try..catch\n                setTimeout(function() {\n                    throw new Error('WARN: ' + msg);\n                }, 0);\n            }\n        }\n    }\n    // -----------------------------------------------------------------------\n    // JSON-RPC CALL\n    // -----------------------------------------------------------------------\n    var ids = {}; // list of url based ids of JSON-RPC\n    $.jrpc = function(url, method, params, success, error) {\n        var deferred = new $.Deferred();\n        var options;\n        if ($.isPlainObject(url)) {\n            options = url;\n        } else {\n            options = {\n                url: url,\n                method: method,\n                params: params,\n                success: success,\n                error: error\n            };\n        }\n        function validJSONRPC(response) {\n            return $.isNumeric(response.id) &&\n                (typeof response.result !== 'undefined' ||\n                 typeof response.error !== 'undefined');\n        }\n        ids[options.url] = ids[options.url] || 0;\n        var request = {\n            'jsonrpc': '2.0',\n            'method': options.method,\n            'params': options.params,\n            'id': ++ids[options.url]\n        };\n        $.ajax({\n            url: options.url,\n            beforeSend: function beforeSend(jxhr, settings) {\n                if (is_function(options.request)) {\n                    options.request(jxhr, request);\n                }\n                settings.data = JSON.stringify(request);\n            },\n            success: function success(response, status, jqXHR) {\n                var content_type = jqXHR.getResponseHeader('Content-Type');\n                if (!content_type.match(/(application|text)\\/json/)) {\n                    warn('Response Content-Type is neither application/json' +\n                         ' nor text/json');\n                }\n                var json;\n                try {\n                    json = JSON.parse(response);\n                } catch (e) {\n                    if (options.error) {\n                        options.error(jqXHR, 'Invalid JSON', e);\n                    } else {\n                        throw new $.terminal.Exception('JSON', 'Invalid JSON', e.stack);\n                    }\n                    deferred.reject({message: 'Invalid JSON', response: response});\n                    return;\n                }\n                if (is_function(options.response)) {\n                    options.response(jqXHR, json);\n                }\n                if (validJSONRPC(json) || options.method === 'system.describe') {\n                    // don't catch errors in success callback\n                    if (options.success) {\n                        options.success(json, status, jqXHR);\n                    }\n                    deferred.resolve(json);\n                } else {\n                    if (options.error) {\n                        options.error(jqXHR, 'Invalid JSON-RPC');\n                    }\n                    deferred.reject({message: 'Invalid JSON-RPC', response: response});\n                }\n            },\n            error: options.error,\n            contentType: 'application/json',\n            dataType: 'text',\n            async: true,\n            cache: false,\n            // timeout: 1,\n            type: 'POST'\n        });\n        return deferred.promise();\n    };\n\n    // -----------------------------------------------------------------------\n    /*\n    function is_scrolled_into_view(elem) {\n        var docViewTop = $(window).scrollTop();\n        var docViewBottom = docViewTop + $(window).height();\n\n        var elemTop = $(elem).offset().top;\n        var elemBottom = elemTop + $(elem).height();\n\n        return ((elemBottom >= docViewTop) && (elemTop <= docViewBottom));\n    }\n    */\n    // -----------------------------------------------------------------------\n    // :: Create fake terminal to calcualte the dimention of one character\n    // :: this will make terminal work if terminal div is not added to the\n    // :: DOM at init like with:\n    // :: $('<div/>').terminal().echo('foo bar').appendTo('body');\n    // -----------------------------------------------------------------------\n    function get_char_size(div) {\n        var temp = $('<div class=\"terminal temp\"><div class=\"terminal-output\">' +\n                     '<div><div class=\"line\" style=\"float: left\"><span>&nbsp;</span>' +\n                     '</div></div></div></div>').appendTo('body');\n        temp.addClass(div.attr('class'));\n        if (div) {\n            var style = div.attr('style');\n            if (style) {\n                style = style.split(/\\s*;\\s*/).filter(function(s) {\n                    return !s.match(/display\\s*:\\s*none/i);\n                }).join(';');\n                temp.attr('style', style);\n            }\n        }\n        var rect = temp.find('.line')[0].getBoundingClientRect();\n        var result = {\n            width: rect.width,\n            height: rect.height\n        };\n        temp.remove();\n        return result;\n    }\n    // -----------------------------------------------------------------------\n    // :: calculate numbers of characters\n    // -----------------------------------------------------------------------\n    function get_num_chars(terminal, char_size) {\n        var width = terminal.find('.terminal-fill').width();\n        var result = Math.floor(width / char_size.width);\n        // random number to not get NaN in node.js but big enough to\n        // not wrap exception\n        return result || 1000;\n    }\n    // -----------------------------------------------------------------------\n    // :: Calculate number of lines that fit without scroll\n    // -----------------------------------------------------------------------\n    function get_num_rows(terminal, char_size) {\n        return Math.floor(terminal.find('.terminal-fill').height() / char_size.height);\n    }\n    // -----------------------------------------------------------------------\n    function all(array, fn) {\n        var same = array.filter(function(item) {\n            return item[fn]() === item;\n        });\n        return same.length === array.length;\n    }\n    // -----------------------------------------------------------------------\n    function string_case(string) {\n        var array = string.split('');\n        if (all(array, 'toLowerCase')) {\n            return 'lower';\n        } else if (all(array, 'toUpperCase')) {\n            return 'upper';\n        } else {\n            return 'mixed';\n        }\n    }\n    // -----------------------------------------------------------------------\n    function same_case(string) {\n        return string_case(string) !== 'mixed';\n    }\n    // -----------------------------------------------------------------------\n    // fix for jQuery bug\n    function is_function(object) {\n        return get_type(object) === 'function';\n    }\n    // -----------------------------------------------------------------------\n    function get_type(object) {\n        return typeof object === 'function' ? 'function' : $.type(object);\n    }\n    // -----------------------------------------------------------------------\n    // :: TERMINAL PLUGIN CODE\n    // -----------------------------------------------------------------------\n    var version_set = !$.terminal.version.match(/^\\{\\{/);\n    var copyright = 'Copyright (c) 2011-2018 Jakub Jankiewicz <http://jcubic' +\n        '.pl/me>';\n    var version_string = version_set ? ' v. ' + $.terminal.version : ' ';\n    // regex is for placing version string aligned to the right\n    var reg = new RegExp(' {' + version_string.length + '}$');\n    var name_ver = 'jQuery Terminal Emulator' +\n        (version_set ? version_string : '');\n    // -----------------------------------------------------------------------\n    // :: Terminal Signatures\n    // -----------------------------------------------------------------------\n    var signatures = [\n        ['jQuery Terminal', '(c) 2011-2018 jcubic'],\n        [name_ver, copyright.replace(/^Copyright | *<.*>/g, '')],\n        [name_ver, copyright.replace(/^Copyright /, '')],\n        [\n            '      _______                 ________                        __',\n            '     / / _  /_ ____________ _/__  ___/______________  _____  / /',\n            ' __ / / // / // / _  / _/ // / / / _  / _/     / /  \\\\/ / _ \\\\/ /',\n            '/  / / // / // / ___/ // // / / / ___/ // / / / / /\\\\  / // / /__',\n            '\\\\___/____ \\\\\\\\__/____/_/ \\\\__ / /_/____/_//_/_/_/_/_/  \\\\/\\\\__\\\\_\\\\___/',\n            '         \\\\/          /____/                                   '\n                .replace(reg, ' ') + version_string,\n            copyright\n        ],\n        [\n            '      __ _____                     ________                            ' +\n                '  __',\n            '     / // _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___ ' +\n                ' / /',\n            ' __ / // // // // // _  // _// // / / // _  // _//     // //  \\\\/ // _ ' +\n                '\\\\/ /',\n            '/  / // // // // // ___// / / // / / // ___// / / / / // // /\\\\  // // ' +\n                '/ /__',\n            '\\\\___//____ \\\\\\\\___//____//_/ _\\\\_  / /_//____//_/ /_/ /_//_//_/ /_/ \\\\' +\n                '__\\\\_\\\\___/',\n            ('          \\\\/              /____/                                     ' +\n             '     ').replace(reg, '') + version_string,\n            copyright\n        ]\n    ];\n    // -----------------------------------------------------------------------\n    // :: Default options\n    // -----------------------------------------------------------------------\n    $.terminal.nested_formatting.__meta__ = true;\n    // nested formatting will always return different length so we silent the warning\n    $.terminal.nested_formatting.__no_warn__ = true;\n    $.terminal.defaults = {\n        prompt: '> ',\n        history: true,\n        exit: true,\n        clear: true,\n        enabled: true,\n        maskChar: '*',\n        wrap: true,\n        checkArity: true,\n        raw: false,\n        tabindex: 1,\n        invokeMethods: false,\n        exceptionHandler: null,\n        pauseEvents: true,\n        softPause: false,\n        memory: false,\n        cancelableAjax: true,\n        processArguments: true,\n        linksNoReferrer: false,\n        anyLinks: false,\n        linksNoFollow: false,\n        processRPCResponse: null,\n        completionEscape: true,\n        onCommandChange: null,\n        onPositionChange: null,\n        convertLinks: true,\n        extra: {},\n        tabs: 4,\n        historySize: 60,\n        scrollObject: null,\n        historyState: false,\n        importHistory: false,\n        historyFilter: null,\n        echoCommand: true,\n        scrollOnEcho: true,\n        login: null,\n        outputLimit: -1,\n        formatters: [$.terminal.nested_formatting],\n        onAjaxError: null,\n        pasteImage: true,\n        scrollBottomOffset: 20,\n        wordAutocomplete: true,\n        caseSensitiveAutocomplete: true,\n        caseSensitiveSearch: true,\n        clickTimeout: 200,\n        holdTimeout: 400,\n        holdRepeatTimeout: 200,\n        repeatTimeoutKeys: ['HOLD+BACKSPACE'],\n        request: $.noop,\n        response: $.noop,\n        describe: 'procs',\n        onRPCError: null,\n        doubleTab: null,\n        completion: false,\n        onInit: $.noop,\n        onClear: $.noop,\n        onBlur: $.noop,\n        onFocus: $.noop,\n        onTerminalChange: $.noop,\n        onExit: $.noop,\n        onPush: $.noop,\n        onPop: $.noop,\n        keypress: $.noop,\n        keydown: $.noop,\n        onAfterRedraw: $.noop,\n        onEchoCommand: $.noop,\n        onFlush: $.noop,\n        strings: {\n            comletionParameters: 'From version 1.0.0 completion function need to' +\n                ' have two arguments',\n            wrongPasswordTryAgain: 'Wrong password try again!',\n            wrongPassword: 'Wrong password!',\n            ajaxAbortError: 'Error while aborting ajax call!',\n            wrongArity: \"Wrong number of arguments. Function '%s' expects %s got\" +\n                ' %s!',\n            commandNotFound: \"Command '%s' Not Found!\",\n            oneRPCWithIgnore: 'You can use only one rpc with describe == false ' +\n                'or rpc without system.describe',\n            oneInterpreterFunction: \"You can't use more than one function (rpc \" +\n                'without system.describe or with option describe == false count' +\n                 's as one)',\n            loginFunctionMissing: \"You didn't specify a login function\",\n            noTokenError: 'Access denied (no token)',\n            serverResponse: 'Server responded',\n            wrongGreetings: 'Wrong value of greetings parameter',\n            notWhileLogin: \"You can't call `%s' function while in login\",\n            loginIsNotAFunction: 'Authenticate must be a function',\n            canExitError: \"You can't exit from main interpreter\",\n            invalidCompletion: 'Invalid completion',\n            invalidSelector: 'Sorry, but terminal said that you use invalid ' +\n                'selector!',\n            invalidTerminalId: 'Invalid Terminal ID',\n            login: 'login',\n            password: 'password',\n            recursiveCall: 'Recursive call detected, skip',\n            notAString: '%s function: argument is not a string',\n            redrawError: 'Internal error, wrong position in cmd redraw',\n            invalidStrings: 'Command %s have unclosed strings',\n            defunctTerminal: \"You can't call method on terminal that was destroyed\"\n        }\n    };\n    // -------------------------------------------------------------------------\n    // :: All terminal globals\n    // -------------------------------------------------------------------------\n    var requests = []; // for canceling on CTRL+D\n    var terminals = new Cycle(); // list of terminals global in this scope\n    // state for all terminals, terminals can't have own array fo state because\n    // there is only one popstate event\n    var save_state = []; // hold objects returned by export_view by history API\n    var hash_commands;\n    var change_hash = false; // don't change hash on Init\n    var fire_hash_change = true;\n    var first_instance = true; // used by history state\n    $.fn.terminal = function(init_interpreter, options) {\n        function StorageHelper(memory) {\n            if (memory) {\n                this.storage = {};\n            }\n            this.set = function(key, value) {\n                if (memory) {\n                    this.storage[key] = value;\n                } else {\n                    $.Storage.set(key, value);\n                }\n            };\n            this.get = function(key) {\n                if (memory) {\n                    return this.storage[key];\n                } else {\n                    return $.Storage.get(key);\n                }\n            };\n            this.remove = function(key) {\n                if (memory) {\n                    delete this.storage[key];\n                } else {\n                    $.Storage.remove(key);\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: helper function\n        // ---------------------------------------------------------------------\n        function get_processed_command(command) {\n            if ($.terminal.unclosed_strings(command)) {\n                var string = $.terminal.escape_brackets(command);\n                var message = sprintf(strings().invalidStrings, \"`\" + string + \"`\");\n                throw new $.terminal.Exception(message);\n            } else if (is_function(settings.processArguments)) {\n                return process_command(command, settings.processArguments);\n            } else if (settings.processArguments) {\n                return $.terminal.parse_command(command);\n            } else {\n                return $.terminal.split_command(command);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display object on terminal\n        // ---------------------------------------------------------------------\n        function display_object(object) {\n            if (typeof object === 'string') {\n                self.echo(object);\n            } else if (object instanceof Array) {\n                self.echo($.map(object, function(object) {\n                    return JSON.stringify(object);\n                }).join(' '));\n            } else if (typeof object === 'object') {\n                self.echo(JSON.stringify(object));\n            } else {\n                self.echo(object);\n            }\n        }\n        // Display line code in the file if line numbers are present\n        function print_line(url_spec) {\n            var re = /(.*):([0-9]+):([0-9]+)$/;\n            // google chrome have line and column after filename\n            var m = url_spec.match(re);\n            if (m) {\n                // TODO: do we need to call pause/resume or return promise?\n                self.pause(settings.softPause);\n                $.get(m[1], function(response) {\n                    var file = m[1];\n                    self.echo('[[b;white;]' + file + ']');\n                    var code = response.split('\\n');\n                    var n = +m[2] - 1;\n                    self.echo(code.slice(n - 2, n + 3).map(function(line, i) {\n                        if (i === 2) {\n                            line = '[[;#f00;]' +\n                                $.terminal.escape_brackets(line) + ']';\n                        }\n                        return '[' + (n + i - 1) + ']: ' + line;\n                    }).join('\\n')).resume();\n                }, 'text');\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function\n        // ---------------------------------------------------------------------\n        function display_json_rpc_error(error) {\n            if (is_function(settings.onRPCError)) {\n                settings.onRPCError.call(self, error);\n            } else {\n                self.error('&#91;RPC&#93; ' + error.message);\n                if (error.error && error.error.message) {\n                    error = error.error;\n                    // more detailed error message\n                    var msg = '\\t' + error.message;\n                    if (error.file) {\n                        msg += ' in file \"' + error.file.replace(/.*\\//, '') + '\"';\n                    }\n                    if (error.at) {\n                        msg += ' at line ' + error.at;\n                    }\n                    self.error(msg);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Create interpreter function from url string\n        // ---------------------------------------------------------------------\n        function make_basic_json_rpc(url, auth) {\n            var interpreter = function(method, params) {\n                self.pause(settings.softPause);\n                $.jrpc({\n                    url: url,\n                    method: method,\n                    params: params,\n                    request: function(jxhr, request) {\n                        try {\n                            settings.request.call(self, jxhr, request, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    response: function(jxhr, response) {\n                        try {\n                            settings.response.call(self, jxhr, response, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    success: function success(json) {\n                        if (json.error) {\n                            display_json_rpc_error(json.error);\n                        } else if (is_function(settings.processRPCResponse)) {\n                            settings.processRPCResponse.call(self, json.result, self);\n                        } else {\n                            display_object(json.result);\n                        }\n                        self.resume();\n                    },\n                    error: ajax_error\n                });\n            };\n            // this is the interpreter function\n            return function(command, terminal) {\n                if (command === '') {\n                    return;\n                }\n                try {\n                    command = get_processed_command(command);\n                } catch (e) {\n                    // exception can be thrown on invalid regex\n                    display_exception(e, 'TERMINAL (get_processed_command)');\n                    return;\n                    // throw e; // this will show stack in other try..catch\n                }\n                if (!auth || command.name === 'help') {\n                    // allows to call help without a token\n                    interpreter(command.name, command.args);\n                } else {\n                    var token = terminal.token();\n                    if (token) {\n                        interpreter(command.name, [token].concat(command.args));\n                    } else {\n                        // should never happen\n                        terminal.error('&#91;AUTH&#93; ' + strings().noTokenError);\n                    }\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: Create interpreter function from Object. If the value is object\n        // :: it will create nested interpreters\n        // ---------------------------------------------------------------------\n        function make_object_interpreter(object, arity, login, fallback) {\n            // function that maps commands to object methods\n            // it keeps terminal context\n            return function(user_command, terminal) {\n                if (user_command === '') {\n                    return;\n                }\n                // command = split_command_line(command);\n                var command;\n                try {\n                    command = get_processed_command(user_command);\n                } catch (e) {\n                    // exception can be thrown on invalid regex\n                    if (is_function(settings.exception)) {\n                        settings.exception(e, self);\n                    } else {\n                        self.error('Error: ' + (e.message || e));\n                    }\n                    return;\n                    // throw e; // this will show stack in other try..catch\n                }\n                /*\n                if (login) {\n                    var token = self.token(true);\n                    if (token) {\n                        command.args = [token].concat(command.args);\n                    } else {\n                        terminal.error('&#91;AUTH&#93; ' + strings.noTokenError);\n                        return;\n                    }\n                }*/\n                var val = object[command.name];\n                var type = get_type(val);\n                if (type === 'function') {\n                    if (arity && val.length !== command.args.length) {\n                        self.error(\n                            '&#91;Arity&#93; ' +\n                                sprintf(\n                                    strings().wrongArity,\n                                    command.name,\n                                    val.length,\n                                    command.args.length\n                                )\n                        );\n                    } else {\n                        return val.apply(self, command.args);\n                    }\n                } else if (type === 'object' || type === 'string') {\n                    var commands = [];\n                    if (type === 'object') {\n                        commands = Object.keys(val);\n                        val = make_object_interpreter(\n                            val,\n                            arity,\n                            login\n                        );\n                    }\n                    terminal.push(val, {\n                        prompt: command.name + '> ',\n                        name: command.name,\n                        completion: type === 'object' ? commands : undefined\n                    });\n                } else if (is_function(fallback)) {\n                    fallback(user_command, self);\n                } else if (is_function(settings.onCommandNotFound)) {\n                    settings.onCommandNotFound.call(self, user_command, self);\n                } else {\n                    terminal.error(sprintf(strings().commandNotFound, command.name));\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        function ajax_error(xhr, status, error) {\n            self.resume(); // onAjaxError can use pause/resume call it first\n            if (is_function(settings.onAjaxError)) {\n                settings.onAjaxError.call(self, xhr, status, error);\n            } else if (status !== 'abort') {\n                self.error('&#91;AJAX&#93; ' + status + ' - ' +\n                           strings().serverResponse + ':\\n' +\n                           $.terminal.escape_brackets(xhr.responseText));\n            }\n        }\n        // ---------------------------------------------------------------------\n        function make_json_rpc_object(url, auth, success) {\n            function jrpc_success(json) {\n                if (json.error) {\n                    display_json_rpc_error(json.error);\n                } else if (is_function(settings.processRPCResponse)) {\n                    settings.processRPCResponse.call(self, json.result, self);\n                } else {\n                    display_object(json.result);\n                }\n                self.resume();\n            }\n            function jrpc_request(jxhr, request) {\n                try {\n                    settings.request.call(self, jxhr, request, self);\n                } catch (e) {\n                    display_exception(e, 'USER');\n                }\n            }\n            function jrpc_response(jxhr, response) {\n                try {\n                    settings.response.call(self, jxhr, response, self);\n                } catch (e) {\n                    display_exception(e, 'USER');\n                }\n            }\n            function response(response) {\n                var procs = response;\n                // we check if it's false before we call this function but\n                // it don't hurt to be explicit here\n                if (settings.describe !== '') {\n                    settings.describe.split('.').forEach(function(field) {\n                        procs = procs[field];\n                    });\n                }\n                if (procs && procs.length) {\n                    var interpreter_object = {};\n                    $.each(procs, function(_, proc) {\n                        if ($.isPlainObject(proc) && typeof proc.name === 'string') {\n                            interpreter_object[proc.name] = function() {\n                                var append = auth && proc.name !== 'help';\n                                var args = Array.prototype.slice.call(arguments);\n                                var args_len = args.length + (append ? 1 : 0);\n                                if (settings.checkArity && proc.params &&\n                                    proc.params.length !== args_len) {\n                                    self.error(\n                                        '&#91;Arity&#93; ' +\n                                            sprintf(\n                                                strings().wrongArity,\n                                                proc.name,\n                                                proc.params.length,\n                                                args_len\n                                            )\n                                    );\n                                } else {\n                                    self.pause(settings.softPause);\n                                    if (append) {\n                                        var token = self.token(true);\n                                        if (token) {\n                                            args = [token].concat(args);\n                                        } else {\n                                            self.error('&#91;AUTH&#93; ' +\n                                                       strings().noTokenError);\n                                        }\n                                    }\n                                    $.jrpc({\n                                        url: url,\n                                        method: proc.name,\n                                        params: args,\n                                        request: jrpc_request,\n                                        response: jrpc_response,\n                                        success: jrpc_success,\n                                        error: ajax_error\n                                    });\n                                }\n                            };\n                        }\n                    });\n                    var login = typeof auth === 'string' ? auth : 'login';\n                    interpreter_object.help = interpreter_object.help || function(fn) {\n                        if (typeof fn === 'undefined') {\n                            var names = response.procs.map(function(proc) {\n                                return proc.name;\n                            }).join(', ') + ', help';\n                            self.echo('Available commands: ' + names);\n                        } else {\n                            var found = false;\n                            $.each(procs, function(_, proc) {\n                                if (proc.name === fn) {\n                                    found = true;\n                                    var msg = '';\n                                    msg += '[[bu;;]' + proc.name + ']';\n                                    if (proc.params) {\n                                        var params = proc.params;\n                                        if (auth && proc.name !== login) {\n                                            params = params.slice(1);\n                                        }\n                                        msg += ' ' + params.join(' ');\n                                    }\n                                    if (proc.help) {\n                                        msg += '\\n' + proc.help;\n                                    }\n                                    self.echo(msg);\n                                    return false;\n                                }\n                            });\n                            if (!found) {\n                                if (fn === 'help') {\n                                    self.echo('[[bu;;]help] [method]\\ndisplay help ' +\n                                              'for the method or list of methods if not' +\n                                              ' specified');\n                                } else {\n                                    var msg = 'Method `' + fn + \"' not found \";\n                                    self.error(msg);\n                                }\n                            }\n                        }\n                    };\n                    success(interpreter_object);\n                } else {\n                    success(null);\n                }\n            }\n            return $.jrpc({\n                url: url,\n                method: 'system.describe',\n                params: [],\n                success: response,\n                request: jrpc_request,\n                response: jrpc_response,\n                error: function error() {\n                    success(null);\n                }\n            });\n        }\n        // ---------------------------------------------------------------------\n        function make_interpreter(user_intrp, login, finalize) {\n            finalize = finalize || $.noop;\n            var type = get_type(user_intrp);\n            var object;\n            var result = {};\n            var rpc_count = 0; // only one rpc can be use for array\n            var fn_interpreter;\n            if (type === 'array') {\n                object = {};\n                // recur will be called when previous acync call is finished\n                (function recur(interpreters, success) {\n                    if (interpreters.length) {\n                        var first = interpreters[0];\n                        var rest = interpreters.slice(1);\n                        var type = get_type(first);\n                        if (type === 'string') {\n                            self.pause(settings.softPause);\n                            if (settings.describe === false) {\n                                if (++rpc_count === 1) {\n                                    fn_interpreter = make_basic_json_rpc(first, login);\n                                } else {\n                                    self.error(strings().oneRPCWithIgnore);\n                                }\n                                recur(rest, success);\n                            } else {\n                                make_json_rpc_object(first, login, function(new_obj) {\n                                    if (new_obj) {\n                                        $.extend(object, new_obj);\n                                    } else if (++rpc_count === 1) {\n                                        fn_interpreter = make_basic_json_rpc(\n                                            first,\n                                            login\n                                        );\n                                    } else {\n                                        self.error(strings().oneRPCWithIgnore);\n                                    }\n                                    self.resume();\n                                    recur(rest, success);\n                                });\n                            }\n                        } else if (type === 'function') {\n                            if (fn_interpreter) {\n                                self.error(strings().oneInterpreterFunction);\n                            } else {\n                                fn_interpreter = first;\n                            }\n                            recur(rest, success);\n                        } else if (type === 'object') {\n                            $.extend(object, first);\n                            recur(rest, success);\n                        }\n                    } else {\n                        success();\n                    }\n                })(user_intrp, function() {\n                    finalize({\n                        interpreter: make_object_interpreter(\n                            object,\n                            false,\n                            login,\n                            fn_interpreter.bind(self)\n                        ),\n                        completion: Object.keys(object)\n                    });\n                });\n            } else if (type === 'string') {\n                if (settings.ignoreSystemDescribe) {\n                    object = {\n                        interpreter: make_basic_json_rpc(user_intrp, login)\n                    };\n                    if ($.isArray(settings.completion)) {\n                        object.completion = settings.completion;\n                    }\n                    finalize(object);\n                } else {\n                    self.pause(settings.softPause);\n                    make_json_rpc_object(user_intrp, login, function(object) {\n                        if (object) {\n                            result.interpreter = make_object_interpreter(\n                                object,\n                                false,\n                                login\n                            );\n                            result.completion = Object.keys(object);\n                        } else {\n                            // no procs in system.describe\n                            result.interpreter = make_basic_json_rpc(user_intrp, login);\n                        }\n                        finalize(result);\n                        self.resume();\n                    });\n                }\n            } else if (type === 'object') {\n                finalize({\n                    interpreter: make_object_interpreter(\n                        user_intrp,\n                        settings.checkArity,\n                        login\n                    ),\n                    completion: Object.keys(user_intrp)\n                });\n            } else {\n                // allow $('<div/>').terminal();\n                if (type === 'undefined') {\n                    user_intrp = $.noop;\n                } else if (type !== 'function') {\n                    var msg = type + ' is invalid interpreter value';\n                    throw new $.terminal.Exception(msg);\n                }\n                // single function don't need bind\n                finalize({\n                    interpreter: user_intrp,\n                    completion: settings.completion\n                });\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Create JSON-RPC authentication function\n        // ---------------------------------------------------------------------\n        function make_json_rpc_login(url, login) {\n            var method = get_type(login) === 'boolean' ? 'login' : login;\n            return function(user, passwd, callback) {\n                self.pause(settings.softPause);\n                $.jrpc({\n                    url: url,\n                    method: method,\n                    params: [user, passwd],\n                    request: function(jxhr, request) {\n                        try {\n                            settings.request.call(self, jxhr, request, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    response: function(jxhr, response) {\n                        try {\n                            settings.response.call(self, jxhr, response, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    success: function success(response) {\n                        if (!response.error && response.result) {\n                            callback(response.result);\n                        } else {\n                            // null will trigger message that login fail\n                            callback(null);\n                        }\n                        self.resume();\n                    },\n                    error: ajax_error\n                });\n            };\n            // default name is login so you can pass true\n        }\n        // ---------------------------------------------------------------------\n        // :: display Exception on terminal\n        // ---------------------------------------------------------------------\n        function display_exception(e, label, silent) {\n            if (is_function(settings.exceptionHandler)) {\n                settings.exceptionHandler.call(self, e, label);\n            } else {\n                self.exception(e, label);\n                if (!silent) {\n                    setTimeout(function() {\n                        throw e;\n                    }, 0);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Draw line - can have line breaks and be longer than the width of\n        // :: the terminal, there are 2 options raw and finalize\n        // :: raw - will not encode the string and finalize if a function that\n        // :: will have div container of the line as first argument\n        // :: NOTE: it formats and appends lines to output_buffer. The actual\n        // :: append to terminal output happens in the flush function\n        // ---------------------------------------------------------------------\n        var output_buffer = [];\n        var NEW_LINE = 1;\n        function buffer_line(string, index, options) {\n            // urls should always have formatting to keep url if split\n            var i, len;\n            output_buffer.push(NEW_LINE);\n            if (string === '') {\n                // ignore empty string, it can happen if line was a function\n                // that returned empty string in this case whe need to add container\n                // because on update/resize it can return content\n            } else if (!options.raw) {\n                var format_options = {\n                    linksNoReferrer: settings.linksNoReferrer,\n                    linksNoFollow: settings.linksNoFollow,\n                    anyLinks: settings.anyLinks,\n                    char_width: char_size.width\n                };\n                string = $.terminal.normalize(string);\n                var cols = self.cols();\n                if ((strlen(text(string)) > cols ||\n                     string.match(/\\n/)) &&\n                    ((settings.wrap === true && options.wrap === undefined) ||\n                     settings.wrap === false && options.wrap === true)) {\n                    var words = options.keepWords;\n                    var array = $.terminal.split_equal(string, cols, words);\n                    for (i = 0, len = array.length; i < len; ++i) {\n                        if (array[i] === '' || array[i] === '\\r') {\n                            output_buffer.push('<span></span>');\n                        } else {\n                            output_buffer.push($.terminal.format(\n                                array[i],\n                                format_options\n                            ));\n                        }\n                    }\n                } else {\n                    string = $.terminal.format(string, format_options);\n                    string.split(/\\n/).forEach(function(string) {\n                        output_buffer.push(string);\n                    });\n                }\n            } else {\n                output_buffer.push(string);\n            }\n            output_buffer.push({\n                finalize: options.finalize,\n                index: index\n            });\n        }\n        // ---------------------------------------------------------------------\n        function process_line(line) {\n            // prevent exception in display exception\n            try {\n                var line_settings = $.extend({\n                    exec: true,\n                    raw: false,\n                    finalize: $.noop\n                }, line.options || {});\n                var string;\n                var arg = line.string;\n                var is_fn = is_function(arg);\n                if (is_fn) {\n                    arg = arg();\n                }\n                if (get_type(arg) !== 'string') {\n                    if (is_function(settings.parseObject)) {\n                        var ret = settings.parseObject(arg);\n                        if (get_type(ret) === 'string') {\n                            string = ret;\n                        }\n                    } else if (arg instanceof Array) {\n                        string = $.terminal.columns(arg, self.cols(), settings.tabs);\n                    } else {\n                        string = String(arg);\n                    }\n                } else {\n                    string = arg;\n                }\n                if (string !== '') {\n                    // string can be empty after removing extended commands\n                    if (string !== '') {\n                        if (!line_settings.raw) {\n                            if (settings.convertLinks) {\n                                string = string.replace(email_re, '[[!;;]$1]').\n                                    replace(url_nf_re, '[[!;;]$1]');\n                            }\n                            if (line_settings.formatters) {\n                                try {\n                                    string = $.terminal.apply_formatters(\n                                        string,\n                                        settings\n                                    );\n                                } catch (e) {\n                                    display_exception(e, 'FORMATTING');\n                                }\n                            }\n                            var parts = string.split(format_exec_re);\n                            string = $.map(parts, function(string) {\n                                if (string && string.match(format_exec_re) &&\n                                    !$.terminal.is_formatting(string)) {\n                                    // redraw should not execute commands and it have\n                                    // and lines variable have all extended commands\n                                    string = string.replace(/^\\[\\[|\\]\\]$/g, '');\n                                    if (line_settings.exec) {\n                                        var prev_cmd;\n                                        if (prev_command) {\n                                            prev_command = prev_command.command.trim();\n                                        }\n                                        if (prev_cmd === string.trim()) {\n                                            self.error(strings().recursiveCall);\n                                        } else {\n                                            $.terminal.extended_command(self, string, {\n                                                invokeMethods: settings.invokeMethods\n                                            });\n                                        }\n                                    }\n                                    return '';\n                                } else {\n                                    return string;\n                                }\n                            }).join('');\n                            if (string !== '') {\n                                string = crlf($.terminal.normalize(string));\n                                string = $.terminal.encode(string, {\n                                    tabs: settings.tabs\n                                });\n                            }\n                        }\n                        if (string !== '') {\n                            buffer_line(string, line.index, line_settings);\n                        }\n                    }\n                }\n                if (string === '' && is_fn) {\n                    buffer_line(string, line.index, line_settings);\n                }\n            } catch (e) {\n                output_buffer = [];\n                // don't display exception if exception throw in terminal\n                if (is_function(settings.exceptionHandler)) {\n                    settings.exceptionHandler.call(self, e, 'TERMINAL');\n                } else {\n                    alert_exception('[Internal Exception(process_line)]', e);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Update terminal lines\n        // ---------------------------------------------------------------------\n        function redraw(options) {\n            options = $.extend({}, {\n                // should be used when single line is updated\n                update: false,\n                // should be used if you want to scroll to bottom after redraw\n                scroll: true\n            }, options || {});\n            if (!options.update) {\n                command_line.resize(num_chars);\n                // we don't want reflow while processing lines\n                var detached_output = output.empty().detach();\n            }\n            var lines_to_show = [];\n            // Dead code\n            if (settings.outputLimit >= 0) {\n                // flush will limit lines but if there is lot of\n                // lines we don't need to show them and then remove\n                // them from terminal\n                var limit;\n                if (settings.outputLimit === 0) {\n                    limit = self.rows();\n                } else {\n                    limit = settings.outputLimit;\n                }\n                lines.forEach(function(line, index) {\n                    var string = line[0];\n                    var options = line[1];\n                    if (get_type(string) === 'function') {\n                        string = string();\n                    }\n                    if (get_type(string) !== 'string') {\n                        string = String(string);\n                    }\n                    lines_to_show.push({\n                        string: string,\n                        index: index,\n                        options: options\n                    });\n                });\n                lines_to_show = lines_to_show.slice(lines_to_show.length - limit - 1);\n            } else {\n                lines_to_show = lines.map(function(line, index) {\n                    return {\n                        string: line[0],\n                        index: index,\n                        options: line[1]\n                    };\n                });\n            }\n            try {\n                output_buffer = [];\n                $.each(lines_to_show, function(i, line) {\n                    process_line(line);\n                });\n                if (!options.update) {\n                    command_line.before(detached_output); // reinsert output\n                }\n                self.flush(options);\n                fire_event('onAfterRedraw');\n            } catch (e) {\n                if (is_function(settings.exceptionHandler)) {\n                    settings.exceptionHandler.call(self, e, 'TERMINAL (redraw)');\n                } else {\n                    alert_exception('[redraw]', e);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Function limit output lines based on outputLimit option\n        // ---------------------------------------------------------------------\n        function limit_lines() {\n            if (settings.outputLimit >= 0) {\n                var limit;\n                if (settings.outputLimit === 0) {\n                    limit = self.rows();\n                } else {\n                    limit = settings.outputLimit;\n                }\n                var $lines = output.find('> div > div');\n                if ($lines.length + 1 > limit) {\n                    var max = $lines.length - limit + 1;\n                    var for_remove = $lines.slice(0, max);\n                    // you can't get parent if you remove the\n                    // element so we first get the parent\n                    var parents = for_remove.parent();\n                    for_remove.remove();\n                    parents.each(function() {\n                        var $self = $(this);\n                        if ($self.is(':empty')) {\n                            // there can be divs inside parent that\n                            // was not removed\n                            $self.remove();\n                        }\n                    });\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display user greetings or terminal signature\n        // ---------------------------------------------------------------------\n        function show_greetings() {\n            if (settings.greetings === undefined) {\n                // signature have ascii art so it's not suite for screen readers\n                self.echo(self.signature, {finalize: a11y_hide, formatters: false});\n            } else if (settings.greetings) {\n                var type = typeof settings.greetings;\n                if (type === 'string') {\n                    self.echo(settings.greetings);\n                } else if (type === 'function') {\n                    try {\n                        settings.greetings.call(self, self.echo);\n                    } catch (e) {\n                        settings.greetings = null;\n                        display_exception(e, 'greetings');\n                    }\n                } else {\n                    self.error(strings().wrongGreetings);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display prompt and last command\n        // ---------------------------------------------------------------------\n        function echo_command(command) {\n            if (typeof command === 'undefined') {\n                command = self.get_command();\n            }\n            var prompt = command_line.prompt(true);\n            var mask = command_line.mask();\n            switch (typeof mask) {\n                case 'string':\n                    command = command.replace(/./g, mask);\n                    break;\n                case 'boolean':\n                    if (mask) {\n                        command = command.replace(/./g, settings.maskChar);\n                    } else {\n                        command = $.terminal.escape_formatting(command);\n                    }\n                    break;\n            }\n            var options = {\n                finalize: function finalize(div) {\n                    a11y_hide(div.addClass('command'));\n                    fire_event('onEchoCommand', [div, command]);\n                }\n            };\n            if (is_function(prompt)) {\n                var ret = prompt(function(string) {\n                    self.echo(string + command, options);\n                });\n                if (ret && is_function(ret.then)) {\n                    ret.then(function(string) {\n                        if (typeof string === 'string') {\n                            self.echo(string + command, options);\n                        }\n                    });\n                }\n            } else {\n                self.echo(prompt + command, options);\n            }\n        }\n        // ---------------------------------------------------------------------\n        function have_scrollbar() {\n            if (self.is('body')) {\n                // source: https://stackoverflow.com/a/6639405/387194\n                // from comment by Šime Vidas\n                return window.innerWidth - document.documentElement.clientWidth > 0;\n            }\n            return fill.outerWidth() !== self.outerWidth();\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function that restore state. Call import_view or exec\n        // ---------------------------------------------------------------------\n        function restore_state(spec) {\n            // spec [terminal_id, state_index, command]\n            var terminal = terminals.get()[spec[0]];\n            if (!terminal) {\n                throw new $.terminal.Exception(strings().invalidTerminalId);\n            }\n            var command_idx = spec[1];\n            if (save_state[command_idx]) { // state exists\n                terminal.import_view(save_state[command_idx]);\n            } else {\n                // restore state\n                change_hash = false;\n                var command = spec[2];\n                if (command) {\n                    terminal.exec(command).done(function() {\n                        change_hash = true;\n                        save_state[command_idx] = terminal.export_view();\n                    });\n                }\n            }\n            /*if (spec[3].length) {\n                restore_state(spec[3]);\n            }*/\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function\n        // ---------------------------------------------------------------------\n        function maybe_update_hash() {\n            if (change_hash) {\n                fire_hash_change = false;\n                location.hash = '#' + JSON.stringify(hash_commands);\n                setTimeout(function() {\n                    fire_hash_change = true;\n                }, 100);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Wrapper over interpreter, it implements exit and catches all\n        // :: exeptions from user code and displays them on the terminal\n        // ---------------------------------------------------------------------\n        var first_command = true;\n        var resume_callbacks = [];\n        function commands(command, silent, exec) {\n            function init_state() {\n                // execHash need first empty command too\n                if (settings.historyState || settings.execHash && exec) {\n                    if (!save_state.length) {\n                        // first command in first terminal don't have hash\n                        self.save_state();\n                    } else {\n                        self.save_state(null);\n                    }\n                }\n            }\n            // -----------------------------------------------------------------\n            function after_exec() {\n                // variables defined later in commands\n                if (!exec) {\n                    change_hash = true;\n                    if (settings.historyState) {\n                        self.save_state(command, false);\n                    }\n                    change_hash = saved_change_hash;\n                }\n                deferred.resolve();\n                fire_event('onAfterCommand', [command]);\n            }\n            // -----------------------------------------------------------------\n            function show(result) {\n                if (typeof result !== 'undefined') {\n                    display_object(result);\n                }\n                after_exec();\n                self.resume();\n            }\n            // -----------------------------------------------------------------\n            function invoke() {\n                // Call user interpreter function\n                var result = interpreter.interpreter.call(self, command, self);\n                if (result) {\n                    // auto pause/resume when user return promises\n                    self.pause(settings.softPause);\n                    // when for native Promise object work only in jQuery 3.x\n                    if (is_function(result.done || result.then)) {\n                        (result.done || result.then).call(result, show);\n                    } else {\n                        return $.when(result).done(show);\n                    }\n                } else if (paused) {\n                    resume_callbacks.push(function() {\n                        // exec with resume/pause in user code\n                        after_exec();\n                    });\n                } else {\n                    after_exec();\n                }\n            }\n            // -----------------------------------------------------------------\n            // first command store state of the terminal before the command get\n            // executed\n            if (first_command) {\n                first_command = false;\n                init_state();\n            }\n            try {\n                // this callback can disable commands\n                if (fire_event('onBeforeCommand', [command]) === false) {\n                    return;\n                }\n                if (!exec) {\n                    prev_command = $.terminal.split_command(command);\n                }\n                if (!ghost()) {\n                    // exec execute this function wihout the help of cmd plugin\n                    // that add command to history on enter\n                    if (exec && (is_function(settings.historyFilter) &&\n                                 settings.historyFilter(command) ||\n                                 command.match(settings.historyFilter))) {\n                        command_line.history().append(command);\n                    }\n                }\n                var interpreter = interpreters.top();\n                if (!silent && settings.echoCommand) {\n                    echo_command(command);\n                }\n                // new promise will be returned to exec that will resolve his\n                // returned promise\n                var deferred = new $.Deferred();\n                // we need to save sate before commands is deleyd because\n                // execute_extended_command disable it and it can be executed\n                // after delay\n                var saved_change_hash = change_hash;\n                if (command.match(/^\\s*login\\s*$/) && self.token(true)) {\n                    if (self.level() > 1) {\n                        self.logout(true);\n                    } else {\n                        self.logout();\n                    }\n                    after_exec();\n                } else if (settings.exit && command.match(/^\\s*exit\\s*$/) &&\n                           !in_login) {\n                    var level = self.level();\n                    if (level === 1 && self.get_token() || level > 1) {\n                        if (self.get_token(true)) {\n                            self.set_token(undefined, true);\n                        }\n                        self.pop();\n                    }\n                    after_exec();\n                } else if (settings.clear && command.match(/^\\s*clear\\s*$/) &&\n                           !in_login) {\n                    self.clear();\n                    after_exec();\n                } else {\n                    var ret = invoke();\n                    if (ret) {\n                        return ret;\n                    }\n                }\n                return deferred.promise();\n            } catch (e) {\n                display_exception(e, 'USER', exec);\n                self.resume();\n                if (exec) {\n                    throw e;\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: The logout function removes Storage, disables history and runs\n        // :: the login function. This function is called only when options.login\n        // :: function is defined. The check for this is in the self.pop method\n        // ---------------------------------------------------------------------\n        function global_logout() {\n            if (is_function(settings.onBeforeLogout)) {\n                try {\n                    if (settings.onBeforeLogout.call(self, self) === false) {\n                        return;\n                    }\n                } catch (e) {\n                    settings.onBeforeLogout = $.noop;\n                    display_exception(e, 'onBeforeLogout');\n                }\n            }\n            clear_loging_storage();\n            if (is_function(settings.onAfterLogout)) {\n                try {\n                    settings.onAfterLogout.call(self, self);\n                } catch (e) {\n                    settings.onAfterLogout = $.noop;\n                    display_exception(e, 'onAfterlogout');\n                }\n            }\n            self.login(global_login_fn, true, initialize);\n        }\n        // ---------------------------------------------------------------------\n        function clear_loging_storage() {\n            var name = self.prefix_name(true) + '_';\n            storage.remove(name + 'token');\n            storage.remove(name + 'login');\n        }\n        // ---------------------------------------------------------------------\n        // :: Save the interpreter name for use with purge\n        // ---------------------------------------------------------------------\n        function maybe_append_name(interpreter_name) {\n            var storage_key = self.prefix_name() + '_interpreters';\n            var names = storage.get(storage_key);\n            if (names) {\n                names = JSON.parse(names);\n            } else {\n                names = [];\n            }\n            if ($.inArray(interpreter_name, names) === -1) {\n                names.push(interpreter_name);\n                storage.set(storage_key, JSON.stringify(names));\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Function enables history, sets prompt, runs interpreter function\n        // ---------------------------------------------------------------------\n        function prepare_top_interpreter(silent) {\n            var interpreter = interpreters.top();\n            var name = self.prefix_name(true);\n            if (!ghost()) {\n                maybe_append_name(name);\n            }\n            var login = self.login_name(true);\n            command_line.name(name + (login ? '_' + login : ''));\n            if (interpreter.prompt !== command_line.prompt()) {\n                if (is_function(interpreter.prompt)) {\n                    command_line.prompt(function(callback) {\n                        var ret = interpreter.prompt.call(self, callback, self);\n                        if (ret && is_function(ret.then)) {\n                            ret.then(function(string) {\n                                if (typeof string === 'string') {\n                                    callback(string);\n                                }\n                            });\n                        }\n                    });\n                } else {\n                    command_line.prompt(interpreter.prompt);\n                }\n            }\n            if (typeof interpreter.history !== 'undefined') {\n                self.history().toggle(interpreter.history);\n            }\n            if ($.isPlainObject(interpreter.keymap)) {\n                command_line.keymap($.omap(interpreter.keymap, function(name, fun) {\n                    return function() {\n                        var args = [].slice.call(arguments);\n                        try {\n                            return fun.apply(self, args);\n                        } catch (e) {\n                            display_exception(e, 'USER KEYMAP');\n                        }\n                    };\n                }));\n            }\n            command_line.set('');\n            init_queue.resolve();\n            if (!silent && is_function(interpreter.onStart)) {\n                interpreter.onStart.call(self, self);\n            }\n        }\n        // ---------------------------------------------------------------------\n        function fire_event(name, args) {\n            args = (args || []).concat([self]); // create new array\n            // even can be fired before interpreters is created\n            var top = interpreters && interpreters.top();\n            if (top && is_function(top[name])) {\n                try {\n                    return top[name].apply(self, args);\n                } catch (e) {\n                    delete top[name];\n                    display_exception(e, name);\n                }\n            } else if (is_function(settings[name])) {\n                try {\n                    return settings[name].apply(self, args);\n                } catch (e) {\n                    settings[name] = null;\n                    display_exception(e, name);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function move_cursor_visible() {\n            var cursor = self.find('.cursor');\n            if (!cursor.isFullyInViewport(self)) {\n                self.scrollTop(cursor.position().top - 5);\n                return true;\n            }\n        }\n        // ---------------------------------------------------------------------\n        function hashchange() {\n            if (fire_hash_change && settings.execHash) {\n                try {\n                    if (location.hash) {\n                        var hash = location.hash.replace(/^#/, '');\n                        hash_commands = JSON.parse(decodeURIComponent(hash));\n                    } else {\n                        hash_commands = [];\n                    }\n                    if (hash_commands.length) {\n                        restore_state(hash_commands[hash_commands.length - 1]);\n                    } else if (save_state[0]) {\n                        self.import_view(save_state[0]);\n                    }\n                } catch (e) {\n                    display_exception(e, 'TERMINAL');\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function initialize() {\n            prepare_top_interpreter();\n            show_greetings();\n            if (lines.length) {\n                self.refresh(); // for case when showing long error before init\n            }\n            // was_paused flag is workaround for case when user call exec before\n            // login and pause in onInit, 3rd exec will have proper timing (will\n            // execute after onInit resume)\n            var was_paused = false;\n            if (is_function(settings.onInit)) {\n                onPause = function() { // local in terminal\n                    was_paused = true;\n                };\n                try {\n                    settings.onInit.call(self, self);\n                } catch (e) {\n                    display_exception(e, 'OnInit');\n                    // throw e; // it will be catched by terminal\n                } finally {\n                    onPause = $.noop;\n                    if (!was_paused && self.enabled()) {\n                        // resume login if user didn't call pause in onInit\n                        // if user pause in onInit wait with exec until it\n                        // resume\n                        self.resume();\n                    }\n                }\n            }\n            if (first_instance) {\n                first_instance = false;\n                $(window).on('hashchange', hashchange);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: If Ghost don't store anything in localstorage\n        // ---------------------------------------------------------------------\n        function ghost() {\n            return in_login || command_line.mask() !== false;\n        }\n        // ---------------------------------------------------------------------\n        // :: Keydown event handler\n        // ---------------------------------------------------------------------\n        function user_key_down(e) {\n            var result, top = interpreters.top();\n            if (is_function(top.keydown)) {\n                result = top.keydown.call(self, e, self);\n                if (result !== undefined) {\n                    return result;\n                }\n            } else if (is_function(settings.keydown)) {\n                result = settings.keydown.call(self, e, self);\n                if (result !== undefined) {\n                    return result;\n                }\n            }\n        }\n        var keymap = {\n            'CTRL+D': function(e, original) {\n                if (!in_login) {\n                    if (command_line.get() === '') {\n                        if (interpreters.size() > 1 ||\n                            is_function(global_login_fn)) {\n                            self.pop('');\n                        } else {\n                            self.resume();\n                            self.echo('');\n                        }\n                    } else {\n                        original();\n                    }\n                }\n                return false;\n            },\n            'CTRL+C': function() {\n                if (get_selected_text() === '') {\n                    var command = self.get_command();\n                    var position = self.get_position();\n                    command = command.substring(0, position) + '^C' +\n                        command.substring(position + 2);\n                    echo_command(command);\n                    self.set_command('');\n                }\n            },\n            'CTRL+L': function() {\n                self.clear();\n            },\n            'TAB': function(e, orignal) {\n                // TODO: move this to cmd plugin\n                //       add completion = array | function\n                //       !!! Problem complete more then one key need terminal\n                var top = interpreters.top(), completion, caseSensitive;\n                if (typeof top.caseSensitiveAutocomplete !== 'undefined') {\n                    caseSensitive = top.caseSensitiveAutocomplete;\n                } else {\n                    caseSensitive = settings.caseSensitiveAutocomplete;\n                }\n                if (settings.completion &&\n                    get_type(settings.completion) !== 'boolean' &&\n                    top.completion === undefined) {\n                    completion = settings.completion;\n                } else {\n                    completion = top.completion;\n                }\n                if (completion === 'settings') {\n                    completion = settings.completion;\n                }\n                function resolve(commands) {\n                    self.complete(commands, {\n                        echo: true,\n                        word: settings.wordAutocomplete,\n                        escape: settings.completionEscape,\n                        caseSensitive: caseSensitive,\n                        doubleTab: settings.doubleTab\n                    });\n                }\n                if (completion) {\n                    switch (get_type(completion)) {\n                        case 'function':\n                            var string = self.before_cursor(settings.wordAutocomplete);\n                            if (completion.length === 3) {\n                                var error = new Error(strings().comletionParameters);\n                                display_exception(error, 'USER');\n                                return false;\n                            }\n                            var result = completion.call(self, string, resolve);\n                            if (result && is_function(result.then)) {\n                                result.then(resolve);\n                            }\n                            break;\n                        case 'array':\n                            resolve(completion);\n                            break;\n                        default:\n                            throw new $.terminal.Exception(strings().invalidCompletion);\n                    }\n                } else {\n                    orignal();\n                }\n                return false;\n            },\n            'CTRL+V': function(e, original) {\n                original(e);\n                self.oneTime(200, function() {\n                    self.scroll_to_bottom();\n                });\n                return true;\n            },\n            'CTRL+TAB': function() {\n                if (terminals.length() > 1) {\n                    self.focus(false);\n                    return false;\n                }\n            },\n            'PAGEDOWN': function() {\n                self.scroll(self.height());\n            },\n            'PAGEUP': function() {\n                self.scroll(-self.height());\n            }\n        };\n        function key_down(e) {\n            // Prevent to be executed by cmd: CTRL+D, TAB, CTRL+TAB (if more\n            // then one terminal)\n            var result, i;\n            if (self.enabled()) {\n                if (!self.paused()) {\n                    result = user_key_down(e);\n                    if (result !== undefined) {\n                        return result;\n                    }\n                    if (e.which !== 9) { // not a TAB\n                        tab_count = 0;\n                    }\n                } else {\n                    if (!settings.pauseEvents) {\n                        result = user_key_down(e);\n                        if (result !== undefined) {\n                            return result;\n                        }\n                    }\n                    if (e.which === 68 && e.ctrlKey) { // CTRL+D (if paused)\n                        if (settings.pauseEvents) {\n                            result = user_key_down(e);\n                            if (result !== undefined) {\n                                return result;\n                            }\n                        }\n                        if (requests.length) {\n                            for (i = requests.length; i--;) {\n                                var r = requests[i];\n                                if (r.readyState !== 4) {\n                                    try {\n                                        r.abort();\n                                    } catch (error) {\n                                        if (is_function(settings.exceptionHandler)) {\n                                            settings.exceptionHandler.call(\n                                                self,\n                                                e,\n                                                'AJAX ABORT'\n                                            );\n                                        } else {\n                                            self.error(strings().ajaxAbortError);\n                                        }\n                                    }\n                                }\n                            }\n                            requests = [];\n                        }\n                        self.resume();\n                    }\n                    return false;\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function key_press(e) {\n            var top = interpreters.top();\n            if (enabled && (!paused || !settings.pauseEvents)) {\n                if (is_function(top.keypress)) {\n                    return top.keypress.call(self, e, self);\n                } else if (is_function(settings.keypress)) {\n                    return settings.keypress.call(self, e, self);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function ready(queue) {\n            return function(fun) {\n                queue.add(fun);\n            };\n        }\n        // ---------------------------------------------------------------------\n        function strings() {\n            return $.extend(\n                {},\n                $.terminal.defaults.strings,\n                settings && settings.strings || {}\n            );\n        }\n        // ---------------------------------------------------------------------\n        var self = this;\n        if (self.is('body,html')) {\n            self = $('<div/>').appendTo('body');\n            $('body').addClass('full-screen-terminal');\n        }\n        if (this.length > 1) {\n            return this.each(function() {\n                $.fn.terminal.call(\n                    $(this),\n                    init_interpreter,\n                    $.extend({name: self.selector}, options)\n                );\n            });\n        }\n        // terminal already exists\n        if (self.data('terminal')) {\n            return self.data('terminal');\n        }\n        if (self.length === 0) {\n            var msg = sprintf(strings().invalidSelector);\n            throw new $.terminal.Exception(msg);\n        }\n        // var names = []; // stack if interpreter names\n        var prev_command; // used for name on the terminal if not defined\n        var tab_count = 0; // for tab completion\n        var output; // .terminal-output jquery object\n        var terminal_id = terminals.length();\n        var num_chars; // numer of chars in line\n        var num_rows; // number of lines that fit without scrollbar\n        var command; // for tab completion\n        var logins = new Stack(); // stack of logins\n        var command_queue = new DelayQueue();\n        var init_queue = new DelayQueue();\n        var when_ready = ready(init_queue);\n        var char_size = get_char_size(self);\n        var cmd_ready = ready(command_queue);\n        var in_login = false;// some Methods should not be called when login\n        // TODO: Try to use mutex like counter for pause/resume\n        var onPause = $.noop;// used to indicate that user call pause onInit\n        var old_width, old_height;\n        var delayed_commands = []; // used when exec commands while paused\n        var settings = $.extend(\n            {},\n            $.terminal.defaults,\n            {\n                name: self.selector,\n                exit: !!(options && options.login || !options)\n            },\n            options || {}\n        );\n        // so it's the same as in TypeScript definition for options\n        delete settings.formatters;\n        // used to throw error when calling methods on destroyed terminal\n        var defunct = false;\n        var lines = [];\n        var storage = new StorageHelper(settings.memory);\n        var enabled = settings.enabled;\n        var frozen = false;\n        var paused = false;\n        var autologin = true; // set to false if onBeforeLogin return false\n        var interpreters;\n        var command_line;\n        var old_enabled;\n        var visibility_observer;\n        var mutation_observer;\n        // -----------------------------------------------------------------\n        // TERMINAL METHODS\n        // -----------------------------------------------------------------\n        $.extend(self, $.omap({\n            id: function() {\n                return terminal_id;\n            },\n            // -------------------------------------------------------------\n            // :: Clear the output\n            // -------------------------------------------------------------\n            clear: function() {\n                lines = [];\n                output.html('');\n                fire_event('onClear');\n                self.attr({scrollTop: 0});\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return an object that can be used with import_view to\n            // :: restore the state\n            // -------------------------------------------------------------\n            export_view: function() {\n                var user_export = fire_event('onExport');\n                user_export = user_export || {};\n                return $.extend({}, {\n                    focus: enabled,\n                    mask: command_line.mask(),\n                    prompt: self.get_prompt(),\n                    command: self.get_command(),\n                    position: command_line.position(),\n                    lines: clone(lines),\n                    interpreters: interpreters.clone(),\n                    history: command_line.history().data\n                }, user_export);\n            },\n            // -------------------------------------------------------------\n            // :: Restore the state of the previous exported view\n            // -------------------------------------------------------------\n            import_view: function(view) {\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'import_view'));\n                }\n                fire_event('onImport', [view]);\n                when_ready(function ready() {\n                    self.set_prompt(view.prompt);\n                    self.set_command(view.command);\n                    command_line.position(view.position);\n                    command_line.mask(view.mask);\n                    if (view.focus) {\n                        self.focus();\n                    }\n                    lines = clone(view.lines).filter(function(line) {\n                        return line[0];\n                    });\n                    if (view.interpreters instanceof Stack) {\n                        interpreters = view.interpreters;\n                    }\n                    if (settings.importHistory) {\n                        command_line.history().set(view.history);\n                    }\n                    redraw();\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Store current terminal state\n            // -------------------------------------------------------------\n            save_state: function(command, ignore_hash, index) {\n                // save_state.push({view:self.export_view(), join:[]});\n                if (typeof index !== 'undefined') {\n                    save_state[index] = self.export_view();\n                } else {\n                    save_state.push(self.export_view());\n                }\n                if (!$.isArray(hash_commands)) {\n                    hash_commands = [];\n                }\n                if (command !== undefined && !ignore_hash) {\n                    var state = [\n                        terminal_id,\n                        save_state.length - 1,\n                        command\n                    ];\n                    hash_commands.push(state);\n                    maybe_update_hash();\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Execute a command, it will handle commands that do AJAX\n            // :: calls and have delays, if the second argument is set to\n            // :: true it will not echo executed command\n            // -------------------------------------------------------------\n            exec: function(command, silent, deferred) {\n                var d = deferred || new $.Deferred();\n                cmd_ready(function ready() {\n                    if ($.isArray(command)) {\n                        (function recur() {\n                            var cmd = command.shift();\n                            if (cmd) {\n                                self.exec(cmd, silent).done(recur);\n                            } else {\n                                d.resolve();\n                            }\n                        })();\n                    } else if (paused) {\n                        // both commands executed here (resume will call Term::exec)\n                        // delay command multiple time\n                        delayed_commands.push([command, silent, d]);\n                    } else {\n                        // commands may return promise from user code\n                        // it will resolve exec promise when user promise\n                        // is resolved\n                        var ret = commands(command, silent, true);\n                        if (ret && (ret.done || ret.then)) {\n                            (ret.done || ret.then).call(ret, function() {\n                                d.resolve(self);\n                            });\n                        }\n                    }\n                });\n                // while testing it didn't executed last exec when using this\n                // for resolved deferred\n                return d.promise();\n            },\n            // -------------------------------------------------------------\n            // :: bypass login function that wait untill you type user/pass\n            // :: it hide implementation detail\n            // -------------------------------------------------------------\n            autologin: function(user, token, silent) {\n                self.trigger('terminal.autologin', [user, token, silent]);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function changes the prompt of the command line to login\n            // :: with a password and calls the user login function with\n            // :: the callback that expects a token. The login is successful\n            // :: if the user calls it with value that is truthy\n            // -------------------------------------------------------------\n            login: function(auth, infinite, success, error) {\n                logins.push([].slice.call(arguments));\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'login'));\n                }\n                if (!is_function(auth)) {\n                    throw new Error(strings().loginIsNotAFunction);\n                }\n                in_login = true;\n                if (self.token() && self.level() === 1 && !autologin) {\n                    in_login = false; // logout will call login\n                    self.logout(true);\n                } else if (self.token(true) && self.login_name(true)) {\n                    in_login = false;\n                    if (is_function(success)) {\n                        success();\n                    }\n                    return self;\n                }\n                // don't store login data in history\n                if (settings.history) {\n                    command_line.history().disable();\n                }\n                // so we know how many times call pop\n                var level = self.level();\n                function login_callback(user, token, silent) {\n                    if (token) {\n                        while (self.level() > level) {\n                            self.pop(undefined, true);\n                        }\n                        if (settings.history) {\n                            command_line.history().enable();\n                        }\n                        var name = self.prefix_name(true) + '_';\n                        storage.set(name + 'token', token);\n                        storage.set(name + 'login', user);\n                        in_login = false;\n                        if (is_function(success)) {\n                            // will be used internaly since users know\n                            // when login success (they decide when\n                            // it happen by calling the callback -\n                            // this funtion)\n                            success();\n                        }\n                    } else {\n                        if (infinite) {\n                            if (!silent) {\n                                self.error(strings().wrongPasswordTryAgain);\n                            }\n                            self.pop(undefined, true).set_mask(false);\n                        } else {\n                            in_login = false;\n                            if (!silent) {\n                                self.error(strings().wrongPassword);\n                            }\n                            self.pop(undefined, true).pop(undefined, true);\n                        }\n                        // used only to call pop in push\n                        if (is_function(error)) {\n                            error();\n                        }\n                    }\n                    self.off('terminal.autologin');\n                }\n                self.on('terminal.autologin', function(event, user, token, silent) {\n                    login_callback(user, token, silent);\n                });\n                self.push(function(user) {\n                    self.set_mask(settings.maskChar).push(function(pass) {\n                        try {\n                            var ret = auth.call(self, user, pass, function(\n                                token,\n                                silent) {\n                                login_callback(user, token, silent);\n                            });\n                            if (ret && is_function(ret.then)) {\n                                self.pause();\n                                ret.then(function(token) {\n                                    login_callback(user, token);\n                                    self.resume();\n                                });\n                            }\n                        } catch (e) {\n                            display_exception(e, 'AUTH');\n                        }\n                    }, {\n                        prompt: strings().password + ': ',\n                        name: 'password'\n                    });\n                }, {\n                    prompt: strings().login + ': ',\n                    name: 'login'\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: User defined settings and defaults as well\n            // -------------------------------------------------------------\n            settings: function() {\n                return settings;\n            },\n            // -------------------------------------------------------------\n            // :: Get string before cursor\n            // -------------------------------------------------------------\n            before_cursor: function(word) {\n                var pos = command_line.position();\n                var command = command_line.get().substring(0, pos);\n                var cmd_strings = command.split(' ');\n                var string; // string before cursor that will be completed\n                if (word) {\n                    if (cmd_strings.length === 1) {\n                        string = cmd_strings[0];\n                    } else {\n                        var m = command.match(/(\\\\?\")/g);\n                        var double_quotes = m ? m.filter(function(chr) {\n                            return !chr.match(/^\\\\/);\n                        }).length : 0;\n                        m = command.match(/'/g);\n                        var single_quote = m ? m.length : 0;\n                        if (single_quote % 2 === 1) {\n                            string = command.match(/('[^']*)$/)[0];\n                        } else if (double_quotes % 2 === 1) {\n                            string = command.match(/(\"(?:[^\"]|\\\\\")*)$/)[0];\n                        } else {\n                            string = cmd_strings[cmd_strings.length - 1];\n                            for (i = cmd_strings.length - 1; i > 0; i--) {\n                                // treat escape space as part of the string\n                                var prev_string = cmd_strings[i - 1];\n                                if (prev_string[prev_string.length - 1] === '\\\\') {\n                                    string = cmd_strings[i - 1] + ' ' + string;\n                                } else {\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    string = command;\n                }\n                return string;\n            },\n            // -------------------------------------------------------------\n            // :: complete word or command based on array of words\n            // -------------------------------------------------------------\n            complete: function(commands, options) {\n                options = $.extend({\n                    word: true,\n                    echo: false,\n                    escape: true,\n                    caseSensitive: true,\n                    doubleTab: null\n                }, options || {});\n                var sensitive = options.caseSensitive;\n                // cursor can be in the middle of the command\n                // so we need to get the text before the cursor\n                var string = self.before_cursor(options.word).replace(/\\\\\"/g, '\"');\n                var quote = false;\n                if (options.word) {\n                    if (string.match(/^\"/)) {\n                        quote = '\"';\n                    } else if (string.match(/^'/)) {\n                        quote = \"'\";\n                    }\n                    if (quote) {\n                        string = string.replace(/^[\"']/, '');\n                    }\n                }\n                // local copy\n                commands = commands.slice();\n                if (settings.clear && $.inArray('clear', commands) === -1) {\n                    commands.push('clear');\n                }\n                if (settings.exit && $.inArray('exit', commands) === -1) {\n                    commands.push('exit');\n                }\n                if (tab_count % 2 === 0) {\n                    command = self.before_cursor(options.word);\n                } else {\n                    var test = self.before_cursor(options.word);\n                    if (test !== command) {\n                        // command line changed between TABS - ignore\n                        return;\n                    }\n                }\n                var safe = $.terminal.escape_regex(string);\n                if (options.escape) {\n                    safe = safe.replace(/(\\\\+)([\"'() ])/g, function(_, slash, chr) {\n                        if (chr.match(/[()]/)) {\n                            return slash + '\\\\?\\\\' + chr;\n                        } else {\n                            return slash + '?' + chr;\n                        }\n                    });\n                }\n                function matched_strings() {\n                    var matched = [];\n                    for (var i = commands.length; i--;) {\n                        if (regex.test(commands[i])) {\n                            var match = commands[i];\n                            if (quote === '\"') {\n                                match = match.replace(/\"/g, '\\\\\"');\n                            }\n                            if (!quote && options.escape) {\n                                match = match.replace(/([\"'() ])/g, '\\\\$1');\n                            }\n                            if (!sensitive && same_case(match)) {\n                                if (string.toLowerCase() === string) {\n                                    match = match.toLowerCase();\n                                } else if (string.toUpperCase() === string) {\n                                    match = match.toUpperCase();\n                                }\n                            }\n                            matched.push(match);\n                        }\n                    }\n                    return matched;\n                }\n                var flags = sensitive ? '' : 'i';\n                var regex = new RegExp('^' + safe, flags);\n                var matched = matched_strings();\n                function replace(input, replacement) {\n                    var text = self.get_command();\n                    var pos = self.get_position();\n                    var re = new RegExp('^' + input, 'i');\n                    var pre = text.substring(0, pos);\n                    var post = text.substring(pos);\n                    var to_insert = replacement.replace(re, '') + (quote || '');\n                    self.set_command(pre + to_insert + post);\n                    self.set_position((pre + to_insert).length);\n                }\n                if (matched.length === 1) {\n                    if (options.escape) {\n                        replace(safe, matched[0]);\n                    } else {\n                        self.insert(matched[0].replace(regex, '') + (quote || ''));\n                    }\n                    command = self.before_cursor(options.word);\n                    return true;\n                } else if (matched.length > 1) {\n                    if (++tab_count >= 2) {\n                        tab_count = 0;\n                        if (options.echo) {\n                            if (is_function(options.doubleTab)) {\n                                var ret = options.doubleTab.call(\n                                    self,\n                                    string,\n                                    matched,\n                                    echo_command\n                                );\n                                if (typeof ret === 'undefined') {\n                                    return true;\n                                } else {\n                                    return ret;\n                                }\n                            } else if (options.doubleTab !== false) {\n                                echo_command();\n                                var text = matched.slice().reverse().join('\\t\\t');\n                                self.echo($.terminal.escape_brackets(text), {\n                                    keepWords: true,\n                                    formatters: false\n                                });\n                            }\n                            return true;\n                        }\n                    } else {\n                        var common = common_string(string, matched, sensitive);\n                        if (common) {\n                            replace(string, common);\n                            command = self.before_cursor(options.word);\n                            return true;\n                        }\n                    }\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Return commands function from top interpreter\n            // -------------------------------------------------------------\n            commands: function() {\n                return interpreters.top().interpreter;\n            },\n            // -------------------------------------------------------------\n            // :: Low Level method that overwrites interpreter\n            // -------------------------------------------------------------\n            set_interpreter: function(user_intrp, login) {\n                function overwrite_interpreter() {\n                    self.pause(settings.softPause);\n                    make_interpreter(user_intrp, login, function(result) {\n                        self.resume();\n                        var top = interpreters.top();\n                        $.extend(top, result);\n                        prepare_top_interpreter(true);\n                    });\n                }\n                if (is_function(login)) {\n                    self.login(login, true, overwrite_interpreter);\n                } else if (get_type(user_intrp) === 'string' && login) {\n                    self.login(\n                        make_json_rpc_login(user_intrp, login),\n                        true,\n                        overwrite_interpreter\n                    );\n                } else {\n                    overwrite_interpreter();\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Show user greetings or terminal signature\n            // -------------------------------------------------------------\n            greetings: function() {\n                show_greetings();\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return true if terminal is paused false otherwise\n            // -------------------------------------------------------------\n            paused: function() {\n                return paused;\n            },\n            // -------------------------------------------------------------\n            // :: Pause the terminal, it should be used for ajax calls\n            // -------------------------------------------------------------\n            pause: function(visible) {\n                cmd_ready(function ready() {\n                    onPause();\n                    paused = true;\n                    command_line.disable(visible || is_android);\n                    if (!visible) {\n                        command_line.find('.prompt').hidden();\n                    }\n                    fire_event('onPause');\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Resume the previously paused terminal\n            // -------------------------------------------------------------\n            resume: function() {\n                cmd_ready(function ready() {\n                    paused = false;\n                    if (enabled && terminals.front() === self) {\n                        command_line.enable();\n                    }\n                    command_line.find('.prompt').visible();\n                    var original = delayed_commands;\n                    delayed_commands = [];\n                    for (var i = 0; i < original.length; ++i) {\n                        self.exec.apply(self, original[i]);\n                    }\n                    self.trigger('resume');\n                    var fn = resume_callbacks.shift();\n                    if (fn) {\n                        fn();\n                    }\n                    self.scroll_to_bottom();\n                    fire_event('onResume');\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return the number of characters that fit into the width of\n            // :: the terminal\n            // -------------------------------------------------------------\n            cols: function() {\n                if (settings.numChars) {\n                    return settings.numChars;\n                }\n                if (typeof num_chars === 'undefined' || num_chars === 1000) {\n                    num_chars = get_num_chars(self, char_size);\n                }\n                return num_chars;\n            },\n            // -------------------------------------------------------------\n            // :: Return the number of lines that fit into the height of the\n            // :: terminal\n            // -------------------------------------------------------------\n            rows: function() {\n                if (settings.numRows) {\n                    return settings.numRows;\n                }\n                if (typeof num_rows === 'undefined') {\n                    num_rows = get_num_rows(self, char_size);\n                }\n                return num_rows;\n            },\n            // -------------------------------------------------------------\n            // :: Return the History object\n            // -------------------------------------------------------------\n            history: function() {\n                return command_line.history();\n            },\n            // -------------------------------------------------------------\n            // :: toggle recording of history state\n            // -------------------------------------------------------------\n            history_state: function(toggle) {\n                function run() {\n                    settings.historyState = true;\n                    if (!save_state.length) {\n                        self.save_state();\n                    } else if (terminals.length() > 1) {\n                        self.save_state(null);\n                    }\n                }\n                if (toggle) {\n                    // if set to true and if set from user command we need\n                    // not to include the command\n                    if (typeof window.setImmediate === 'undefined') {\n                        setTimeout(run, 0);\n                    } else {\n                        setImmediate(run);\n                    }\n                } else {\n                    settings.historyState = false;\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: clear the history state\n            // -------------------------------------------------------------\n            clear_history_state: function() {\n                hash_commands = [];\n                save_state = [];\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Switch to the next terminal\n            // -------------------------------------------------------------\n            next: function() {\n                if (terminals.length() === 1) {\n                    return self;\n                } else {\n                    terminals.front().disable();\n                    var next = terminals.rotate().enable();\n                    // 50 provides buffer in viewport\n                    var x = next.offset().top - 50;\n                    $('html,body').animate({scrollTop: x}, 500);\n                    try {\n                        trigger_terminal_change(next);\n                    } catch (e) {\n                        display_exception(e, 'onTerminalChange');\n                    }\n                    return next;\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Make the terminal in focus or blur depending on the first\n            // :: argument. If there is more then one terminal it will\n            // :: switch to next one, if the second argument is set to true\n            // :: the events will be not fired. Used on init\n            // -------------------------------------------------------------\n            focus: function(toggle, silent) {\n                cmd_ready(function ready() {\n                    if (terminals.length() === 1) {\n                        if (toggle === false) {\n                            self.disable(silent);\n                        } else {\n                            self.enable(silent);\n                        }\n                    } else if (toggle === false) {\n                        self.next();\n                    } else {\n                        var front = terminals.front();\n                        if (front !== self) {\n                            // there should be only from terminal enabled but tests\n                            // sometime fail because there where more them one\n                            // where cursor have blink class\n                            terminals.forEach(function(terminal) {\n                                if (terminal !== self && terminal.enabled()) {\n                                    terminal.disable(silent);\n                                }\n                            });\n                            if (!silent) {\n                                try {\n                                    trigger_terminal_change(self);\n                                } catch (e) {\n                                    display_exception(e, 'onTerminalChange');\n                                }\n                            }\n                        }\n                        terminals.set(self);\n                        self.enable(silent);\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Disable/Enable terminal that can be enabled by click\n            // -------------------------------------------------------------\n            freeze: function(freeze) {\n                when_ready(function ready() {\n                    if (freeze) {\n                        self.disable();\n                        frozen = true;\n                    } else {\n                        frozen = false;\n                        self.enable();\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: check if terminal is frozen\n            // -------------------------------------------------------------\n            frozen: function() {\n                return frozen;\n            },\n            // -------------------------------------------------------------\n            // :: Enable the terminal\n            // -------------------------------------------------------------\n            enable: function(silent) {\n                if (!enabled && !frozen) {\n                    if (num_chars === undefined) {\n                        // enabling first time\n                        self.resize();\n                    }\n                    cmd_ready(function ready() {\n                        var ret;\n                        if (!silent && !enabled) {\n                            fire_event('onFocus');\n                        }\n                        if (!silent && ret === undefined || silent) {\n                            enabled = true;\n                            if (!self.paused()) {\n                                command_line.enable();\n                            }\n                        }\n                    });\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Disable the terminal\n            // -------------------------------------------------------------\n            disable: function(silent) {\n                cmd_ready(function ready() {\n                    var ret;\n                    if (!silent && enabled) {\n                        ret = fire_event('onBlur');\n                    }\n                    if (!silent && ret === undefined || silent) {\n                        enabled = false;\n                        command_line.disable();\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: return true if the terminal is enabled\n            // -------------------------------------------------------------\n            enabled: function() {\n                return enabled;\n            },\n            // -------------------------------------------------------------\n            // :: Return the terminal signature depending on the size of the terminal\n            // -------------------------------------------------------------\n            signature: function() {\n                var cols = self.cols();\n                for (var i = signatures.length; i--;) {\n                    var lenghts = signatures[i].map(function(line) {\n                        return line.length;\n                    });\n                    if (Math.max.apply(null, lenghts) <= cols) {\n                        return signatures[i].join('\\n') + '\\n';\n                    }\n                }\n                return '';\n            },\n            // -------------------------------------------------------------\n            // :: Return the version number\n            // -------------------------------------------------------------\n            version: function() {\n                return $.terminal.version;\n            },\n            // -------------------------------------------------------------\n            // :: Return actual command line object (jquery object with cmd\n            // :: methods)\n            // -------------------------------------------------------------\n            cmd: function() {\n                return command_line;\n            },\n            // -------------------------------------------------------------\n            // :: Return the current command entered by terminal\n            // -------------------------------------------------------------\n            get_command: function() {\n                return command_line.get();\n            },\n            // -------------------------------------------------------------\n            // :: Change the command line to the new one\n            // -------------------------------------------------------------\n            set_command: function(command, silent) {\n                when_ready(function ready() {\n                    // TODO: refactor to use options - breaking change\n                    if (typeof command !== 'string') {\n                        command = JSON.stringify(command);\n                    }\n                    command_line.set(command, undefined, silent);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Change position of the command line\n            // -------------------------------------------------------------\n            set_position: function(position, relative) {\n                when_ready(function ready() {\n                    command_line.position(position, relative);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return position of the command line\n            // -------------------------------------------------------------\n            get_position: function() {\n                return command_line.position();\n            },\n            // -------------------------------------------------------------\n            // :: Insert text into the command line after the cursor\n            // -------------------------------------------------------------\n            insert: function(string, stay) {\n                if (typeof string === 'string') {\n                    when_ready(function ready() {\n                        var bottom = self.is_bottom();\n                        command_line.insert(string, stay);\n                        if (settings.scrollOnEcho || bottom) {\n                            self.scroll_to_bottom();\n                        }\n                    });\n                    return self;\n                } else {\n                    throw new Error(sprintf(strings().notAString, 'insert'));\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Set the prompt of the command line\n            // -------------------------------------------------------------\n            set_prompt: function(prompt) {\n                when_ready(function ready() {\n                    if (is_function(prompt)) {\n                        command_line.prompt(function(callback) {\n                            prompt.call(self, callback, self);\n                        });\n                    } else {\n                        command_line.prompt(prompt);\n                    }\n                    interpreters.top().prompt = prompt;\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return the prompt used by the terminal\n            // -------------------------------------------------------------\n            get_prompt: function() {\n                return interpreters.top().prompt;\n                // command_line.prompt(); - can be a wrapper\n                //return command_line.prompt();\n            },\n            // -------------------------------------------------------------\n            // :: Enable or Disable mask depedning on the passed argument\n            // :: the mask can also be character (in fact it will work with\n            // :: strings longer then one)\n            // -------------------------------------------------------------\n            set_mask: function(mask) {\n                when_ready(function ready() {\n                    command_line.mask(mask === true ? settings.maskChar : mask);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return the ouput of the terminal as text\n            // -------------------------------------------------------------\n            get_output: function(raw) {\n                if (raw) {\n                    return lines;\n                } else {\n                    return $.map(lines, function(item) {\n                        return is_function(item[0]) ? item[0]() : item[0];\n                    }).join('\\n');\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Recalculate and redraw everything\n            // -------------------------------------------------------------\n            resize: function(width, height) {\n                if (!self.is(':visible')) {\n                    // delay resize if terminal not visible\n                    self.stopTime('resize');\n                    self.oneTime(500, 'resize', function() {\n                        self.resize(width, height);\n                    });\n                } else {\n                    if (width && height) {\n                        self.width(width);\n                        self.height(height);\n                    }\n                    width = self.width();\n                    height = self.height();\n                    if (typeof settings.numChars !== 'undefined' ||\n                        typeof settings.numRows !== 'undefined') {\n                        command_line.resize(settings.numChars);\n                        self.refresh();\n                        return;\n                    }\n                    var new_num_chars = get_num_chars(self, char_size);\n                    var new_num_rows = get_num_rows(self, char_size);\n                    // only if number of chars changed\n                    if (new_num_chars !== num_chars ||\n                        new_num_rows !== num_rows) {\n                        num_chars = new_num_chars;\n                        num_rows = new_num_rows;\n                        command_line.resize(num_chars);\n                        self.refresh();\n                        fire_event('onResize');\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: redraw the terminal\n            // -------------------------------------------------------------\n            refresh: function() {\n                if (char_size.width !== 0) {\n                    self[0].style.setProperty('--char-width', char_size.width);\n                }\n                redraw({\n                    scroll: false,\n                    update: true\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Flush the output to the terminal\n            // -------------------------------------------------------------\n            flush: function(options) {\n                options = $.extend({}, {\n                    update: false,\n                    scroll: true\n                }, options || {});\n                try {\n                    var bottom = self.is_bottom();\n                    var wrapper;\n                    // print all lines\n                    // var output_buffer = lines.flush();\n                    $.each(output_buffer, function(i, line) {\n                        if (line === NEW_LINE) {\n                            wrapper = $('<div></div>');\n                        } else if ($.isPlainObject(line) && is_function(line.finalize)) {\n                            // this is finalize function from echo\n                            if (options.update) {\n                                var selector = '> div[data-index=' + line.index + ']';\n                                var node = output.find(selector);\n                                if (node.html() !== wrapper.html()) {\n                                    node.replaceWith(wrapper);\n                                }\n                            } else {\n                                wrapper.appendTo(output);\n                            }\n                            line.finalize(wrapper.attr('data-index', line.index));\n                        } else {\n                            $('<div/>').html(line)\n                                .appendTo(wrapper).width('100%');\n                        }\n                    });\n                    limit_lines();\n                    fire_event('onFlush');\n                    //num_rows = get_num_rows(self, char_size);\n                    if ((settings.scrollOnEcho && options.scroll) || bottom) {\n                        self.scroll_to_bottom();\n                    }\n                    output_buffer = [];\n                } catch (e1) {\n                    if (is_function(settings.exceptionHandler)) {\n                        try {\n                            settings.exceptionHandler.call(self, e1, 'TERMINAL (Flush)');\n                        } catch (e2) {\n                            settings.exceptionHandler = $.noop;\n                            alert_exception('[exceptionHandler]', e2);\n                        }\n                    } else {\n                        alert_exception('[Flush]', e1);\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Update the output line - line number can be negative\n            // -------------------------------------------------------------\n            update: function(line, string, options) {\n                when_ready(function ready() {\n                    if (line < 0) {\n                        line = lines.length + line; // yes +\n                    }\n                    if (!lines[line]) {\n                        self.error('Invalid line number ' + line);\n                    } else if (string === null) {\n                        lines.splice(line, 1);\n                        output.find('[data-index=' + line + ']').remove();\n                    } else {\n                        lines[line][0] = string;\n                        if (options) {\n                            lines[line][1] = options;\n                        }\n                        process_line({\n                            string: string,\n                            index: line,\n                            options: options\n                        });\n                        self.flush({\n                            scroll: false,\n                            update: true\n                        });\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: convenience method for removing selected line\n            // -------------------------------------------------------------\n            remove_line: function(line) {\n                return self.update(line, null);\n            },\n            // -------------------------------------------------------------\n            // :: return index of last line in case when you need to update\n            // :: after something is echo on the terminal\n            // -------------------------------------------------------------\n            last_index: function() {\n                return lines.length - 1;\n            },\n            // -------------------------------------------------------------\n            // :: Print data to the terminal output. It can have two options\n            // :: a function that is called with the container div that\n            // :: holds the output (as a jquery object) every time the\n            // :: output is printed (including resize and scrolling)\n            // :: If the line is a function it will be called for every\n            // :: redraw.\n            // :: it use $.when so you can echo a promise\n            // -------------------------------------------------------------\n            echo: function(arg, options) {\n                function echo(arg) {\n                    try {\n                        var locals = $.extend({\n                            flush: true,\n                            raw: settings.raw,\n                            finalize: $.noop,\n                            keepWords: false,\n                            formatters: true\n                        }, options || {});\n                        (function(finalize) {\n                            locals.finalize = function(div) {\n                                if (locals.raw) {\n                                    div.addClass('raw');\n                                }\n                                try {\n                                    if (is_function(finalize)) {\n                                        finalize(div);\n                                    }\n                                } catch (e) {\n                                    display_exception(e, 'USER:echo(finalize)');\n                                    finalize = null;\n                                }\n                            };\n                        })(locals.finalize);\n                        if (locals.flush) {\n                            // flush buffer if there was no flush after previous echo\n                            if (output_buffer.length) {\n                                self.flush();\n                            }\n                            output_buffer = [];\n                        }\n                        if (typeof arg === 'function') {\n                            arg = arg.bind(self);\n                        }\n                        process_line({\n                            string: arg,\n                            options: locals,\n                            index: lines.length\n                        });\n                        // extended commands should be processed only\n                        // once in echo and not on redraw\n                        lines.push([arg, $.extend(locals, {\n                            exec: false\n                        })]);\n                        if (locals.flush) {\n                            self.flush();\n                        }\n                    } catch (e) {\n                        // if echo throw exception we can't use error to\n                        // display that exception\n                        if (is_function(settings.exceptionHandler)) {\n                            settings.exceptionHandler.call(self, e, 'TERMINAL (echo)');\n                        } else {\n                            alert_exception('[Terminal.echo]', e);\n                        }\n                    }\n                }\n                if (arg !== undefined && is_function(arg.then)) {\n                    $.when(arg).done(echo);\n                } else {\n                    echo(arg);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: echo red text\n            // -------------------------------------------------------------\n            error: function(message, options) {\n                options = $.extend({}, options, {raw: false, formatters: false});\n                function format(string) {\n                    if (typeof string !== 'string') {\n                        string = String(string);\n                    }\n                    // quick hack to fix trailing backslash\n                    var str = $.terminal.escape_brackets(string).\n                        replace(/\\\\$/, '&#92;').\n                        replace(url_re, ']$1[[;;;error]');\n                    return '[[;;;error]' + str + ']';\n                }\n                if (typeof message === 'function') {\n                    return self.echo(function() {\n                        return format(message.call(self));\n                    }, options);\n                }\n                if (message && message.then) {\n                    message.then(function(string) {\n                        self.echo(format(string));\n                    });\n                    return self;\n                }\n                return self.echo(format(message), options);\n            },\n            // -------------------------------------------------------------\n            // :: Display Exception on terminal\n            // -------------------------------------------------------------\n            exception: function(e, label) {\n                var message = exception_message(e);\n                if (label) {\n                    message = '&#91;' + label + '&#93;: ' + message;\n                }\n                if (message) {\n                    self.error(message, {\n                        finalize: function(div) {\n                            div.addClass('exception message');\n                        },\n                        keepWords: true\n                    });\n                }\n                if (typeof e.fileName === 'string') {\n                    // display filename and line which throw exeption\n                    self.pause(settings.softPause);\n                    $.get(e.fileName, function(file) {\n                        var num = e.lineNumber - 1;\n                        var line = file.split('\\n')[num];\n                        if (line) {\n                            self.error('[' + e.lineNumber + ']: ' + line);\n                        }\n                        self.resume();\n                    }, 'text');\n                }\n                if (e.stack) {\n                    var stack = $.terminal.escape_brackets(e.stack);\n                    self.echo(stack.split(/\\n/g).map(function(trace) {\n                        return '[[;;;error]' + trace.replace(url_re, function(url) {\n                            return ']' + url + '[[;;;error]';\n                        }) + ']';\n                    }).join('\\n'), {\n                        finalize: function(div) {\n                            div.addClass('exception stack-trace');\n                        },\n                        formatters: false\n                    });\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Scroll Div that holds the terminal\n            // -------------------------------------------------------------\n            scroll: function(amount) {\n                var pos;\n                amount = Math.round(amount);\n                if (self.prop) { // work with jQuery > 1.6\n                    if (amount > self.prop('scrollTop') && amount > 0) {\n                        self.prop('scrollTop', 0);\n                    }\n                    pos = self.prop('scrollTop');\n                    self.scrollTop(pos + amount);\n                } else {\n                    if (amount > self.attr('scrollTop') && amount > 0) {\n                        self.attr('scrollTop', 0);\n                    }\n                    pos = self.attr('scrollTop');\n                    self.scrollTop(pos + amount);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Exit all interpreters and logout. The function will throw\n            // :: exception if there is no login provided\n            // -------------------------------------------------------------\n            logout: function(local) {\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'logout'));\n                }\n                when_ready(function ready() {\n                    if (local) {\n                        var login = logins.pop();\n                        self.set_token(undefined, true);\n                        self.login.apply(self, login);\n                    } else if (interpreters.size() === 1 && self.token()) {\n                        self.logout(true);\n                    } else {\n                        while (interpreters.size() > 1) {\n                            // pop will call global_logout that will call login\n                            // and size will be > 0; this is workaround the problem\n                            if (self.token()) {\n                                self.logout(true).pop().pop();\n                            } else {\n                                self.pop();\n                            }\n                        }\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function returns the token returned by callback function\n            // :: in login function. It does nothing (return undefined) if\n            // :: there is no login\n            // -------------------------------------------------------------\n            token: function(local) {\n                return storage.get(self.prefix_name(local) + '_token');\n            },\n            // -------------------------------------------------------------\n            // :: Function sets the token to the supplied value. This function\n            // :: works regardless of wherer settings.login is supplied\n            // -------------------------------------------------------------\n            set_token: function(token, local) {\n                var name = self.prefix_name(local) + '_token';\n                if (typeof token === 'undefined') {\n                    storage.remove(name);\n                } else {\n                    storage.set(name, token);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function get the token either set by the login method or\n            // :: by the set_token method.\n            // -------------------------------------------------------------\n            get_token: function(local) {\n                return self.token(local);\n            },\n            // -------------------------------------------------------------\n            // :: Function return Login name entered by the user\n            // -------------------------------------------------------------\n            login_name: function(local) {\n                return storage.get(self.prefix_name(local) + '_login');\n            },\n            // -------------------------------------------------------------\n            // :: Function returns the name of current interpreter\n            // -------------------------------------------------------------\n            name: function() {\n                return interpreters.top().name;\n            },\n            // -------------------------------------------------------------\n            // :: Function return prefix name for login/token\n            // -------------------------------------------------------------\n            prefix_name: function(local) {\n                var name = (settings.name ? settings.name + '_' : '') +\n                    terminal_id;\n                if (local && interpreters.size() > 1) {\n                    var local_name = interpreters.map(function(intrp) {\n                        return intrp.name || '';\n                    }).slice(1).join('_');\n                    if (local_name) {\n                        name += '_' + local_name;\n                    }\n                }\n                return name;\n            },\n            // -------------------------------------------------------------\n            // :: wrapper for common use case\n            // -------------------------------------------------------------\n            read: function(message, success, cancel) {\n                var defer = jQuery.Deferred();\n                var read = false;\n                self.push(function(string) {\n                    read = true;\n                    defer.resolve(string);\n                    if (is_function(success)) {\n                        success(string);\n                    }\n                    self.pop();\n                    if (settings.history) {\n                        command_line.history().enable();\n                    }\n                }, {\n                    name: 'read',\n                    history: false,\n                    prompt: message || '',\n                    onExit: function() {\n                        if (!read) {\n                            defer.reject();\n                            if (is_function(cancel)) {\n                                cancel();\n                            }\n                        }\n                    }\n                });\n                if (settings.history) {\n                    command_line.history().disable();\n                }\n                return defer.promise();\n            },\n            // -------------------------------------------------------------\n            // :: Push a new interenter on the Stack\n            // -------------------------------------------------------------\n            push: function(interpreter, options) {\n                cmd_ready(function ready() {\n                    options = options || {};\n                    var defaults = {\n                        infiniteLogin: false\n                    };\n                    var push_settings = $.extend({}, defaults, options);\n                    if (!push_settings.name && prev_command) {\n                        // push is called in login\n                        push_settings.name = prev_command.name;\n                    }\n                    if (push_settings.prompt === undefined) {\n                        push_settings.prompt = (push_settings.name || '>') + ' ';\n                    }\n                    // names.push(options.name);\n                    var top = interpreters.top();\n                    if (top) {\n                        top.mask = command_line.mask();\n                    }\n                    var was_paused = paused;\n                    function init() {\n                        fire_event('onPush', [top, interpreters.top()]);\n                        prepare_top_interpreter();\n                    }\n                    // self.pause();\n                    make_interpreter(interpreter, options.login, function(ret) {\n                        // result is object with interpreter and completion properties\n                        interpreters.push($.extend({}, ret, push_settings));\n                        if (push_settings.completion === true) {\n                            if ($.isArray(ret.completion)) {\n                                interpreters.top().completion = ret.completion;\n                            } else if (!ret.completion) {\n                                interpreters.top().completion = false;\n                            }\n                        }\n                        if (push_settings.login) {\n                            var error;\n                            var type = get_type(push_settings.login);\n                            if (type === 'function') {\n                                error = push_settings.infiniteLogin ? $.noop : self.pop;\n                                self.login(\n                                    push_settings.login,\n                                    push_settings.infiniteLogin,\n                                    init,\n                                    error\n                                );\n                            } else if (get_type(interpreter) === 'string' &&\n                                       type === 'string' || type === 'boolean') {\n                                error = push_settings.infiniteLogin ? $.noop : self.pop;\n                                self.login(\n                                    make_json_rpc_login(\n                                        interpreter,\n                                        push_settings.login\n                                    ),\n                                    push_settings.infiniteLogin,\n                                    init,\n                                    error\n                                );\n                            }\n                        } else {\n                            init();\n                        }\n                        if (!was_paused && self.enabled()) {\n                            self.resume();\n                        }\n                    });\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove the last interpreter from the Stack\n            // -------------------------------------------------------------\n            pop: function(string, silent) {\n                if (string !== undefined) {\n                    echo_command(string);\n                }\n                var token = self.token(true);\n                var top;\n                if (interpreters.size() === 1) {\n                    top = interpreters.top();\n                    if (settings.login) {\n                        if (!silent) {\n                            fire_event('onPop', [top, null]);\n                        }\n                        global_logout();\n                        fire_event('onExit');\n                    } else {\n                        self.error(strings().canExitError);\n                    }\n                } else {\n                    if (token) {\n                        clear_loging_storage();\n                    }\n                    var current = interpreters.pop();\n                    top = interpreters.top();\n                    prepare_top_interpreter();\n                    if (!silent) {\n                        fire_event('onPop', [current, top]);\n                    }\n                    // we check in case if you don't pop from password interpreter\n                    if (in_login && self.get_prompt() !== strings().login + ': ') {\n                        in_login = false;\n                    }\n                    if (is_function(current.onExit)) {\n                        try {\n                            current.onExit.call(self, self);\n                        } catch (e) {\n                            current.onExit = $.noop;\n                            display_exception(e, 'onExit');\n                        }\n                    }\n                    // restore mask\n                    self.set_mask(top.mask);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Change terminal option(s) at runtime\n            // -------------------------------------------------------------\n            option: function(object_or_name, value) {\n                if (typeof value === 'undefined') {\n                    if (typeof object_or_name === 'string') {\n                        return settings[object_or_name];\n                    } else if (typeof object_or_name === 'object') {\n                        $.each(object_or_name, function(key, value) {\n                            settings[key] = value;\n                        });\n                    }\n                } else {\n                    settings[object_or_name] = value;\n                    if (object_or_name.match(/^num(Chars|Rows)$/)) {\n                        redraw();\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: invoke keydown shorcut\n            // -------------------------------------------------------------\n            invoke_key: function(shortcut) {\n                var keys = shortcut.toUpperCase().split('+');\n                var key = keys.pop();\n                var ctrl = keys.indexOf('CTRL') !== -1;\n                var shift = keys.indexOf('SHIFT') !== -1;\n                var alt = keys.indexOf('ALT') !== -1;\n                var meta = keys.indexOf('META') !== -1;\n                var e = $.Event(\"keydown\", {\n                    ctrlKey: ctrl,\n                    shiftKey: shift,\n                    altKey: alt,\n                    metaKey: meta,\n                    which: reversed_keycodes[key],\n                    key: key\n                });\n                var doc = $(document.documentElement || window);\n                doc.trigger(e);\n                e = $.Event(\"keypress\");\n                e.key = key;\n                e.which = e.keyCode = 0;\n                doc.trigger(e);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: change terminal keymap at runtime\n            // -------------------------------------------------------------\n            keymap: function(keymap, fn) {\n                if (arguments.length === 0) {\n                    return command_line.keymap();\n                }\n                if (typeof fn === 'undefined') {\n                    if (typeof keymap === 'string') {\n                        return command_line.keymap(keymap);\n                    } else if ($.isPlainObject(keymap)) {\n                        // argument is an object\n                        keymap = $.omap(keymap || {}, function(key, fn) {\n                            if (!new_keymap[key]) {\n                                return fn.bind(self);\n                            }\n                            return function(e, original) {\n                                // new keymap function will get default as 2nd argument\n                                return fn.call(self, e, function() {\n                                    return new_keymap[key](e, original);\n                                });\n                            };\n                        });\n                        command_line.keymap(keymap);\n                    }\n                } else if (typeof fn === 'function') {\n                    var key = keymap;\n                    if (!new_keymap[key]) {\n                        command_line.keymap(key, fn.bind(self));\n                    } else {\n                        command_line.keymap(key, function(e, original) {\n                            return fn.call(self, e, function() {\n                                return new_keymap[key](e, original);\n                            });\n                        });\n                    }\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Return how deep you are in nested interpreters\n            // -------------------------------------------------------------\n            level: function() {\n                return interpreters.size();\n            },\n            // -------------------------------------------------------------\n            // :: Reinitialize the terminal\n            // -------------------------------------------------------------\n            reset: function() {\n                when_ready(function ready() {\n                    self.clear();\n                    while (interpreters.size() > 1) {\n                        interpreters.pop();\n                    }\n                    initialize();\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove all local storage left by terminal, it will not\n            // :: logout you until you refresh the browser\n            // -------------------------------------------------------------\n            purge: function() {\n                when_ready(function ready() {\n                    var prefix = self.prefix_name() + '_';\n                    var names = storage.get(prefix + 'interpreters');\n                    if (names) {\n                        $.each(JSON.parse(names), function(_, name) {\n                            storage.remove(name + '_commands');\n                            storage.remove(name + '_token');\n                            storage.remove(name + '_login');\n                        });\n                    }\n                    command_line.purge();\n                    storage.remove(prefix + 'interpreters');\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove all events and DOM nodes left by terminal, it will\n            // :: not purge the terminal so you will have the same state\n            // :: when you refresh the browser\n            // -------------------------------------------------------------\n            destroy: function() {\n                when_ready(function ready() {\n                    command_line.destroy().remove();\n                    self.resizer('unbind');\n                    font_resizer.resizer('unbind').remove();\n                    $(document).unbind('.terminal_' + self.id());\n                    $(window).unbind('.terminal_' + self.id());\n                    self.unbind('click wheel mousewheel mousedown mouseup');\n                    self.removeData('terminal').removeClass('terminal').\n                        unbind('.terminal');\n                    if (settings.width) {\n                        self.css('width', '');\n                    }\n                    if (settings.height) {\n                        self.css('height', '');\n                    }\n                    $(window).off('blur', blur_terminal).\n                        off('focus', focus_terminal);\n                    self.find('.terminal-fill').remove();\n                    self.stopTime();\n                    terminals.remove(terminal_id);\n                    if (visibility_observer) {\n                        if (visibility_observer.unobserve) {\n                            visibility_observer.unobserve(self[0]);\n                        } else {\n                            clearInterval(visibility_observer);\n                        }\n                    }\n                    if (mutation_observer) {\n                        mutation_observer.disconnect();\n                    }\n                    if (!terminals.length()) {\n                        $(window).off('hashchange');\n                    }\n                    output.remove();\n                    wrapper.remove();\n                    defunct = true;\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            scroll_to_bottom: function() {\n                var scrollHeight;\n                if (self.prop) {\n                    scrollHeight = self.prop('scrollHeight');\n                } else {\n                    scrollHeight = self.attr('scrollHeight');\n                }\n                self.scrollTop(scrollHeight);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: return true if terminal div or body is at the bottom\n            // :: is use scrollBottomOffset option as margin for the check\n            // -------------------------------------------------------------\n            is_bottom: function() {\n                if (settings.scrollBottomOffset === -1) {\n                    return false;\n                } else {\n                    var scroll_height, scroll_top, height;\n                    scroll_height = self[0].scrollHeight;\n                    scroll_top = self.scrollTop();\n                    height = self.outerHeight();\n                    var limit = scroll_height - settings.scrollBottomOffset;\n                    return scroll_top + height > limit;\n                }\n            }\n        }, function(name, fun) {\n            // wrap all functions and display execptions\n            return function() {\n                if (defunct) {\n                    if (!settings.exceptionHandler) {\n                        throw new $.terminal.Exception(strings().defunctTerminal);\n                    }\n                }\n                try {\n                    return fun.apply(self, [].slice.apply(arguments));\n                } catch (e) {\n                    // exec catch by command (resume call exec)\n                    if (name !== 'exec' && name !== 'resume') {\n                        display_exception(e, e.type || 'TERMINAL', true);\n                    }\n                    if (!settings.exceptionHandler) {\n                        throw e;\n                    }\n                }\n            };\n        }));\n        // for invoking shortcuts using terminal::keydown\n        // taken from https://github.com/cvan/keyboardevent-key-polyfill/\n        var keycodes = {\n            3: 'Cancel',\n            6: 'Help',\n            8: 'Backspace',\n            9: 'Tab',\n            12: 'Clear',\n            13: 'Enter',\n            16: 'Shift',\n            17: 'Control',\n            18: 'Alt',\n            19: 'Pause',\n            20: 'CapsLock',\n            27: 'Escape',\n            28: 'Convert',\n            29: 'NonConvert',\n            30: 'Accept',\n            31: 'ModeChange',\n            32: ' ',\n            33: 'PageUp',\n            34: 'PageDown',\n            35: 'End',\n            36: 'Home',\n            37: 'ArrowLeft',\n            38: 'ArrowUp',\n            39: 'ArrowRight',\n            40: 'ArrowDown',\n            41: 'Select',\n            42: 'Print',\n            43: 'Execute',\n            44: 'PrintScreen',\n            45: 'Insert',\n            46: 'Delete',\n            48: ['0', ')'],\n            49: ['1', '!'],\n            50: ['2', '@'],\n            51: ['3', '#'],\n            52: ['4', '$'],\n            53: ['5', '%'],\n            54: ['6', '^'],\n            55: ['7', '&'],\n            56: ['8', '*'],\n            57: ['9', '('],\n            91: 'OS',\n            93: 'ContextMenu',\n            144: 'NumLock',\n            145: 'ScrollLock',\n            181: 'VolumeMute',\n            182: 'VolumeDown',\n            183: 'VolumeUp',\n            186: [';', ':'],\n            187: ['=', '+'],\n            188: [',', '<'],\n            189: ['-', '_'],\n            190: ['.', '>'],\n            191: ['/', '?'],\n            192: ['`', '~'],\n            219: ['[', '{'],\n            220: ['\\\\', '|'],\n            221: [']', '}'],\n            222: [\"'\", '\"'],\n            224: 'Meta',\n            225: 'AltGraph',\n            246: 'Attn',\n            247: 'CrSel',\n            248: 'ExSel',\n            249: 'EraseEof',\n            250: 'Play',\n            251: 'ZoomOut'\n        };\n        // Function keys (F1-24).\n        for (i = 1; i < 25; i++) {\n            keycodes[111 + i] = 'F' + i;\n        }\n        // Printable ASCII characters.\n        var letter = '';\n        for (i = 65; i < 91; i++) {\n            letter = String.fromCharCode(i);\n            keycodes[i] = [letter.toLowerCase(), letter.toUpperCase()];\n        }\n        var reversed_keycodes = {};\n        Object.keys(keycodes).forEach(function(which) {\n            if (keycodes[which] instanceof Array) {\n                keycodes[which].forEach(function(key) {\n                    reversed_keycodes[key.toUpperCase()] = which;\n                });\n            } else {\n                reversed_keycodes[keycodes[which].toUpperCase()] = which;\n            }\n        });\n\n        // -----------------------------------------------------------------\n        // INIT CODE\n        // -----------------------------------------------------------------\n        // backward compatibility\n        if (settings.ignoreSystemDescribe === true) {\n            settings.describe = false;\n        }\n        if (settings.width) {\n            self.width(settings.width);\n        }\n        if (settings.height) {\n            self.height(settings.height);\n        }\n        // register ajaxSend for cancel requests on CTRL+D\n        $(document).bind('ajaxSend.terminal_' + self.id(), function(e, xhr) {\n            requests.push(xhr);\n        });\n        var wrapper = $('<div class=\"terminal-wrapper\"/>').appendTo(self);\n        var font_resizer = $('<div class=\"font\">&nbsp;</div>').appendTo(self);\n        var fill = $('<div class=\"terminal-fill\"/>').appendTo(self);\n        output = $('<div>').addClass('terminal-output').attr('role', 'log')\n            .appendTo(wrapper);\n        self.addClass('terminal');\n        // before login event\n        if (settings.login && fire_event('onBeforeLogin') === false) {\n            autologin = false;\n        }\n        // create json-rpc authentication function\n        var base_interpreter;\n        if (typeof init_interpreter === 'string') {\n            base_interpreter = init_interpreter;\n        } else if (init_interpreter instanceof Array) {\n            // first JSON-RPC\n            for (var i = 0, len = init_interpreter.length; i < len; ++i) {\n                if (typeof init_interpreter[i] === 'string') {\n                    base_interpreter = init_interpreter[i];\n                    break;\n                }\n            }\n        }\n        var global_login_fn;\n        if (is_function(settings.login)) {\n            global_login_fn = settings.login;\n        } else if (base_interpreter &&\n            (typeof settings.login === 'string' || settings.login === true)) {\n            global_login_fn = make_json_rpc_login(base_interpreter, settings.login);\n        }\n        terminals.append(self);\n        function focus_terminal() {\n            if (old_enabled) {\n                self.focus();\n            }\n        }\n        function blur_terminal() {\n            old_enabled = enabled;\n            self.disable().find('.cmd textarea').trigger('blur', [true]);\n        }\n        // paste event is not testable in node\n        // istanbul ignore next\n        function paste_event(e) {\n            e = e.originalEvent;\n            // we don't care about browser that don't support clipboard data\n            // those browser simple will not have this feature normal paste\n            // is cross-browser and it's handled by cmd plugin\n            function is_type(item, type) {\n                return item.type.indexOf(type) !== -1;\n            }\n            if (e.clipboardData) {\n                if (self.enabled()) {\n                    var items = e.clipboardData.items;\n                    if (items) {\n                        for (var i = 0; i < items.length; i++) {\n                            if (is_type(items[i], 'image') && settings.pasteImage) {\n                                var blob = items[i].getAsFile();\n                                var URL = window.URL || window.webkitURL;\n                                var source = URL.createObjectURL(blob);\n                                self.echo('<img src=\"' + source + '\"/>', {raw: true});\n                            } else if (is_type(items[i], 'text/plain')) {\n                                items[i].getAsString(self.insert);\n                            }\n                        }\n                    } else if (e.clipboardData.getData) {\n                        var text = e.clipboardData.getData('text/plain');\n                        self.insert(text);\n                    }\n                    return false;\n                }\n            }\n        }\n        $(document).on('paste.terminal_' + self.id(), paste_event);\n        var new_keymap = $.extend(\n            {},\n            keymap,\n            $.omap(settings.keymap || {}, function(key, fn) {\n                if (!keymap[key]) {\n                    return fn.bind(self);\n                }\n                return function(e, original) {\n                    // new keymap function will get default as 2nd argument\n                    return fn.call(self, e, function() {\n                        return keymap[key](e, original);\n                    });\n                };\n            })\n        );\n        make_interpreter(init_interpreter, settings.login, function(itrp) {\n            if (settings.completion && typeof settings.completion !== 'boolean' ||\n                !settings.completion) {\n                // overwrite interpreter completion by global setting #224\n                // we use string to indicate that it need to be taken from settings\n                // so we are able to change it using option API method\n                itrp.completion = 'settings';\n            }\n            interpreters = new Stack($.extend({}, settings.extra, {\n                name: settings.name,\n                prompt: settings.prompt,\n                keypress: settings.keypress,\n                keydown: settings.keydown,\n                resize: settings.onResize,\n                greetings: settings.greetings,\n                mousewheel: settings.mousewheel,\n                history: settings.history,\n                keymap: new_keymap\n            }, itrp));\n            // CREATE COMMAND LINE\n            command_line = $('<div/>').appendTo(wrapper).cmd({\n                tabindex: settings.tabindex,\n                prompt: settings.prompt,\n                history: settings.memory ? 'memory' : settings.history,\n                historyFilter: settings.historyFilter,\n                historySize: settings.historySize,\n                caseSensitiveSearch: settings.caseSensitiveSearch,\n                width: '100%',\n                enabled: false,\n                char_width: char_size.width,\n                keydown: key_down,\n                keymap: new_keymap,\n                clickTimeout: settings.clickTimeout,\n                holdTimeout: settings.holdTimeout,\n                holdRepeatTimeout: settings.holdRepeatTimeout,\n                repeatTimeoutKeys: settings.repeatTimeoutKeys,\n                keypress: key_press,\n                tabs: settings.tabs,\n                onPositionChange: function() {\n                    var args = [].slice.call(arguments);\n                    move_cursor_visible();\n                    fire_event('onPositionChange', args);\n                },\n                onCommandChange: function(command) {\n                    // resize is not triggered when insert called just after init\n                    //  and scrollbar appear\n                    if (old_width !== fill.width()) {\n                        // resizer handler will update old_width\n                        self.resizer();\n                    }\n                    fire_event('onCommandChange', [command]);\n                    if (!move_cursor_visible()) {\n                        self.scroll_to_bottom();\n                    }\n                },\n                commands: commands\n            });\n            function disable(e) {\n                e = e.originalEvent;\n                if (e) {\n                    // e.terget is body when click outside of context menu to close it\n                    // even if you click on terminal\n                    var node = document.elementFromPoint(e.clientX, e.clientY);\n                    if (!$(node).closest('.terminal').length && self.enabled()) {\n                        // we only need to disable when click outside of terminal\n                        // click on other terminal is handled by focus event\n                        self.disable();\n                    }\n                }\n            }\n            self.oneTime(100, function() {\n                $(document).bind('click.terminal_' + self.id(), disable).\n                    bind('contextmenu.terminal_' + self.id(), disable);\n            });\n            var $win = $(window);\n            // cordova application, if keyboard was open and we resume it will be\n            // closed so we need to disable terminal so you can enable it with tap\n            document.addEventListener(\"resume\", function() {\n                self.disable();\n            });\n            // istanbul ignore next\n            if (is_mobile) {\n                self.click(function() {\n                    if (!frozen) {\n                        if (!self.enabled()) {\n                            self.focus();\n                            command_line.enable();\n                        } else {\n                            self.disable();\n                        }\n                    }\n                });\n            } else {\n                // work weird on mobile\n                $win.on('focus.terminal_' + self.id(), focus_terminal).\n                    on('blur.terminal_' + self.id(), blur_terminal);\n                // detect mouse drag\n                (function() {\n                    var count = 0;\n                    var $target;\n                    var name = 'click_' + self.id();\n                    var textarea = self.find('.cmd textarea');\n                    function click() {\n                        if ($target.is('.terminal') ||\n                            $target.is('.terminal-wrapper')) {\n                            var len = self.get_command().length;\n                            self.set_position(len);\n                        } else if ($target.closest('.prompt').length) {\n                            self.set_position(0);\n                        }\n                        if (!textarea.is(':focus')) {\n                            textarea.focus();\n                        }\n                        reset();\n                    }\n                    function reset() {\n                        count = 0;\n                        $target = null;\n                    }\n                    var ignore_elements = '.terminal-output textarea,' +\n                        '.terminal-output input';\n                    // hack for weird jumping on Chrome/windows #402\n                    var scroll_top;\n                    self.find('.cmd textarea').on('focus', function() {\n                        if (typeof scroll_top !== 'undefined') {\n                            self.scrollTop(scroll_top);\n                        }\n                    }).on('blur', function() {\n                        scroll_top = self.scrollTop();\n                    });\n                    self.mousedown(function(e) {\n                        if (!scrollbar_event(e, fill)) {\n                            $target = $(e.target);\n                        }\n                    }).mouseup(function() {\n                        if ($target && $target.closest(ignore_elements).length) {\n                            if (enabled) {\n                                self.disable();\n                            }\n                        } else if (get_selected_text() === '' && $target) {\n                            if (++count === 1) {\n                                if (!frozen) {\n                                    if (!enabled) {\n                                        self.focus();\n                                    } else {\n                                        var timeout = settings.clickTimeout;\n                                        self.oneTime(timeout, name, click);\n                                        return;\n                                    }\n                                }\n                            } else {\n                                self.stopTime(name);\n                            }\n                        }\n                        reset();\n                    }).dblclick(function() {\n                        reset();\n                        self.stopTime(name);\n                    });\n                })();\n                (function() {\n                    var clip = self.find('.cmd textarea');\n                    self.on('contextmenu.terminal', function(e) {\n                        if (get_selected_text() === '') {\n                            if (!$(e.target).is('img,value,audio,object,canvas,a')) {\n                                if (!self.enabled()) {\n                                    self.enable();\n                                }\n                                var offset = command_line.offset();\n                                clip.css({\n                                    left: e.pageX - offset.left - 20,\n                                    top: e.pageY - offset.top - 20,\n                                    width: '5em',\n                                    height: '4em'\n                                });\n                                if (!clip.is(':focus')) {\n                                    clip.focus();\n                                }\n                                self.stopTime('textarea');\n                                self.oneTime(100, 'textarea', function() {\n                                    var props = {\n                                        left: '',\n                                        top: '',\n                                        width: '',\n                                        height: ''\n                                    };\n                                    if (!is_css_variables_supported) {\n                                        var in_line = self.find('.cmd .cursor-line')\n                                            .prevUntil('.prompt').length;\n                                        props.top = in_line * 14 + 'px';\n                                    }\n                                    clip.css(props);\n                                });\n                                self.stopTime('selection');\n                                self.everyTime(20, 'selection', function() {\n                                    if (clip[0].selection !== clip[0].value) {\n                                        if (get_textarea_selection(clip[0])) {\n                                            clear_textarea_selection(clip[0]);\n                                            select(\n                                                self.find('.terminal-output')[0],\n                                                self.find('.cmd div:last-of-type')[0]\n                                            );\n                                            self.stopTime('selection');\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                    });\n                })();\n            }\n            self.on('click', 'a', function(e) {\n                var $this = $(this);\n                if ($this.closest('.exception').length) {\n                    var href = $this.attr('href');\n                    if (href.match(/:[0-9]+$/)) { // display line if specified\n                        e.preventDefault();\n                        print_line(href);\n                    }\n                }\n                // refocus because links have tabindex in case where user want\n                // tab change urls, we can ignore this function on click\n                if (enabled) {\n                    self.find('.cmd textarea').focus();\n                }\n            });\n            function calculate_char_size() {\n                var width = char_size.width;\n                char_size = get_char_size(self);\n                if (width !== char_size.width) {\n                    command_line.option('char_width', char_size.width).refresh();\n                }\n            }\n            resize();\n            function resize() {\n                if (self.is(':visible')) {\n                    var width = fill.width();\n                    var height = fill.height();\n                    // prevent too many calculations in IE\n                    if (old_height !== height || old_width !== width) {\n                        self.resize();\n                    }\n                    old_height = height;\n                    old_width = width;\n                }\n            }\n            function create_resizers() {\n                self.resizer('unbind').resizer(resize);\n                font_resizer.resizer('unbind').resizer(function() {\n                    calculate_char_size();\n                    self.resize();\n                });\n            }\n            if (self.is(':visible')) {\n                create_resizers();\n            }\n            function observe_visibility() {\n                if (visibility_observer) {\n                    if (visibility_observer.unobserve) {\n                        visibility_observer.unobserve(self[0]);\n                    } else {\n                        clearInterval(visibility_observer);\n                    }\n                }\n                var was_enabled = self.enabled();\n                var visible = self.is(':visible');\n                if (visible) {\n                    create_resizers();\n                }\n                function visibility_checker() {\n                    if (self.is(':visible') && !visible) {\n                        visible = true;\n                        create_resizers();\n                        calculate_char_size();\n                        resize();\n                        if (was_enabled) {\n                            self.enable();\n                        }\n                    } else if (visible && !self.is(':visible')) {\n                        visible = false;\n                        was_enabled = $.terminal.active() === self && self.enabled();\n                        self.disable();\n                    }\n                }\n                if (window.IntersectionObserver) {\n                    visibility_observer = new IntersectionObserver(visibility_checker, {\n                        root: document.body\n                    });\n                    visibility_observer.observe(self[0]);\n                } else {\n                    visibility_observer = setInterval(visibility_checker, 400);\n                }\n            }\n            var in_dom = !!self.closest('body').length;\n            var MutationObsrv = window.MutationObserver || window.WebKitMutationObserver;\n            if (MutationObsrv) {\n                mutation_observer = new MutationObsrv(function() {\n                    if (self.closest('body').length) {\n                        if (!in_dom) {\n                            self.scroll_to_bottom();\n                            if (window.IntersectionObserver) {\n                                observe_visibility();\n                            }\n                            resize();\n                        }\n                        in_dom = true;\n                    } else if (in_dom) {\n                        in_dom = false;\n                    }\n                });\n                mutation_observer.observe(document.body, {childList: true});\n            }\n            if (in_dom) {\n                // check if element is in the DOM if not running IntersectionObserver\n                // don't make sense\n                observe_visibility();\n            }\n            command_queue.resolve();\n            // touch devices need touch event to get virtual keyboard\n            if (enabled && self.is(':visible') && !is_mobile) {\n                self.focus(undefined, true);\n            } else {\n                self.disable();\n            }\n            // -------------------------------------------------------------\n            // Run Login\n            if (is_function(global_login_fn)) {\n                self.login(global_login_fn, true, initialize);\n            } else {\n                initialize();\n            }\n            // -------------------------------------------------------------\n            // :: helper\n            function exec_spec(spec) {\n                var terminal = terminals.get()[spec[0]];\n                // execute if belong to this terminal\n                if (terminal && terminal_id === terminal.id()) {\n                    if (!spec[2]) {\n                        defer.resolve();\n                        return defer.promise();\n                    } else if (paused) {\n                        var defer = $.Deferred();\n                        resume_callbacks.push(function() {\n                            return terminal.exec(spec[2]).done(function() {\n                                terminal.save_state(spec[2], true, spec[1]);\n                                defer.resolve();\n                            });\n                        });\n                        return defer.promise();\n                    } else {\n                        return terminal.exec(spec[2]).done(function() {\n                            terminal.save_state(spec[2], true, spec[1]);\n                        });\n                    }\n                }\n            }\n            // exec from hash called in each terminal instance\n            if (settings.execHash) {\n                if (location.hash) {\n                    // wait until login is initialized\n                    setTimeout(function() {\n                        try {\n                            var hash = location.hash.replace(/^#/, '');\n                            // yes no var - local inside terminal\n                            hash_commands = JSON.parse(decodeURIComponent(hash));\n                            var i = 0;\n                            (function recur() {\n                                var spec = hash_commands[i++];\n                                if (spec) {\n                                    exec_spec(spec).done(recur);\n                                } else {\n                                    change_hash = true;\n                                }\n                            })();// */\n                        } catch (e) {\n                            // invalid json - ignore\n                        }\n                    });\n                } else {\n                    change_hash = true;\n                }\n            } else {\n                change_hash = true; // if enabled later\n            }\n            // change_hash = true; // exec can now change hash\n            // -------------------------------------------------------------\n            /* istanbul ignore next */\n            (function() {\n                var shift = false;\n                $(document).bind('keydown.terminal_' + self.id(), function(e) {\n                    if (e.shiftKey) {\n                        shift = true;\n                    }\n                }).bind('keyup.terminal_' + self.id(), function(e) {\n                    // in Google Chromium/Linux shiftKey is false\n                    if (e.shiftKey || e.which === 16) {\n                        shift = false;\n                    }\n                });\n                // this could work without calling scroll on wheel event but we\n                // need it for cases where you have mouse wheel work differently\n                // like with less command that scroll text\n                function mousewheel(event, delta) {\n                    if (!shift) {\n                        var interpreter = interpreters.top();\n                        var ret;\n                        if (is_function(interpreter.mousewheel)) {\n                            ret = interpreter.mousewheel(event, delta, self);\n                        } else if (is_function(settings.mousewheel)) {\n                            ret = settings.mousewheel(event, delta, self);\n                        }\n                        if (ret === true) {\n                            return;\n                        }\n                        if (have_scrollbar() || ret === false) {\n                            event.stopPropagation();\n                            event.preventDefault();\n                        }\n                        if (ret === false) {\n                            return false;\n                        }\n                        if (delta > 0) {\n                            self.scroll(-40);\n                        } else {\n                            self.scroll(40);\n                        }\n                    }\n                }\n                if ($.event.special.mousewheel) {\n                    // we keep mousewheel plugin just in case\n                    self.on('mousewheel', mousewheel);\n                } else {\n                    // detection take from:\n                    // https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n                    var event;\n                    var div = document.createElement(\"div\");\n                    if (\"onwheel\" in div) {\n                        event = \"wheel\"; // Modern browsers support \"wheel\"\n                    } else if (document.onmousewheel !== undefined) {\n                        // Webkit and IE support at least \"mousewheel\"\n                        event = \"mousewheel\";\n                    } else {\n                        // let's assume that remaining browsers are older Firefox\n                        event = \"DOMMouseScroll\";\n                    }\n                    div = null;\n                    self.on(event, function(e) {\n                        var delta;\n                        if (event === 'mousewheel') {\n                            delta = - 1 / 40 * e.originalEvent.wheelDelta;\n                        } else {\n                            delta = e.originalEvent.deltaY || e.originalEvent.detail;\n                        }\n                        mousewheel(e, -delta);\n                    });\n                }\n            })();\n        }); // make_interpreter\n        self.data('terminal', self);\n        return self;\n    }; // terminal plugin\n});\n"]}